

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 31 21:44:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataCOMMON
   208  0738                     __pidataCOMMON:
   209                           
   210                           ;initializer for _J2_Count
   211  0738  3401               	retlw	1
   212                           
   213                           ;initializer for _J1_Count
   214  0739  3401               	retlw	1
   215  0005                     _PORTAbits	set	5
   216  0006                     _PORTBbits	set	6
   217  0009                     _PORTEbits	set	9
   218  0009                     _PORTE	set	9
   219  0008                     _PORTD	set	8
   220  0007                     _PORTC	set	7
   221  0006                     _PORTB	set	6
   222  0005                     _PORTA	set	5
   223  0089                     _TRISE	set	137
   224  0088                     _TRISD	set	136
   225  0087                     _TRISC	set	135
   226  0086                     _TRISB	set	134
   227  0085                     _TRISA	set	133
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	cinit
   232  07EF                     start_initialization:	
   233                           ; #config settings
   234                           
   235  07EF                     __initialization:
   236                           
   237                           ; Initialize objects allocated to COMMON
   238  07EF  120A  118A  2738  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   239  07F4  00F5               	movwf	__pdataCOMMON& (0+127)
   240  07F5  120A  118A  2739  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   241  07FA  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   242                           
   243                           ; Clear objects allocated to COMMON
   244  07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   245  07FC                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  07FC                     __end_of__initialization:
   249  07FC  0183               	clrf	3
   250  07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMMON
   253  0077                     __pbssCOMMON:
   254  0077                     _game:
   255  0077                     	ds	1
   256                           
   257                           	psect	dataCOMMON
   258  0075                     __pdataCOMMON:
   259  0075                     _J2_Count:
   260  0075                     	ds	1
   261  0076                     _J1_Count:
   262  0076                     	ds	1
   263                           
   264                           	psect	cstackCOMMON
   265  0070                     __pcstackCOMMON:
   266  0070                     ?_setup:
   267  0070                     ??_setup:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_semaforo:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ??_semaforo:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ?_reset:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ??_reset:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287  0070                     	ds	3
   288  0073                     ??_main:
   289                           
   290                           ; 1 bytes @ 0x3
   291  0073                     	ds	2
   292                           
   293                           	psect	maintext
   294  0794                     __pmaintext:	
   295 ;;
   296 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   297 ;;
   298 ;; *************** function _main *****************
   299 ;; Defined at:
   300 ;;		line 99 in file "main.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2, status,0, pclath, cstack
   309 ;; Tracked objects:
   310 ;;		On entry : B00/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   314 ;;      Params:         0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0
   316 ;;      Temps:          2       0       0       0       0
   317 ;;      Totals:         2       0       0       0       0
   318 ;;Total ram usage:        2 bytes
   319 ;; Hardware stack levels required when called:    1
   320 ;; This function calls:
   321 ;;		_reset
   322 ;;		_semaforo
   323 ;;		_setup
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _main
   331  0794                     _main:
   332  0794                     l699:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   335                           
   336                           
   337                           ;main.c: 100:     setup();
   338  0794  120A  118A  2746  120A  118A  	fcall	_setup
   339  0799                     l701:
   340                           
   341                           ;main.c: 102:         if (PORTAbits.RA2 == 0){
   342  0799  1283               	bcf	3,5	;RP0=0, select bank0
   343  079A  1303               	bcf	3,6	;RP1=0, select bank0
   344  079B  1905               	btfsc	5,2	;volatile
   345  079C  2F9E               	goto	u11
   346  079D  2F9F               	goto	u10
   347  079E                     u11:
   348  079E  2FAA               	goto	l707
   349  079F                     u10:
   350  079F                     l703:
   351                           
   352                           ;main.c: 103:             reset();
   353  079F  120A  118A  273A  120A  118A  	fcall	_reset
   354  07A4                     l705:
   355                           
   356                           ;main.c: 104:             semaforo();
   357  07A4  120A  118A  276C  120A  118A  	fcall	_semaforo
   358                           
   359                           ;main.c: 105:         }
   360  07A9  2FE6               	goto	l733
   361  07AA                     l707:
   362                           
   363                           ;main.c: 107:             _delay((unsigned long)((50)*(8000000/4000.0)));
   364  07AA  3082               	movlw	130
   365  07AB  00F4               	movwf	??_main+1
   366  07AC  30DD               	movlw	221
   367  07AD  00F3               	movwf	??_main
   368  07AE                     u77:
   369  07AE  0BF3               	decfsz	??_main,f
   370  07AF  2FAE               	goto	u77
   371  07B0  0BF4               	decfsz	??_main+1,f
   372  07B1  2FAE               	goto	u77
   373  07B2  2FB3               	nop2
   374  07B3  2FE6               	goto	l733
   375  07B4                     l709:
   376                           
   377                           ;main.c: 110:             _delay((unsigned long)((50)*(8000000/4000.0)));
   378  07B4  3082               	movlw	130
   379  07B5  00F4               	movwf	??_main+1
   380  07B6  30DD               	movlw	221
   381  07B7  00F3               	movwf	??_main
   382  07B8                     u87:
   383  07B8  0BF3               	decfsz	??_main,f
   384  07B9  2FB8               	goto	u87
   385  07BA  0BF4               	decfsz	??_main+1,f
   386  07BB  2FB8               	goto	u87
   387  07BC  2FBD               	nop2
   388  07BD                     l711:
   389                           
   390                           ;main.c: 111:             if (PORTAbits.RA0 == 0){
   391  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   392  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   393  07BF  1805               	btfsc	5,0	;volatile
   394  07C0  2FC2               	goto	u21
   395  07C1  2FC3               	goto	u20
   396  07C2                     u21:
   397  07C2  2FD3               	goto	l57
   398  07C3                     u20:
   399  07C3                     l713:
   400                           
   401                           ;main.c: 112:                 if(J1_Count == 0){
   402  07C3  0876               	movf	_J1_Count,w
   403  07C4  1D03               	btfss	3,2
   404  07C5  2FC7               	goto	u31
   405  07C6  2FC8               	goto	u30
   406  07C7                     u31:
   407  07C7  2FCA               	goto	l719
   408  07C8                     u30:
   409  07C8                     l715:
   410                           
   411                           ;main.c: 113:                     PORTBbits.RB0 = 1;
   412  07C8  1406               	bsf	6,0	;volatile
   413  07C9                     l717:
   414                           
   415                           ;main.c: 114:                     game = 0;
   416  07C9  01F7               	clrf	_game
   417  07CA                     l719:
   418                           
   419                           ;main.c: 116:                 PORTC = J1_Count;
   420  07CA  0876               	movf	_J1_Count,w
   421  07CB  0087               	movwf	7	;volatile
   422  07CC                     l721:
   423                           
   424                           ;main.c: 117:                 J1_Count = J1_Count*2;
   425  07CC  0876               	movf	_J1_Count,w
   426  07CD  00F3               	movwf	??_main
   427  07CE  0773               	addwf	??_main,w
   428  07CF  00F4               	movwf	??_main+1
   429  07D0  0874               	movf	??_main+1,w
   430  07D1  00F6               	movwf	_J1_Count
   431                           
   432                           ;main.c: 118:             }
   433  07D2  2FE6               	goto	l733
   434  07D3                     l57:	
   435                           ;main.c: 119:             else if (PORTAbits.RA1 == 0){
   436                           
   437  07D3  1885               	btfsc	5,1	;volatile
   438  07D4  2FD6               	goto	u41
   439  07D5  2FD7               	goto	u40
   440  07D6                     u41:
   441  07D6  2FE6               	goto	l733
   442  07D7                     u40:
   443  07D7                     l723:
   444                           
   445                           ;main.c: 120:                 if(J2_Count == 0){
   446  07D7  0875               	movf	_J2_Count,w
   447  07D8  1D03               	btfss	3,2
   448  07D9  2FDB               	goto	u51
   449  07DA  2FDC               	goto	u50
   450  07DB                     u51:
   451  07DB  2FDE               	goto	l729
   452  07DC                     u50:
   453  07DC                     l725:
   454                           
   455                           ;main.c: 121:                     PORTBbits.RB1 = 1;
   456  07DC  1486               	bsf	6,1	;volatile
   457  07DD                     l727:
   458                           
   459                           ;main.c: 122:                     game = 0;
   460  07DD  01F7               	clrf	_game
   461  07DE                     l729:
   462                           
   463                           ;main.c: 124:                 PORTD = J2_Count;
   464  07DE  0875               	movf	_J2_Count,w
   465  07DF  0088               	movwf	8	;volatile
   466  07E0                     l731:
   467                           
   468                           ;main.c: 125:                 J2_Count = J2_Count*2;
   469  07E0  0875               	movf	_J2_Count,w
   470  07E1  00F3               	movwf	??_main
   471  07E2  0773               	addwf	??_main,w
   472  07E3  00F4               	movwf	??_main+1
   473  07E4  0874               	movf	??_main+1,w
   474  07E5  00F5               	movwf	_J2_Count
   475  07E6                     l733:
   476                           
   477                           ;main.c: 109:         while(game == 1){
   478  07E6  0377               	decf	_game,w
   479  07E7  1903               	btfsc	3,2
   480  07E8  2FEA               	goto	u61
   481  07E9  2FEB               	goto	u60
   482  07EA                     u61:
   483  07EA  2FB4               	goto	l709
   484  07EB                     u60:
   485  07EB  2F99               	goto	l701
   486  07EC  120A  118A  2800   	ljmp	start
   487  07EF                     __end_of_main:
   488                           
   489                           	psect	text1
   490  0746                     __ptext1:	
   491 ;; *************** function _setup *****************
   492 ;; Defined at:
   493 ;;		line 51 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _setup
   522  0746                     _setup:
   523  0746                     l657:	
   524                           ;incstack = 0
   525                           ; Regs used in _setup: [wreg+status,2]
   526                           
   527                           
   528                           ;main.c: 53:     ANSEL = 0;
   529  0746  1683               	bsf	3,5	;RP0=1, select bank3
   530  0747  1703               	bsf	3,6	;RP1=1, select bank3
   531  0748  0188               	clrf	8	;volatile
   532  0749                     l659:
   533                           
   534                           ;main.c: 54:     TRISA = 0b00000111;
   535  0749  3007               	movlw	7
   536  074A  1683               	bsf	3,5	;RP0=1, select bank1
   537  074B  1303               	bcf	3,6	;RP1=0, select bank1
   538  074C  0085               	movwf	5	;volatile
   539  074D                     l661:
   540                           
   541                           ;main.c: 55:     PORTA = 0;
   542  074D  1283               	bcf	3,5	;RP0=0, select bank0
   543  074E  1303               	bcf	3,6	;RP1=0, select bank0
   544  074F  0185               	clrf	5	;volatile
   545  0750                     l663:
   546                           
   547                           ;main.c: 58:     ANSELH = 0;
   548  0750  1683               	bsf	3,5	;RP0=1, select bank3
   549  0751  1703               	bsf	3,6	;RP1=1, select bank3
   550  0752  0189               	clrf	9	;volatile
   551  0753                     l665:
   552                           
   553                           ;main.c: 59:     TRISB = 0;
   554  0753  1683               	bsf	3,5	;RP0=1, select bank1
   555  0754  1303               	bcf	3,6	;RP1=0, select bank1
   556  0755  0186               	clrf	6	;volatile
   557  0756                     l667:
   558                           
   559                           ;main.c: 60:     PORTB = 0;
   560  0756  1283               	bcf	3,5	;RP0=0, select bank0
   561  0757  1303               	bcf	3,6	;RP1=0, select bank0
   562  0758  0186               	clrf	6	;volatile
   563  0759                     l669:
   564                           
   565                           ;main.c: 62:     TRISC = 0;
   566  0759  1683               	bsf	3,5	;RP0=1, select bank1
   567  075A  1303               	bcf	3,6	;RP1=0, select bank1
   568  075B  0187               	clrf	7	;volatile
   569  075C                     l671:
   570                           
   571                           ;main.c: 63:     PORTC = 0;
   572  075C  1283               	bcf	3,5	;RP0=0, select bank0
   573  075D  1303               	bcf	3,6	;RP1=0, select bank0
   574  075E  0187               	clrf	7	;volatile
   575  075F                     l673:
   576                           
   577                           ;main.c: 65:     TRISD = 0;
   578  075F  1683               	bsf	3,5	;RP0=1, select bank1
   579  0760  1303               	bcf	3,6	;RP1=0, select bank1
   580  0761  0188               	clrf	8	;volatile
   581  0762                     l675:
   582                           
   583                           ;main.c: 66:     PORTD = 0;
   584  0762  1283               	bcf	3,5	;RP0=0, select bank0
   585  0763  1303               	bcf	3,6	;RP1=0, select bank0
   586  0764  0188               	clrf	8	;volatile
   587  0765                     l677:
   588                           
   589                           ;main.c: 68:     TRISE = 0;
   590  0765  1683               	bsf	3,5	;RP0=1, select bank1
   591  0766  1303               	bcf	3,6	;RP1=0, select bank1
   592  0767  0189               	clrf	9	;volatile
   593  0768                     l679:
   594                           
   595                           ;main.c: 69:     PORTE = 0;
   596  0768  1283               	bcf	3,5	;RP0=0, select bank0
   597  0769  1303               	bcf	3,6	;RP1=0, select bank0
   598  076A  0189               	clrf	9	;volatile
   599  076B                     l41:
   600  076B  0008               	return
   601  076C                     __end_of_setup:
   602                           
   603                           	psect	text2
   604  076C                     __ptext2:	
   605 ;; *************** function _semaforo *****************
   606 ;; Defined at:
   607 ;;		line 72 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          3       0       0       0       0
   624 ;;      Totals:         3       0       0       0       0
   625 ;;Total ram usage:        3 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _semaforo
   636  076C                     _semaforo:
   637  076C                     l681:	
   638                           ;incstack = 0
   639                           ; Regs used in _semaforo: [wreg]
   640                           
   641                           
   642                           ;main.c: 73:     PORTEbits.RE0 = 1;
   643  076C  1283               	bcf	3,5	;RP0=0, select bank0
   644  076D  1303               	bcf	3,6	;RP1=0, select bank0
   645  076E  1409               	bsf	9,0	;volatile
   646  076F                     l683:
   647                           
   648                           ;main.c: 74:     _delay((unsigned long)((100)*(8000000/4000.0)));
   649  076F  3002               	movlw	2
   650  0770  00F2               	movwf	??_semaforo+2
   651  0771  3004               	movlw	4
   652  0772  00F1               	movwf	??_semaforo+1
   653  0773  30BA               	movlw	186
   654  0774  00F0               	movwf	??_semaforo
   655  0775                     u97:
   656  0775  0BF0               	decfsz	??_semaforo,f
   657  0776  2F75               	goto	u97
   658  0777  0BF1               	decfsz	??_semaforo+1,f
   659  0778  2F75               	goto	u97
   660  0779  0BF2               	decfsz	??_semaforo+2,f
   661  077A  2F75               	goto	u97
   662  077B  0000               	nop
   663  077C                     l685:
   664                           
   665                           ;main.c: 75:     PORTEbits.RE0 = 0;
   666  077C  1283               	bcf	3,5	;RP0=0, select bank0
   667  077D  1303               	bcf	3,6	;RP1=0, select bank0
   668  077E  1009               	bcf	9,0	;volatile
   669  077F                     l687:
   670                           
   671                           ;main.c: 77:     PORTEbits.RE1 = 1;
   672  077F  1489               	bsf	9,1	;volatile
   673                           
   674                           ;main.c: 78:     _delay((unsigned long)((100)*(8000000/4000.0)));
   675  0780  3002               	movlw	2
   676  0781  00F2               	movwf	??_semaforo+2
   677  0782  3004               	movlw	4
   678  0783  00F1               	movwf	??_semaforo+1
   679  0784  30BA               	movlw	186
   680  0785  00F0               	movwf	??_semaforo
   681  0786                     u107:
   682  0786  0BF0               	decfsz	??_semaforo,f
   683  0787  2F86               	goto	u107
   684  0788  0BF1               	decfsz	??_semaforo+1,f
   685  0789  2F86               	goto	u107
   686  078A  0BF2               	decfsz	??_semaforo+2,f
   687  078B  2F86               	goto	u107
   688  078C  0000               	nop
   689  078D                     l689:
   690                           
   691                           ;main.c: 79:     PORTEbits.RE1 = 0;
   692  078D  1283               	bcf	3,5	;RP0=0, select bank0
   693  078E  1303               	bcf	3,6	;RP1=0, select bank0
   694  078F  1089               	bcf	9,1	;volatile
   695  0790                     l691:
   696                           
   697                           ;main.c: 81:     PORTEbits.RE2 = 1;
   698  0790  1509               	bsf	9,2	;volatile
   699  0791                     l693:
   700                           
   701                           ;main.c: 82:     game = 1;
   702  0791  01F7               	clrf	_game
   703  0792  0AF7               	incf	_game,f
   704  0793                     l44:
   705  0793  0008               	return
   706  0794                     __end_of_semaforo:
   707                           
   708                           	psect	text3
   709  073A                     __ptext3:	
   710 ;; *************** function _reset *****************
   711 ;; Defined at:
   712 ;;		line 85 in file "main.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		status,2
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _reset
   741  073A                     _reset:
   742  073A                     l695:	
   743                           ;incstack = 0
   744                           ; Regs used in _reset: [status,2]
   745                           
   746                           
   747                           ;main.c: 86:     J1_Count = 1;
   748  073A  01F6               	clrf	_J1_Count
   749  073B  0AF6               	incf	_J1_Count,f
   750                           
   751                           ;main.c: 87:     J2_Count = 1;
   752  073C  01F5               	clrf	_J2_Count
   753  073D  0AF5               	incf	_J2_Count,f
   754                           
   755                           ;main.c: 88:     PORTEbits.RE2 = 0;
   756  073E  1283               	bcf	3,5	;RP0=0, select bank0
   757  073F  1303               	bcf	3,6	;RP1=0, select bank0
   758  0740  1109               	bcf	9,2	;volatile
   759                           
   760                           ;main.c: 89:     PORTBbits.RB0 = 0;
   761  0741  1006               	bcf	6,0	;volatile
   762                           
   763                           ;main.c: 90:     PORTBbits.RB1 = 0;
   764  0742  1086               	bcf	6,1	;volatile
   765  0743                     l697:
   766                           
   767                           ;main.c: 91:     PORTC = 0;
   768  0743  0187               	clrf	7	;volatile
   769                           
   770                           ;main.c: 92:     PORTD = 0;
   771  0744  0188               	clrf	8	;volatile
   772  0745                     l47:
   773  0745  0008               	return
   774  0746                     __end_of_reset:
   775  007E                     btemp	set	126	;btemp
   776  007E                     wtemp0	set	126
   777                           
   778                           	psect	config
   779                           
   780                           ;Config register CONFIG1 @ 0x2007
   781                           ;	Oscillator Selection bits
   782                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   783                           ;	Watchdog Timer Enable bit
   784                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   785                           ;	Power-up Timer Enable bit
   786                           ;	PWRTE = OFF, PWRT disabled
   787                           ;	RE3/MCLR pin function select bit
   788                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   789                           ;	Code Protection bit
   790                           ;	CP = OFF, Program memory code protection is disabled
   791                           ;	Data Code Protection bit
   792                           ;	CPD = OFF, Data memory code protection is disabled
   793                           ;	Brown Out Reset Selection bits
   794                           ;	BOREN = OFF, BOR disabled
   795                           ;	Internal External Switchover bit
   796                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   797                           ;	Fail-Safe Clock Monitor Enabled bit
   798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   799                           ;	Low Voltage Programming Enable bit
   800                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   801                           ;	In-Circuit Debugger Mode bit
   802                           ;	DEBUG = 0x1, unprogrammed default
   803  2007                     	org	8199
   804  2007  20F1               	dw	8433
   805                           
   806                           ;Config register CONFIG2 @ 0x2008
   807                           ;	Brown-out Reset Selection bit
   808                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   809                           ;	Flash Program Memory Self Write Enable bits
   810                           ;	WRT = OFF, Write protection off
   811  2008                     	org	8200
   812  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                              _reset
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _reset
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 31 21:44:18 2021

                     l41 076B                       l44 0793                       l47 0745  
                     l57 07D3                       u10 079F                       u11 079E  
                     u20 07C3                       u21 07C2                       u30 07C8  
                     u31 07C7                       u40 07D7                       u41 07D6  
                     u50 07DC                       u51 07DB                       u60 07EB  
                     u61 07EA                       u77 07AE                       u87 07B8  
                     u97 0775                      l701 0799                      l711 07BD  
                    l703 079F                      l721 07CC                      l713 07C3  
                    l705 07A4                      l731 07E0                      l723 07D7  
                    l715 07C8                      l707 07AA                      l661 074D  
                    l725 07DC                      l717 07C9                      l709 07B4  
                    l733 07E6                      l671 075C                      l663 0750  
                    l727 07DD                      l719 07CA                      l681 076C  
                    l673 075F                      l665 0753                      l657 0746  
                    l729 07DE                      l691 0790                      l683 076F  
                    l675 0762                      l667 0756                      l659 0749  
                    l693 0791                      l685 077C                      l677 0765  
                    l669 0759                      l695 073A                      l687 077F  
                    l679 0768                      l697 0743                      l689 078D  
                    l699 0794                      u107 0786                     _game 0077  
                   _main 0794                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _reset 073A                    _setup 0746                    status 0003  
                  wtemp0 007E          __initialization 07EF             __end_of_main 07EF  
                 ??_main 0073                   ?_reset 0070                   ?_setup 0070  
                 _ANSELH 0189         __end_of_semaforo 0794             __pdataCOMMON 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_reset 0746  
          __end_of_setup 076C                  ??_reset 0070                  ??_setup 0070  
             __pmaintext 0794                ?_semaforo 0070                  __ptext1 0746  
                __ptext2 076C                  __ptext3 073A     end_of_initialization 07FC  
             ??_semaforo 0070                _PORTAbits 0005                _PORTBbits 0006  
              _PORTEbits 0009            __pidataCOMMON 0738      start_initialization 07EF  
            __pbssCOMMON 0077                ___latbits 0002        __size_of_semaforo 0028  
               _J1_Count 0076                 _J2_Count 0075           __size_of_reset 000C  
         __size_of_setup 0026            __size_of_main 005B                 _semaforo 076C  
