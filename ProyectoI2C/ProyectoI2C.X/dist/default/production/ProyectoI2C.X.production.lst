

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 11 00:06:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  008F                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  0105                     	;# 
   517  0107                     	;# 
   518  0108                     	;# 
   519  0109                     	;# 
   520  010C                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0187                     	;# 
   527  0188                     	;# 
   528  0189                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  000D                     	;# 
   545  000E                     	;# 
   546  000E                     	;# 
   547  000F                     	;# 
   548  0010                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0013                     	;# 
   552  0014                     	;# 
   553  0015                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  001D                     	;# 
   564  001E                     	;# 
   565  001F                     	;# 
   566  0081                     	;# 
   567  0085                     	;# 
   568  0086                     	;# 
   569  0087                     	;# 
   570  0088                     	;# 
   571  0089                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  008F                     	;# 
   576  0090                     	;# 
   577  0091                     	;# 
   578  0092                     	;# 
   579  0093                     	;# 
   580  0093                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  0105                     	;# 
   595  0107                     	;# 
   596  0108                     	;# 
   597  0109                     	;# 
   598  010C                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010F                     	;# 
   603  0185                     	;# 
   604  0187                     	;# 
   605  0188                     	;# 
   606  0189                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  0013                     _SSPBUF	set	19
   610  0014                     _SSPCON	set	20
   611  0019                     _TXREG	set	25
   612  001A                     _RCREG	set	26
   613  000C                     _PIR1bits	set	12
   614  0009                     _PORTE	set	9
   615  0008                     _PORTD	set	8
   616  0006                     _PORTB	set	6
   617  0005                     _PORTA	set	5
   618  000B                     _INTCONbits	set	11
   619  0018                     _RCSTAbits	set	24
   620  0094                     _SSPSTAT	set	148
   621  0093                     _SSPADD	set	147
   622  0091                     _SSPCON2	set	145
   623  008F                     _OSCCONbits	set	143
   624  0089                     _TRISE	set	137
   625  0088                     _TRISD	set	136
   626  0096                     _IOCB	set	150
   627  0086                     _TRISB	set	134
   628  0085                     _TRISA	set	133
   629  008C                     _PIE1bits	set	140
   630  0099                     _SPBRG	set	153
   631  0098                     _TXSTAbits	set	152
   632  048C                     _ACKEN	set	1164
   633  048D                     _ACKDT	set	1165
   634  048B                     _RCEN	set	1163
   635  048A                     _PEN	set	1162
   636  0488                     _SEN	set	1160
   637  043C                     _TRISC4	set	1084
   638  043B                     _TRISC3	set	1083
   639  0189                     _ANSELH	set	393
   640  0188                     _ANSEL	set	392
   641  0187                     _BAUDCTLbits	set	391
   642                           
   643                           	psect	cinit
   644  0011                     start_initialization:	
   645                           ; #config settings
   646                           
   647  0011                     __initialization:
   648                           
   649                           ; Clear objects allocated to COMMON
   650  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   651  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   652                           
   653                           ; Clear objects allocated to BANK0
   654  0013  1283               	bcf	3,5	;RP0=0, select bank0
   655  0014  1303               	bcf	3,6	;RP1=0, select bank0
   656  0015  01C3               	clrf	__pbssBANK0& (0+127)
   657  0016  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   658  0017  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   659  0018  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   660  0019  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   661  001A  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   662  001B  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   663  001C  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   664  001D  01CB               	clrf	(__pbssBANK0+8)& (0+127)
   665  001E  01CC               	clrf	(__pbssBANK0+9)& (0+127)
   666  001F  01CD               	clrf	(__pbssBANK0+10)& (0+127)
   667  0020  01CE               	clrf	(__pbssBANK0+11)& (0+127)
   668  0021                     end_of_initialization:	
   669                           ;End of C runtime variable initialization code
   670                           
   671  0021                     __end_of__initialization:
   672  0021  0183               	clrf	3
   673  0022  120A  118A  28C2   	ljmp	_main	;jump to C main() function
   674                           
   675                           	psect	bssCOMMON
   676  0078                     __pbssCOMMON:
   677  0078                     _cont:
   678  0078                     	ds	2
   679                           
   680                           	psect	bssBANK0
   681  0043                     __pbssBANK0:
   682  0043                     _sensor_value:
   683  0043                     	ds	9
   684  004C                     _handshake:
   685  004C                     	ds	2
   686  004E                     _read_value:
   687  004E                     	ds	1
   688                           
   689                           	psect	cstackCOMMON
   690  0070                     __pcstackCOMMON:
   691  0070                     ?_I2C_Master_Start:
   692  0070                     ?_I2C_Master_Stop:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_PORTS_MANAGER_Initialize:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_adxl345_init:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_SYSTEM_Initialize:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_myISR:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ??_myISR:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_main:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_I2C_Master_Wait:	
   714                           ; 1 bytes @ 0x0
   715                           
   716                           
   717                           ; 1 bytes @ 0x0
   718  0070                     	ds	4
   719  0074                     ??_I2C_Master_Start:
   720  0074                     ?_I2C_Master_Write:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ??_I2C_Master_Stop:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     ??_PORTS_MANAGER_Initialize:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0074                     ??_I2C_Master_Wait:	
   730                           ; 1 bytes @ 0x4
   731                           
   732  0074                     ??___lldiv:	
   733                           ; 1 bytes @ 0x4
   734                           
   735  0074                     ??___aldiv:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     ?_I2C_Master_Read:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     I2C_Master_Write@d:	
   742                           ; 2 bytes @ 0x4
   743                           
   744  0074                     I2C_Master_Read@a:	
   745                           ; 2 bytes @ 0x4
   746                           
   747                           
   748                           ; 2 bytes @ 0x4
   749  0074                     	ds	1
   750  0075                     ??_SYSTEM_Initialize:
   751                           
   752                           ; 1 bytes @ 0x5
   753  0075                     	ds	1
   754  0076                     ??_I2C_Master_Write:
   755  0076                     ??_I2C_Master_Read:	
   756                           ; 1 bytes @ 0x6
   757                           
   758  0076                     ??_adxl345_write:	
   759                           ; 1 bytes @ 0x6
   760                           
   761  0076                     ??_adxl345_init:	
   762                           ; 1 bytes @ 0x6
   763                           
   764                           
   765                           ; 1 bytes @ 0x6
   766  0076                     	ds	2
   767  0078                     ??_adxl345_read:
   768                           
   769                           	psect	cstackBANK0
   770  0020                     __pcstackBANK0:	
   771                           ; 1 bytes @ 0x8
   772                           
   773  0020                     ?_adxl345_write:
   774  0020                     ?___lldiv:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0020                     ?___aldiv:	
   778                           ; 4 bytes @ 0x0
   779                           
   780  0020                     adxl345_write@add:	
   781                           ; 4 bytes @ 0x0
   782                           
   783  0020                     I2C_Master_Read@temp:	
   784                           ; 2 bytes @ 0x0
   785                           
   786  0020                     ___lldiv@divisor:	
   787                           ; 2 bytes @ 0x0
   788                           
   789  0020                     ___aldiv@divisor:	
   790                           ; 4 bytes @ 0x0
   791                           
   792                           
   793                           ; 4 bytes @ 0x0
   794  0020                     	ds	2
   795  0022                     ?_adxl345_read:
   796  0022                     adxl345_write@data:	
   797                           ; 2 bytes @ 0x2
   798                           
   799  0022                     adxl345_read@add:	
   800                           ; 2 bytes @ 0x2
   801                           
   802                           
   803                           ; 2 bytes @ 0x2
   804  0022                     	ds	2
   805  0024                     adxl345_read@retval:
   806  0024                     ___lldiv@dividend:	
   807                           ; 2 bytes @ 0x4
   808                           
   809  0024                     ___aldiv@dividend:	
   810                           ; 4 bytes @ 0x4
   811                           
   812                           
   813                           ; 4 bytes @ 0x4
   814  0024                     	ds	4
   815  0028                     ___aldiv@counter:
   816  0028                     ___lldiv@quotient:	
   817                           ; 1 bytes @ 0x8
   818                           
   819                           
   820                           ; 4 bytes @ 0x8
   821  0028                     	ds	1
   822  0029                     ___aldiv@sign:
   823                           
   824                           ; 1 bytes @ 0x9
   825  0029                     	ds	1
   826  002A                     ___aldiv@quotient:
   827                           
   828                           ; 4 bytes @ 0xA
   829  002A                     	ds	2
   830  002C                     ___lldiv@counter:
   831                           
   832                           ; 1 bytes @ 0xC
   833  002C                     	ds	1
   834  002D                     ?_I2C_Master_Init:
   835  002D                     I2C_Master_Init@c:	
   836                           ; 1 bytes @ 0xD
   837                           
   838                           
   839                           ; 4 bytes @ 0xD
   840  002D                     	ds	1
   841  002E                     ?_USART_Initialize:
   842  002E                     USART_Initialize@baudrate:	
   843                           ; 1 bytes @ 0xE
   844                           
   845                           
   846                           ; 4 bytes @ 0xE
   847  002E                     	ds	3
   848  0031                     ??_I2C_Master_Init:
   849                           
   850                           ; 1 bytes @ 0x11
   851  0031                     	ds	1
   852  0032                     ??_USART_Initialize:
   853                           
   854                           ; 1 bytes @ 0x12
   855  0032                     	ds	12
   856  003E                     USART_Initialize@x:
   857                           
   858                           ; 4 bytes @ 0x1E
   859  003E                     	ds	4
   860  0042                     ??_main:
   861                           
   862                           ; 1 bytes @ 0x22
   863  0042                     	ds	1
   864                           
   865                           	psect	maintext
   866  00C2                     __pmaintext:	
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 55 in file "main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : B00/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       1       0       0       0
   889 ;;      Totals:         0       1       0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels required when called:    5
   892 ;; This function calls:
   893 ;;		_SYSTEM_Initialize
   894 ;;		_adxl345_init
   895 ;;		_adxl345_read
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _main
   903  00C2                     _main:
   904  00C2                     l1262:	
   905                           ;incstack = 0
   906                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   907                           
   908                           
   909                           ;main.c: 56:     SYSTEM_Initialize();
   910  00C2  120A  118A  2357  120A  118A  	fcall	_SYSTEM_Initialize
   911                           
   912                           ;main.c: 57:     adxl345_init();
   913  00C7  120A  118A  22CD  120A  118A  	fcall	_adxl345_init
   914  00CC                     l1264:
   915                           
   916                           ;main.c: 58:     OSCCONbits.IRCF = 0b111;
   917  00CC  3070               	movlw	112
   918  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   919  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   920  00CF  048F               	iorwf	15,f	;volatile
   921  00D0                     l1266:
   922                           
   923                           ;main.c: 62:         if(read_value == 65){
   924  00D0  3041               	movlw	65
   925  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   926  00D2  064E               	xorwf	_read_value,w
   927  00D3  1D03               	btfss	3,2
   928  00D4  28D6               	goto	u881
   929  00D5  28D7               	goto	u880
   930  00D6                     u881:
   931  00D6  28DB               	goto	l1270
   932  00D7                     u880:
   933  00D7                     l1268:
   934                           
   935                           ;main.c: 63:             handshake = 1;
   936  00D7  3001               	movlw	1
   937  00D8  00CC               	movwf	_handshake
   938  00D9  3000               	movlw	0
   939  00DA  00CD               	movwf	_handshake+1
   940  00DB                     l1270:
   941                           
   942                           ;main.c: 66:         if(read_value == 66){
   943  00DB  3042               	movlw	66
   944  00DC  064E               	xorwf	_read_value,w
   945  00DD  1D03               	btfss	3,2
   946  00DE  28E0               	goto	u891
   947  00DF  28E1               	goto	u890
   948  00E0                     u891:
   949  00E0  28E3               	goto	l1274
   950  00E1                     u890:
   951  00E1                     l1272:
   952                           
   953                           ;main.c: 67:             handshake = 0;
   954  00E1  01CC               	clrf	_handshake
   955  00E2  01CD               	clrf	_handshake+1
   956  00E3                     l1274:
   957                           
   958                           ;main.c: 70:         sensor_value[0]=adxl345_read(0x32);
   959  00E3  3032               	movlw	50
   960  00E4  00A2               	movwf	adxl345_read@add
   961  00E5  3000               	movlw	0
   962  00E6  00A3               	movwf	adxl345_read@add+1
   963  00E7  120A  118A  221C  120A  118A  	fcall	_adxl345_read
   964  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   965  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   966  00EE  0822               	movf	?_adxl345_read,w
   967  00EF  00C2               	movwf	??_main
   968  00F0  0842               	movf	??_main,w
   969  00F1  00C3               	movwf	_sensor_value
   970  00F2                     l1276:
   971                           
   972                           ;main.c: 71:         sensor_value[1]=adxl345_read(0x33);
   973  00F2  3033               	movlw	51
   974  00F3  00A2               	movwf	adxl345_read@add
   975  00F4  3000               	movlw	0
   976  00F5  00A3               	movwf	adxl345_read@add+1
   977  00F6  120A  118A  221C  120A  118A  	fcall	_adxl345_read
   978  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   979  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   980  00FD  0822               	movf	?_adxl345_read,w
   981  00FE  00C2               	movwf	??_main
   982  00FF  0842               	movf	??_main,w
   983  0100  00C4               	movwf	_sensor_value+1
   984  0101                     l1278:
   985                           
   986                           ;main.c: 73:         sensor_value[2]=adxl345_read(0x34);
   987  0101  3034               	movlw	52
   988  0102  00A2               	movwf	adxl345_read@add
   989  0103  3000               	movlw	0
   990  0104  00A3               	movwf	adxl345_read@add+1
   991  0105  120A  118A  221C  120A  118A  	fcall	_adxl345_read
   992  010A  1283               	bcf	3,5	;RP0=0, select bank0
   993  010B  1303               	bcf	3,6	;RP1=0, select bank0
   994  010C  0822               	movf	?_adxl345_read,w
   995  010D  00C2               	movwf	??_main
   996  010E  0842               	movf	??_main,w
   997  010F  00C5               	movwf	_sensor_value+2
   998  0110                     l1280:
   999                           
  1000                           ;main.c: 74:         sensor_value[3]=adxl345_read(0x35);
  1001  0110  3035               	movlw	53
  1002  0111  00A2               	movwf	adxl345_read@add
  1003  0112  3000               	movlw	0
  1004  0113  00A3               	movwf	adxl345_read@add+1
  1005  0114  120A  118A  221C  120A  118A  	fcall	_adxl345_read
  1006  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1007  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1008  011B  0822               	movf	?_adxl345_read,w
  1009  011C  00C2               	movwf	??_main
  1010  011D  0842               	movf	??_main,w
  1011  011E  00C6               	movwf	_sensor_value+3
  1012  011F                     l1282:
  1013                           
  1014                           ;main.c: 76:         sensor_value[4]=adxl345_read(0x36);
  1015  011F  3036               	movlw	54
  1016  0120  00A2               	movwf	adxl345_read@add
  1017  0121  3000               	movlw	0
  1018  0122  00A3               	movwf	adxl345_read@add+1
  1019  0123  120A  118A  221C  120A  118A  	fcall	_adxl345_read
  1020  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1022  012A  0822               	movf	?_adxl345_read,w
  1023  012B  00C2               	movwf	??_main
  1024  012C  0842               	movf	??_main,w
  1025  012D  00C7               	movwf	_sensor_value+4
  1026  012E                     l1284:
  1027                           
  1028                           ;main.c: 77:         sensor_value[5]=adxl345_read(0x37);
  1029  012E  3037               	movlw	55
  1030  012F  00A2               	movwf	adxl345_read@add
  1031  0130  3000               	movlw	0
  1032  0131  00A3               	movwf	adxl345_read@add+1
  1033  0132  120A  118A  221C  120A  118A  	fcall	_adxl345_read
  1034  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0139  0822               	movf	?_adxl345_read,w
  1037  013A  00C2               	movwf	??_main
  1038  013B  0842               	movf	??_main,w
  1039  013C  00C8               	movwf	_sensor_value+5
  1040  013D  28D0               	goto	l1266
  1041  013E  120A  118A  280E   	ljmp	start
  1042  0141                     __end_of_main:
  1043                           
  1044                           	psect	text1
  1045  021C                     __ptext1:	
  1046 ;; *************** function _adxl345_read *****************
  1047 ;; Defined at:
  1048 ;;		line 28 in file "adxl345.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  add             2    2[BANK0 ] int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  retval          2    4[BANK0 ] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2    2[BANK0 ] int 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       2       0       0       0
  1063 ;;      Locals:         0       2       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         0       4       0       0       0
  1066 ;;Total ram usage:        4 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    3
  1069 ;; This function calls:
  1070 ;;		_I2C_Master_Read
  1071 ;;		_I2C_Master_Start
  1072 ;;		_I2C_Master_Stop
  1073 ;;		_I2C_Master_Write
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _adxl345_read
  1081  021C                     _adxl345_read:
  1082  021C                     l1244:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _adxl345_read: [wreg+status,2+status,0+pclath+cstack]
  1085                           
  1086                           
  1087                           ;adxl345.c: 29:          int retval;;adxl345.c: 30:          I2C_Master_Start();
  1088  021C  120A  118A  23BB  120A  118A  	fcall	_I2C_Master_Start
  1089                           
  1090                           ;adxl345.c: 31:          I2C_Master_Write(0xA6);
  1091  0221  30A6               	movlw	166
  1092  0222  00F4               	movwf	I2C_Master_Write@d
  1093  0223  3000               	movlw	0
  1094  0224  00F5               	movwf	I2C_Master_Write@d+1
  1095  0225  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Write
  1096                           
  1097                           ;adxl345.c: 32:          I2C_Master_Write(add);
  1098  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1099  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1100  022C  0823               	movf	adxl345_read@add+1,w
  1101  022D  00F5               	movwf	I2C_Master_Write@d+1
  1102  022E  0822               	movf	adxl345_read@add,w
  1103  022F  00F4               	movwf	I2C_Master_Write@d
  1104  0230  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Write
  1105                           
  1106                           ;adxl345.c: 33:          I2C_Master_Start();
  1107  0235  120A  118A  23BB  120A  118A  	fcall	_I2C_Master_Start
  1108                           
  1109                           ;adxl345.c: 34:          I2C_Master_Write(0xA7);
  1110  023A  30A7               	movlw	167
  1111  023B  00F4               	movwf	I2C_Master_Write@d
  1112  023C  3000               	movlw	0
  1113  023D  00F5               	movwf	I2C_Master_Write@d+1
  1114  023E  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Write
  1115                           
  1116                           ;adxl345.c: 35:          retval=I2C_Master_Read(0);
  1117  0243  3000               	movlw	0
  1118  0244  00F4               	movwf	I2C_Master_Read@a
  1119  0245  00F5               	movwf	I2C_Master_Read@a+1
  1120  0246  120A  118A  22FE  120A  118A  	fcall	_I2C_Master_Read
  1121  024B  0875               	movf	?_I2C_Master_Read+1,w
  1122  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1123  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1124  024E  00A5               	movwf	adxl345_read@retval+1
  1125  024F  0874               	movf	?_I2C_Master_Read,w
  1126  0250  00A4               	movwf	adxl345_read@retval
  1127                           
  1128                           ;adxl345.c: 36:          I2C_Master_Stop();
  1129  0251  120A  118A  23B2  120A  118A  	fcall	_I2C_Master_Stop
  1130  0256                     l1246:
  1131                           
  1132                           ;adxl345.c: 37:          return retval;
  1133  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0258  0825               	movf	adxl345_read@retval+1,w
  1136  0259  00A3               	movwf	?_adxl345_read+1
  1137  025A  0824               	movf	adxl345_read@retval,w
  1138  025B  00A2               	movwf	?_adxl345_read
  1139  025C                     l16:
  1140  025C  0008               	return
  1141  025D                     __end_of_adxl345_read:
  1142                           
  1143                           	psect	text2
  1144  02FE                     __ptext2:	
  1145 ;; *************** function _I2C_Master_Read *****************
  1146 ;; Defined at:
  1147 ;;		line 47 in file "i2c.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  a               2    4[COMMON] unsigned short 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  temp            2    0[BANK0 ] unsigned short 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2    4[COMMON] unsigned short 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         2       0       0       0       0
  1162 ;;      Locals:         0       2       0       0       0
  1163 ;;      Temps:          2       0       0       0       0
  1164 ;;      Totals:         4       2       0       0       0
  1165 ;;Total ram usage:        6 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    2
  1168 ;; This function calls:
  1169 ;;		_I2C_Master_Wait
  1170 ;; This function is called by:
  1171 ;;		_adxl345_read
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _I2C_Master_Read
  1177  02FE                     _I2C_Master_Read:
  1178  02FE                     l1202:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1181                           
  1182                           
  1183                           ;i2c.c: 47: unsigned short I2C_Master_Read(unsigned short a);i2c.c: 48: {;i2c.c: 49:   u
      +                          nsigned short temp;;i2c.c: 50:   I2C_Master_Wait();
  1184  02FE  120A  118A  239B  120A  118A  	fcall	_I2C_Master_Wait
  1185  0303                     l1204:
  1186                           
  1187                           ;i2c.c: 51:   RCEN = 1;
  1188  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0305  1591               	bsf	17,3	;volatile
  1191                           
  1192                           ;i2c.c: 52:   I2C_Master_Wait();
  1193  0306  120A  118A  239B  120A  118A  	fcall	_I2C_Master_Wait
  1194  030B                     l1206:
  1195                           
  1196                           ;i2c.c: 53:   temp = SSPBUF;
  1197  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1198  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1199  030D  0813               	movf	19,w	;volatile
  1200  030E  00F6               	movwf	??_I2C_Master_Read
  1201  030F  01F7               	clrf	??_I2C_Master_Read+1
  1202  0310  0876               	movf	??_I2C_Master_Read,w
  1203  0311  00A0               	movwf	I2C_Master_Read@temp
  1204  0312  0877               	movf	??_I2C_Master_Read+1,w
  1205  0313  00A1               	movwf	I2C_Master_Read@temp+1
  1206  0314                     l1208:
  1207                           
  1208                           ;i2c.c: 54:   I2C_Master_Wait();
  1209  0314  120A  118A  239B  120A  118A  	fcall	_I2C_Master_Wait
  1210  0319                     l1210:
  1211                           
  1212                           ;i2c.c: 55:   ACKDT = (a)?0:1;
  1213  0319  0874               	movf	I2C_Master_Read@a,w
  1214  031A  0475               	iorwf	I2C_Master_Read@a+1,w
  1215  031B  1903               	btfsc	3,2
  1216  031C  2B1E               	goto	u821
  1217  031D  2B22               	goto	u820
  1218  031E                     u821:
  1219  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1220  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1221  0320  1691               	bsf	17,5	;volatile
  1222  0321  2B25               	goto	u834
  1223  0322                     u820:
  1224  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1225  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1226  0324  1291               	bcf	17,5	;volatile
  1227  0325                     u834:
  1228  0325                     l1212:
  1229                           
  1230                           ;i2c.c: 56:   ACKEN = 1;
  1231  0325  1611               	bsf	17,4	;volatile
  1232  0326                     l1214:
  1233                           
  1234                           ;i2c.c: 57:   return temp;
  1235  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0328  0821               	movf	I2C_Master_Read@temp+1,w
  1238  0329  00F5               	movwf	?_I2C_Master_Read+1
  1239  032A  0820               	movf	I2C_Master_Read@temp,w
  1240  032B  00F4               	movwf	?_I2C_Master_Read
  1241  032C                     l156:
  1242  032C  0008               	return
  1243  032D                     __end_of_I2C_Master_Read:
  1244                           
  1245                           	psect	text3
  1246  02CD                     __ptext3:	
  1247 ;; *************** function _adxl345_init *****************
  1248 ;; Defined at:
  1249 ;;		line 40 in file "adxl345.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          2       0       0       0       0
  1266 ;;      Totals:         2       0       0       0       0
  1267 ;;Total ram usage:        2 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    4
  1270 ;; This function calls:
  1271 ;;		_adxl345_write
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _adxl345_init
  1279  02CD                     _adxl345_init:
  1280  02CD                     l1250:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _adxl345_init: [wreg+status,2+status,0+pclath+cstack]
  1283                           
  1284                           
  1285                           ;adxl345.c: 41:          adxl345_write(0x31,0x0B);
  1286  02CD  3031               	movlw	49
  1287  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1288  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1289  02D0  00A0               	movwf	adxl345_write@add
  1290  02D1  3000               	movlw	0
  1291  02D2  00A1               	movwf	adxl345_write@add+1
  1292  02D3  300B               	movlw	11
  1293  02D4  00A2               	movwf	adxl345_write@data
  1294  02D5  3000               	movlw	0
  1295  02D6  00A3               	movwf	adxl345_write@data+1
  1296  02D7  120A  118A  232D  120A  118A  	fcall	_adxl345_write
  1297  02DC                     l1252:
  1298                           
  1299                           ;adxl345.c: 42:          _delay((unsigned long)((2)*(8000000/4000.0)));
  1300  02DC  3006               	movlw	6
  1301  02DD  00F7               	movwf	??_adxl345_init+1
  1302  02DE  3030               	movlw	48
  1303  02DF  00F6               	movwf	??_adxl345_init
  1304  02E0                     u907:
  1305  02E0  0BF6               	decfsz	??_adxl345_init,f
  1306  02E1  2AE0               	goto	u907
  1307  02E2  0BF7               	decfsz	??_adxl345_init+1,f
  1308  02E3  2AE0               	goto	u907
  1309  02E4  0000               	nop
  1310  02E5                     l1254:
  1311                           
  1312                           ;adxl345.c: 43:          adxl345_write(0x2D,0x08);
  1313  02E5  302D               	movlw	45
  1314  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1315  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1316  02E8  00A0               	movwf	adxl345_write@add
  1317  02E9  3000               	movlw	0
  1318  02EA  00A1               	movwf	adxl345_write@add+1
  1319  02EB  3008               	movlw	8
  1320  02EC  00A2               	movwf	adxl345_write@data
  1321  02ED  3000               	movlw	0
  1322  02EE  00A3               	movwf	adxl345_write@data+1
  1323  02EF  120A  118A  232D  120A  118A  	fcall	_adxl345_write
  1324                           
  1325                           ;adxl345.c: 44:          _delay((unsigned long)((2)*(8000000/4000.0)));
  1326  02F4  3006               	movlw	6
  1327  02F5  00F7               	movwf	??_adxl345_init+1
  1328  02F6  3030               	movlw	48
  1329  02F7  00F6               	movwf	??_adxl345_init
  1330  02F8                     u917:
  1331  02F8  0BF6               	decfsz	??_adxl345_init,f
  1332  02F9  2AF8               	goto	u917
  1333  02FA  0BF7               	decfsz	??_adxl345_init+1,f
  1334  02FB  2AF8               	goto	u917
  1335  02FC  0000               	nop
  1336  02FD                     l19:
  1337  02FD  0008               	return
  1338  02FE                     __end_of_adxl345_init:
  1339                           
  1340                           	psect	text4
  1341  032D                     __ptext4:	
  1342 ;; *************** function _adxl345_write *****************
  1343 ;; Defined at:
  1344 ;;		line 18 in file "adxl345.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  add             2    0[BANK0 ] int 
  1347 ;;  data            2    2[BANK0 ] int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       4       0       0       0
  1360 ;;      Locals:         0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         0       4       0       0       0
  1363 ;;Total ram usage:        4 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    3
  1366 ;; This function calls:
  1367 ;;		_I2C_Master_Start
  1368 ;;		_I2C_Master_Stop
  1369 ;;		_I2C_Master_Write
  1370 ;; This function is called by:
  1371 ;;		_adxl345_init
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _adxl345_write
  1377  032D                     _adxl345_write:
  1378  032D                     l1200:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _adxl345_write: [wreg+status,2+status,0+pclath+cstack]
  1381                           
  1382                           
  1383                           ;adxl345.c: 18: void adxl345_write(int add, int data);adxl345.c: 19: {;adxl345.c: 20:   
      +                                 I2C_Master_Start();
  1384  032D  120A  118A  23BB  120A  118A  	fcall	_I2C_Master_Start
  1385                           
  1386                           ;adxl345.c: 21:          I2C_Master_Write(0xA6);
  1387  0332  30A6               	movlw	166
  1388  0333  00F4               	movwf	I2C_Master_Write@d
  1389  0334  3000               	movlw	0
  1390  0335  00F5               	movwf	I2C_Master_Write@d+1
  1391  0336  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Write
  1392                           
  1393                           ;adxl345.c: 22:          I2C_Master_Write(add);
  1394  033B  1283               	bcf	3,5	;RP0=0, select bank0
  1395  033C  1303               	bcf	3,6	;RP1=0, select bank0
  1396  033D  0821               	movf	adxl345_write@add+1,w
  1397  033E  00F5               	movwf	I2C_Master_Write@d+1
  1398  033F  0820               	movf	adxl345_write@add,w
  1399  0340  00F4               	movwf	I2C_Master_Write@d
  1400  0341  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Write
  1401                           
  1402                           ;adxl345.c: 23:          I2C_Master_Write(data);
  1403  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0348  0823               	movf	adxl345_write@data+1,w
  1406  0349  00F5               	movwf	I2C_Master_Write@d+1
  1407  034A  0822               	movf	adxl345_write@data,w
  1408  034B  00F4               	movwf	I2C_Master_Write@d
  1409  034C  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Write
  1410                           
  1411                           ;adxl345.c: 24:          I2C_Master_Stop();
  1412  0351  120A  118A  23B2  120A  118A  	fcall	_I2C_Master_Stop
  1413  0356                     l13:
  1414  0356  0008               	return
  1415  0357                     __end_of_adxl345_write:
  1416                           
  1417                           	psect	text5
  1418  03A8                     __ptext5:	
  1419 ;; *************** function _I2C_Master_Write *****************
  1420 ;; Defined at:
  1421 ;;		line 40 in file "i2c.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  d               2    4[COMMON] unsigned int 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         2       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         2       0       0       0       0
  1439 ;;Total ram usage:        2 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    2
  1442 ;; This function calls:
  1443 ;;		_I2C_Master_Wait
  1444 ;; This function is called by:
  1445 ;;		_adxl345_write
  1446 ;;		_adxl345_read
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _I2C_Master_Write
  1452  03A8                     _I2C_Master_Write:
  1453  03A8                     l1128:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1456                           
  1457                           
  1458                           ;i2c.c: 40: void I2C_Master_Write(unsigned d);i2c.c: 41: {;i2c.c: 42:   I2C_Master_Wait(
      +                          );
  1459  03A8  120A  118A  239B  120A  118A  	fcall	_I2C_Master_Wait
  1460  03AD                     l1130:
  1461                           
  1462                           ;i2c.c: 43:   SSPBUF = d;
  1463  03AD  0874               	movf	I2C_Master_Write@d,w
  1464  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1465  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1466  03B0  0093               	movwf	19	;volatile
  1467  03B1                     l153:
  1468  03B1  0008               	return
  1469  03B2                     __end_of_I2C_Master_Write:
  1470                           
  1471                           	psect	text6
  1472  03B2                     __ptext6:	
  1473 ;; *************** function _I2C_Master_Stop *****************
  1474 ;; Defined at:
  1475 ;;		line 33 in file "i2c.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    2
  1496 ;; This function calls:
  1497 ;;		_I2C_Master_Wait
  1498 ;; This function is called by:
  1499 ;;		_adxl345_write
  1500 ;;		_adxl345_read
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _I2C_Master_Stop
  1506  03B2                     _I2C_Master_Stop:
  1507  03B2                     l1132:	
  1508                           ;incstack = 0
  1509                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1510                           
  1511                           
  1512                           ;i2c.c: 35:   I2C_Master_Wait();
  1513  03B2  120A  118A  239B  120A  118A  	fcall	_I2C_Master_Wait
  1514  03B7                     l1134:
  1515                           
  1516                           ;i2c.c: 36:   PEN = 1;
  1517  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  1518  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  1519  03B9  1511               	bsf	17,2	;volatile
  1520  03BA                     l150:
  1521  03BA  0008               	return
  1522  03BB                     __end_of_I2C_Master_Stop:
  1523                           
  1524                           	psect	text7
  1525  03BB                     __ptext7:	
  1526 ;; *************** function _I2C_Master_Start *****************
  1527 ;; Defined at:
  1528 ;;		line 26 in file "i2c.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0
  1545 ;;      Totals:         0       0       0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    2
  1549 ;; This function calls:
  1550 ;;		_I2C_Master_Wait
  1551 ;; This function is called by:
  1552 ;;		_adxl345_write
  1553 ;;		_adxl345_read
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function _I2C_Master_Start
  1559  03BB                     _I2C_Master_Start:
  1560  03BB                     l1124:	
  1561                           ;incstack = 0
  1562                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1563                           
  1564                           
  1565                           ;i2c.c: 28:   I2C_Master_Wait();
  1566  03BB  120A  118A  239B  120A  118A  	fcall	_I2C_Master_Wait
  1567  03C0                     l1126:
  1568                           
  1569                           ;i2c.c: 29:   SEN = 1;
  1570  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  1571  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  1572  03C2  1411               	bsf	17,0	;volatile
  1573  03C3                     l147:
  1574  03C3  0008               	return
  1575  03C4                     __end_of_I2C_Master_Start:
  1576                           
  1577                           	psect	text8
  1578  039B                     __ptext8:	
  1579 ;; *************** function _I2C_Master_Wait *****************
  1580 ;; Defined at:
  1581 ;;		line 20 in file "i2c.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_I2C_Master_Start
  1606 ;;		_I2C_Master_Stop
  1607 ;;		_I2C_Master_Write
  1608 ;;		_I2C_Master_Read
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _I2C_Master_Wait
  1614  039B                     _I2C_Master_Wait:
  1615  039B                     l1120:	
  1616                           ;incstack = 0
  1617                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1618                           
  1619  039B                     l141:	
  1620                           ;i2c.c: 22:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1621                           
  1622  039B  1683               	bsf	3,5	;RP0=1, select bank1
  1623  039C  1303               	bcf	3,6	;RP1=0, select bank1
  1624  039D  1914               	btfsc	20,2	;volatile
  1625  039E  2BA0               	goto	u631
  1626  039F  2BA1               	goto	u630
  1627  03A0                     u631:
  1628  03A0  2B9B               	goto	l141
  1629  03A1                     u630:
  1630  03A1                     l1122:
  1631  03A1  0811               	movf	17,w	;volatile
  1632  03A2  391F               	andlw	31
  1633  03A3  1D03               	btfss	3,2
  1634  03A4  2BA6               	goto	u641
  1635  03A5  2BA7               	goto	u640
  1636  03A6                     u641:
  1637  03A6  2B9B               	goto	l141
  1638  03A7                     u640:
  1639  03A7                     l144:
  1640  03A7  0008               	return
  1641  03A8                     __end_of_I2C_Master_Wait:
  1642                           
  1643                           	psect	text9
  1644  0357                     __ptext9:	
  1645 ;; *************** function _SYSTEM_Initialize *****************
  1646 ;; Defined at:
  1647 ;;		line 11 in file "lcs.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0
  1664 ;;      Totals:         0       0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		_I2C_Master_Init
  1670 ;;		_PORTS_MANAGER_Initialize
  1671 ;;		_USART_Initialize
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _SYSTEM_Initialize
  1679  0357                     _SYSTEM_Initialize:
  1680  0357                     l1256:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1683                           
  1684                           
  1685                           ;lcs.c: 12:     PORTS_MANAGER_Initialize();
  1686  0357  120A  118A  237B  120A  118A  	fcall	_PORTS_MANAGER_Initialize
  1687  035C                     l1258:
  1688                           
  1689                           ;lcs.c: 13:     USART_Initialize(9600);
  1690  035C  3000               	movlw	0
  1691  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1692  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1693  035F  00B1               	movwf	USART_Initialize@baudrate+3
  1694  0360  3000               	movlw	0
  1695  0361  00B0               	movwf	USART_Initialize@baudrate+2
  1696  0362  3025               	movlw	37
  1697  0363  00AF               	movwf	USART_Initialize@baudrate+1
  1698  0364  3080               	movlw	128
  1699  0365  00AE               	movwf	USART_Initialize@baudrate
  1700  0366  120A  118A  2141  120A  118A  	fcall	_USART_Initialize
  1701  036B                     l1260:
  1702                           
  1703                           ;lcs.c: 14:     I2C_Master_Init(100000);
  1704  036B  3000               	movlw	0
  1705  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1706  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1707  036E  00B0               	movwf	I2C_Master_Init@c+3
  1708  036F  3001               	movlw	1
  1709  0370  00AF               	movwf	I2C_Master_Init@c+2
  1710  0371  3086               	movlw	134
  1711  0372  00AE               	movwf	I2C_Master_Init@c+1
  1712  0373  30A0               	movlw	160
  1713  0374  00AD               	movwf	I2C_Master_Init@c
  1714  0375  120A  118A  225D  120A  118A  	fcall	_I2C_Master_Init
  1715  037A                     l43:
  1716  037A  0008               	return
  1717  037B                     __end_of_SYSTEM_Initialize:
  1718                           
  1719                           	psect	text10
  1720  0141                     __ptext10:	
  1721 ;; *************** function _USART_Initialize *****************
  1722 ;; Defined at:
  1723 ;;		line 16 in file "usart.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  baudrate        4   14[BANK0 ] const long 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  x               4   30[BANK0 ] long 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       4       0       0       0
  1738 ;;      Locals:         0       4       0       0       0
  1739 ;;      Temps:          0      12       0       0       0
  1740 ;;      Totals:         0      20       0       0       0
  1741 ;;Total ram usage:       20 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    2
  1744 ;; This function calls:
  1745 ;;		___aldiv
  1746 ;; This function is called by:
  1747 ;;		_SYSTEM_Initialize
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _USART_Initialize
  1753  0141                     _USART_Initialize:
  1754  0141                     l1218:	
  1755                           ;incstack = 0
  1756                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1757                           
  1758                           
  1759                           ;usart.c: 17:     long int x;;usart.c: 20:     TXSTAbits.TX9 = 0;
  1760  0141  1683               	bsf	3,5	;RP0=1, select bank1
  1761  0142  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0143  1318               	bcf	24,6	;volatile
  1763                           
  1764                           ;usart.c: 22:     TXSTAbits.TXEN = 1;
  1765  0144  1698               	bsf	24,5	;volatile
  1766                           
  1767                           ;usart.c: 24:     TXSTAbits.SYNC = 0;
  1768  0145  1218               	bcf	24,4	;volatile
  1769                           
  1770                           ;usart.c: 26:     TXSTAbits.BRGH = 0;
  1771  0146  1118               	bcf	24,2	;volatile
  1772                           
  1773                           ;usart.c: 27:     BAUDCTLbits.BRG16 = 0;
  1774  0147  1683               	bsf	3,5	;RP0=1, select bank3
  1775  0148  1703               	bsf	3,6	;RP1=1, select bank3
  1776  0149  1187               	bcf	7,3	;volatile
  1777                           
  1778                           ;usart.c: 30:     RCSTAbits.SPEN = 1;
  1779  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1780  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1781  014C  1798               	bsf	24,7	;volatile
  1782                           
  1783                           ;usart.c: 32:     RCSTAbits.CREN = 1;
  1784  014D  1618               	bsf	24,4	;volatile
  1785  014E                     l1220:
  1786                           
  1787                           ;usart.c: 34:     x = (8000000 - baudrate*64)/(baudrate*64);
  1788  014E  082E               	movf	USART_Initialize@baudrate,w
  1789  014F  00B2               	movwf	??_USART_Initialize
  1790  0150  082F               	movf	USART_Initialize@baudrate+1,w
  1791  0151  00B3               	movwf	??_USART_Initialize+1
  1792  0152  0830               	movf	USART_Initialize@baudrate+2,w
  1793  0153  00B4               	movwf	??_USART_Initialize+2
  1794  0154  0831               	movf	USART_Initialize@baudrate+3,w
  1795  0155  00B5               	movwf	??_USART_Initialize+3
  1796  0156  3006               	movlw	6
  1797  0157                     u845:
  1798  0157  1003               	clrc
  1799  0158  0DB2               	rlf	??_USART_Initialize,f
  1800  0159  0DB3               	rlf	??_USART_Initialize+1,f
  1801  015A  0DB4               	rlf	??_USART_Initialize+2,f
  1802  015B  0DB5               	rlf	??_USART_Initialize+3,f
  1803  015C                     u840:
  1804  015C  3EFF               	addlw	-1
  1805  015D  1D03               	skipz
  1806  015E  2957               	goto	u845
  1807  015F  0835               	movf	??_USART_Initialize+3,w
  1808  0160  00A3               	movwf	___aldiv@divisor+3
  1809  0161  0834               	movf	??_USART_Initialize+2,w
  1810  0162  00A2               	movwf	___aldiv@divisor+2
  1811  0163  0833               	movf	??_USART_Initialize+1,w
  1812  0164  00A1               	movwf	___aldiv@divisor+1
  1813  0165  0832               	movf	??_USART_Initialize,w
  1814  0166  00A0               	movwf	___aldiv@divisor
  1815  0167  082E               	movf	USART_Initialize@baudrate,w
  1816  0168  00B6               	movwf	??_USART_Initialize+4
  1817  0169  082F               	movf	USART_Initialize@baudrate+1,w
  1818  016A  00B7               	movwf	??_USART_Initialize+5
  1819  016B  0830               	movf	USART_Initialize@baudrate+2,w
  1820  016C  00B8               	movwf	??_USART_Initialize+6
  1821  016D  0831               	movf	USART_Initialize@baudrate+3,w
  1822  016E  00B9               	movwf	??_USART_Initialize+7
  1823  016F  3006               	movlw	6
  1824  0170                     u855:
  1825  0170  1003               	clrc
  1826  0171  0DB6               	rlf	??_USART_Initialize+4,f
  1827  0172  0DB7               	rlf	??_USART_Initialize+5,f
  1828  0173  0DB8               	rlf	??_USART_Initialize+6,f
  1829  0174  0DB9               	rlf	??_USART_Initialize+7,f
  1830  0175                     u850:
  1831  0175  3EFF               	addlw	-1
  1832  0176  1D03               	skipz
  1833  0177  2970               	goto	u855
  1834  0178  3000               	movlw	0
  1835  0179  00BA               	movwf	??_USART_Initialize+8
  1836  017A  3012               	movlw	18
  1837  017B  00BB               	movwf	??_USART_Initialize+9
  1838  017C  307A               	movlw	122
  1839  017D  00BC               	movwf	??_USART_Initialize+10
  1840  017E  3000               	movlw	0
  1841  017F  00BD               	movwf	??_USART_Initialize+11
  1842  0180  0836               	movf	??_USART_Initialize+4,w
  1843  0181  02BA               	subwf	??_USART_Initialize+8,f
  1844  0182  0837               	movf	??_USART_Initialize+5,w
  1845  0183  1C03               	skipc
  1846  0184  0F37               	incfsz	??_USART_Initialize+5,w
  1847  0185  2987               	goto	u861
  1848  0186  2988               	goto	u862
  1849  0187                     u861:
  1850  0187  02BB               	subwf	??_USART_Initialize+9,f
  1851  0188                     u862:
  1852  0188  0838               	movf	??_USART_Initialize+6,w
  1853  0189  1C03               	skipc
  1854  018A  0F38               	incfsz	??_USART_Initialize+6,w
  1855  018B  298D               	goto	u863
  1856  018C  298E               	goto	u864
  1857  018D                     u863:
  1858  018D  02BC               	subwf	??_USART_Initialize+10,f
  1859  018E                     u864:
  1860  018E  0839               	movf	??_USART_Initialize+7,w
  1861  018F  1C03               	skipc
  1862  0190  0F39               	incfsz	??_USART_Initialize+7,w
  1863  0191  2993               	goto	u865
  1864  0192  2994               	goto	u866
  1865  0193                     u865:
  1866  0193  02BD               	subwf	??_USART_Initialize+11,f
  1867  0194                     u866:
  1868  0194  083D               	movf	??_USART_Initialize+11,w
  1869  0195  00A7               	movwf	___aldiv@dividend+3
  1870  0196  083C               	movf	??_USART_Initialize+10,w
  1871  0197  00A6               	movwf	___aldiv@dividend+2
  1872  0198  083B               	movf	??_USART_Initialize+9,w
  1873  0199  00A5               	movwf	___aldiv@dividend+1
  1874  019A  083A               	movf	??_USART_Initialize+8,w
  1875  019B  00A4               	movwf	___aldiv@dividend
  1876  019C  120A  118A  2025  120A  118A  	fcall	___aldiv
  1877  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1878  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1879  01A3  0823               	movf	?___aldiv+3,w
  1880  01A4  00C1               	movwf	USART_Initialize@x+3
  1881  01A5  0822               	movf	?___aldiv+2,w
  1882  01A6  00C0               	movwf	USART_Initialize@x+2
  1883  01A7  0821               	movf	?___aldiv+1,w
  1884  01A8  00BF               	movwf	USART_Initialize@x+1
  1885  01A9  0820               	movf	?___aldiv,w
  1886  01AA  00BE               	movwf	USART_Initialize@x
  1887  01AB                     l1222:
  1888                           
  1889                           ;usart.c: 35:     SPBRG = x;
  1890  01AB  083E               	movf	USART_Initialize@x,w
  1891  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1892  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1893  01AE  0099               	movwf	25	;volatile
  1894  01AF                     l1224:
  1895                           
  1896                           ;usart.c: 38:     INTCONbits.GIE = 1;
  1897  01AF  178B               	bsf	11,7	;volatile
  1898  01B0                     l1226:
  1899                           
  1900                           ;usart.c: 40:     INTCONbits.PEIE = 1;
  1901  01B0  170B               	bsf	11,6	;volatile
  1902  01B1                     l1228:
  1903                           
  1904                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1905  01B1  168C               	bsf	12,5	;volatile
  1906  01B2                     l1230:
  1907                           
  1908                           ;usart.c: 45:     PIE1bits.TXIE = 1;
  1909  01B2  160C               	bsf	12,4	;volatile
  1910  01B3                     l34:
  1911  01B3  0008               	return
  1912  01B4                     __end_of_USART_Initialize:
  1913                           
  1914                           	psect	text11
  1915  0025                     __ptext11:	
  1916 ;; *************** function ___aldiv *****************
  1917 ;; Defined at:
  1918 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  divisor         4    0[BANK0 ] long 
  1921 ;;  dividend        4    4[BANK0 ] long 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  quotient        4   10[BANK0 ] long 
  1924 ;;  sign            1    9[BANK0 ] unsigned char 
  1925 ;;  counter         1    8[BANK0 ] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  4    0[BANK0 ] long 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         0       8       0       0       0
  1936 ;;      Locals:         0       6       0       0       0
  1937 ;;      Temps:          1       0       0       0       0
  1938 ;;      Totals:         1      14       0       0       0
  1939 ;;Total ram usage:       15 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_USART_Initialize
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function ___aldiv
  1951  0025                     ___aldiv:
  1952  0025                     l1160:	
  1953                           ;incstack = 0
  1954                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1955                           
  1956  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0027  01A9               	clrf	___aldiv@sign
  1959  0028                     l1162:
  1960  0028  1FA3               	btfss	___aldiv@divisor+3,7
  1961  0029  282B               	goto	u721
  1962  002A  282C               	goto	u720
  1963  002B                     u721:
  1964  002B  2839               	goto	l307
  1965  002C                     u720:
  1966  002C                     l1164:
  1967  002C  09A0               	comf	___aldiv@divisor,f
  1968  002D  09A1               	comf	___aldiv@divisor+1,f
  1969  002E  09A2               	comf	___aldiv@divisor+2,f
  1970  002F  09A3               	comf	___aldiv@divisor+3,f
  1971  0030  0AA0               	incf	___aldiv@divisor,f
  1972  0031  1903               	skipnz
  1973  0032  0AA1               	incf	___aldiv@divisor+1,f
  1974  0033  1903               	skipnz
  1975  0034  0AA2               	incf	___aldiv@divisor+2,f
  1976  0035  1903               	skipnz
  1977  0036  0AA3               	incf	___aldiv@divisor+3,f
  1978  0037  01A9               	clrf	___aldiv@sign
  1979  0038  0AA9               	incf	___aldiv@sign,f
  1980  0039                     l307:
  1981  0039  1FA7               	btfss	___aldiv@dividend+3,7
  1982  003A  283C               	goto	u731
  1983  003B  283D               	goto	u730
  1984  003C                     u731:
  1985  003C  284C               	goto	l1170
  1986  003D                     u730:
  1987  003D                     l1166:
  1988  003D  09A4               	comf	___aldiv@dividend,f
  1989  003E  09A5               	comf	___aldiv@dividend+1,f
  1990  003F  09A6               	comf	___aldiv@dividend+2,f
  1991  0040  09A7               	comf	___aldiv@dividend+3,f
  1992  0041  0AA4               	incf	___aldiv@dividend,f
  1993  0042  1903               	skipnz
  1994  0043  0AA5               	incf	___aldiv@dividend+1,f
  1995  0044  1903               	skipnz
  1996  0045  0AA6               	incf	___aldiv@dividend+2,f
  1997  0046  1903               	skipnz
  1998  0047  0AA7               	incf	___aldiv@dividend+3,f
  1999  0048                     l1168:
  2000  0048  3001               	movlw	1
  2001  0049  00F4               	movwf	??___aldiv
  2002  004A  0874               	movf	??___aldiv,w
  2003  004B  06A9               	xorwf	___aldiv@sign,f
  2004  004C                     l1170:
  2005  004C  3000               	movlw	0
  2006  004D  00AD               	movwf	___aldiv@quotient+3
  2007  004E  3000               	movlw	0
  2008  004F  00AC               	movwf	___aldiv@quotient+2
  2009  0050  3000               	movlw	0
  2010  0051  00AB               	movwf	___aldiv@quotient+1
  2011  0052  3000               	movlw	0
  2012  0053  00AA               	movwf	___aldiv@quotient
  2013  0054                     l1172:
  2014  0054  0823               	movf	___aldiv@divisor+3,w
  2015  0055  0422               	iorwf	___aldiv@divisor+2,w
  2016  0056  0421               	iorwf	___aldiv@divisor+1,w
  2017  0057  0420               	iorwf	___aldiv@divisor,w
  2018  0058  1903               	skipnz
  2019  0059  285B               	goto	u741
  2020  005A  285C               	goto	u740
  2021  005B                     u741:
  2022  005B  28A9               	goto	l1192
  2023  005C                     u740:
  2024  005C                     l1174:
  2025  005C  01A8               	clrf	___aldiv@counter
  2026  005D  0AA8               	incf	___aldiv@counter,f
  2027  005E  286C               	goto	l1178
  2028  005F                     l1176:
  2029  005F  3001               	movlw	1
  2030  0060  00F4               	movwf	??___aldiv
  2031  0061                     u755:
  2032  0061  1003               	clrc
  2033  0062  0DA0               	rlf	___aldiv@divisor,f
  2034  0063  0DA1               	rlf	___aldiv@divisor+1,f
  2035  0064  0DA2               	rlf	___aldiv@divisor+2,f
  2036  0065  0DA3               	rlf	___aldiv@divisor+3,f
  2037  0066  0BF4               	decfsz	??___aldiv,f
  2038  0067  2861               	goto	u755
  2039  0068  3001               	movlw	1
  2040  0069  00F4               	movwf	??___aldiv
  2041  006A  0874               	movf	??___aldiv,w
  2042  006B  07A8               	addwf	___aldiv@counter,f
  2043  006C                     l1178:
  2044  006C  1FA3               	btfss	___aldiv@divisor+3,7
  2045  006D  286F               	goto	u761
  2046  006E  2870               	goto	u760
  2047  006F                     u761:
  2048  006F  285F               	goto	l1176
  2049  0070                     u760:
  2050  0070                     l1180:
  2051  0070  3001               	movlw	1
  2052  0071  00F4               	movwf	??___aldiv
  2053  0072                     u775:
  2054  0072  1003               	clrc
  2055  0073  0DAA               	rlf	___aldiv@quotient,f
  2056  0074  0DAB               	rlf	___aldiv@quotient+1,f
  2057  0075  0DAC               	rlf	___aldiv@quotient+2,f
  2058  0076  0DAD               	rlf	___aldiv@quotient+3,f
  2059  0077  0BF4               	decfsz	??___aldiv,f
  2060  0078  2872               	goto	u775
  2061  0079                     l1182:
  2062  0079  0823               	movf	___aldiv@divisor+3,w
  2063  007A  0227               	subwf	___aldiv@dividend+3,w
  2064  007B  1D03               	skipz
  2065  007C  2887               	goto	u785
  2066  007D  0822               	movf	___aldiv@divisor+2,w
  2067  007E  0226               	subwf	___aldiv@dividend+2,w
  2068  007F  1D03               	skipz
  2069  0080  2887               	goto	u785
  2070  0081  0821               	movf	___aldiv@divisor+1,w
  2071  0082  0225               	subwf	___aldiv@dividend+1,w
  2072  0083  1D03               	skipz
  2073  0084  2887               	goto	u785
  2074  0085  0820               	movf	___aldiv@divisor,w
  2075  0086  0224               	subwf	___aldiv@dividend,w
  2076  0087                     u785:
  2077  0087  1C03               	skipc
  2078  0088  288A               	goto	u781
  2079  0089  288B               	goto	u780
  2080  008A                     u781:
  2081  008A  289A               	goto	l1188
  2082  008B                     u780:
  2083  008B                     l1184:
  2084  008B  0820               	movf	___aldiv@divisor,w
  2085  008C  02A4               	subwf	___aldiv@dividend,f
  2086  008D  0821               	movf	___aldiv@divisor+1,w
  2087  008E  1C03               	skipc
  2088  008F  0F21               	incfsz	___aldiv@divisor+1,w
  2089  0090  02A5               	subwf	___aldiv@dividend+1,f
  2090  0091  0822               	movf	___aldiv@divisor+2,w
  2091  0092  1C03               	skipc
  2092  0093  0F22               	incfsz	___aldiv@divisor+2,w
  2093  0094  02A6               	subwf	___aldiv@dividend+2,f
  2094  0095  0823               	movf	___aldiv@divisor+3,w
  2095  0096  1C03               	skipc
  2096  0097  0F23               	incfsz	___aldiv@divisor+3,w
  2097  0098  02A7               	subwf	___aldiv@dividend+3,f
  2098  0099                     l1186:
  2099  0099  142A               	bsf	___aldiv@quotient,0
  2100  009A                     l1188:
  2101  009A  3001               	movlw	1
  2102  009B                     u795:
  2103  009B  1003               	clrc
  2104  009C  0CA3               	rrf	___aldiv@divisor+3,f
  2105  009D  0CA2               	rrf	___aldiv@divisor+2,f
  2106  009E  0CA1               	rrf	___aldiv@divisor+1,f
  2107  009F  0CA0               	rrf	___aldiv@divisor,f
  2108  00A0  3EFF               	addlw	-1
  2109  00A1  1D03               	skipz
  2110  00A2  289B               	goto	u795
  2111  00A3                     l1190:
  2112  00A3  3001               	movlw	1
  2113  00A4  02A8               	subwf	___aldiv@counter,f
  2114  00A5  1D03               	btfss	3,2
  2115  00A6  28A8               	goto	u801
  2116  00A7  28A9               	goto	u800
  2117  00A8                     u801:
  2118  00A8  2870               	goto	l1180
  2119  00A9                     u800:
  2120  00A9                     l1192:
  2121  00A9  0829               	movf	___aldiv@sign,w
  2122  00AA  1903               	btfsc	3,2
  2123  00AB  28AD               	goto	u811
  2124  00AC  28AE               	goto	u810
  2125  00AD                     u811:
  2126  00AD  28B9               	goto	l1196
  2127  00AE                     u810:
  2128  00AE                     l1194:
  2129  00AE  09AA               	comf	___aldiv@quotient,f
  2130  00AF  09AB               	comf	___aldiv@quotient+1,f
  2131  00B0  09AC               	comf	___aldiv@quotient+2,f
  2132  00B1  09AD               	comf	___aldiv@quotient+3,f
  2133  00B2  0AAA               	incf	___aldiv@quotient,f
  2134  00B3  1903               	skipnz
  2135  00B4  0AAB               	incf	___aldiv@quotient+1,f
  2136  00B5  1903               	skipnz
  2137  00B6  0AAC               	incf	___aldiv@quotient+2,f
  2138  00B7  1903               	skipnz
  2139  00B8  0AAD               	incf	___aldiv@quotient+3,f
  2140  00B9                     l1196:
  2141  00B9  082D               	movf	___aldiv@quotient+3,w
  2142  00BA  00A3               	movwf	?___aldiv+3
  2143  00BB  082C               	movf	___aldiv@quotient+2,w
  2144  00BC  00A2               	movwf	?___aldiv+2
  2145  00BD  082B               	movf	___aldiv@quotient+1,w
  2146  00BE  00A1               	movwf	?___aldiv+1
  2147  00BF  082A               	movf	___aldiv@quotient,w
  2148  00C0  00A0               	movwf	?___aldiv
  2149  00C1                     l317:
  2150  00C1  0008               	return
  2151  00C2                     __end_of___aldiv:
  2152                           
  2153                           	psect	text12
  2154  037B                     __ptext12:	
  2155 ;; *************** function _PORTS_MANAGER_Initialize *****************
  2156 ;; Defined at:
  2157 ;;		line 10 in file "ports_manager.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		status,2
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0
  2174 ;;      Totals:         0       0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_SYSTEM_Initialize
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _PORTS_MANAGER_Initialize
  2187  037B                     _PORTS_MANAGER_Initialize:
  2188  037B                     l1046:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _PORTS_MANAGER_Initialize: [status,2]
  2191                           
  2192                           
  2193                           ;ports_manager.c: 12:     ANSEL = 0;
  2194  037B  1683               	bsf	3,5	;RP0=1, select bank3
  2195  037C  1703               	bsf	3,6	;RP1=1, select bank3
  2196  037D  0188               	clrf	8	;volatile
  2197                           
  2198                           ;ports_manager.c: 13:     TRISA = 0;
  2199  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2200  037F  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0380  0185               	clrf	5	;volatile
  2202                           
  2203                           ;ports_manager.c: 14:     PORTA = 0;
  2204  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0383  0185               	clrf	5	;volatile
  2207                           
  2208                           ;ports_manager.c: 16:     ANSELH = 0;
  2209  0384  1683               	bsf	3,5	;RP0=1, select bank3
  2210  0385  1703               	bsf	3,6	;RP1=1, select bank3
  2211  0386  0189               	clrf	9	;volatile
  2212                           
  2213                           ;ports_manager.c: 17:     TRISB = 0;
  2214  0387  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0388  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0389  0186               	clrf	6	;volatile
  2217                           
  2218                           ;ports_manager.c: 18:     PORTB = 0;
  2219  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2220  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2221  038C  0186               	clrf	6	;volatile
  2222                           
  2223                           ;ports_manager.c: 19:     IOCB = 0;
  2224  038D  1683               	bsf	3,5	;RP0=1, select bank1
  2225  038E  1303               	bcf	3,6	;RP1=0, select bank1
  2226  038F  0196               	clrf	22	;volatile
  2227                           
  2228                           ;ports_manager.c: 21:     TRISD = 0;
  2229  0390  0188               	clrf	8	;volatile
  2230                           
  2231                           ;ports_manager.c: 22:     PORTD = 0;
  2232  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0393  0188               	clrf	8	;volatile
  2235                           
  2236                           ;ports_manager.c: 24:     TRISE = 0;
  2237  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2239  0396  0189               	clrf	9	;volatile
  2240                           
  2241                           ;ports_manager.c: 25:     PORTE = 0;
  2242  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0399  0189               	clrf	9	;volatile
  2245  039A                     l68:
  2246  039A  0008               	return
  2247  039B                     __end_of_PORTS_MANAGER_Initialize:
  2248                           
  2249                           	psect	text13
  2250  025D                     __ptext13:	
  2251 ;; *************** function _I2C_Master_Init *****************
  2252 ;; Defined at:
  2253 ;;		line 9 in file "i2c.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  c               4   13[BANK0 ] const unsigned long 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       4       0       0       0
  2268 ;;      Locals:         0       0       0       0       0
  2269 ;;      Temps:          0       4       0       0       0
  2270 ;;      Totals:         0       8       0       0       0
  2271 ;;Total ram usage:        8 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    2
  2274 ;; This function calls:
  2275 ;;		___lldiv
  2276 ;; This function is called by:
  2277 ;;		_SYSTEM_Initialize
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _I2C_Master_Init
  2283  025D                     _I2C_Master_Init:
  2284  025D                     l1232:	
  2285                           ;incstack = 0
  2286                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2287                           
  2288                           
  2289                           ;i2c.c: 9: void I2C_Master_Init(const unsigned long c);i2c.c: 10: {;i2c.c: 11:   SSPCON 
      +                          = 0b00101000;
  2290  025D  3028               	movlw	40
  2291  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2292  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0260  0094               	movwf	20	;volatile
  2294  0261                     l1234:
  2295                           
  2296                           ;i2c.c: 12:   SSPCON2 = 0;
  2297  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0262  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0263  0191               	clrf	17	;volatile
  2300  0264                     l1236:
  2301                           
  2302                           ;i2c.c: 13:   SSPADD = (8000000/(4*c))-1;
  2303  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0266  082D               	movf	I2C_Master_Init@c,w
  2306  0267  00B1               	movwf	??_I2C_Master_Init
  2307  0268  082E               	movf	I2C_Master_Init@c+1,w
  2308  0269  00B2               	movwf	??_I2C_Master_Init+1
  2309  026A  082F               	movf	I2C_Master_Init@c+2,w
  2310  026B  00B3               	movwf	??_I2C_Master_Init+2
  2311  026C  0830               	movf	I2C_Master_Init@c+3,w
  2312  026D  00B4               	movwf	??_I2C_Master_Init+3
  2313  026E  3002               	movlw	2
  2314  026F                     u875:
  2315  026F  1003               	clrc
  2316  0270  0DB1               	rlf	??_I2C_Master_Init,f
  2317  0271  0DB2               	rlf	??_I2C_Master_Init+1,f
  2318  0272  0DB3               	rlf	??_I2C_Master_Init+2,f
  2319  0273  0DB4               	rlf	??_I2C_Master_Init+3,f
  2320  0274                     u870:
  2321  0274  3EFF               	addlw	-1
  2322  0275  1D03               	skipz
  2323  0276  2A6F               	goto	u875
  2324  0277  0834               	movf	??_I2C_Master_Init+3,w
  2325  0278  00A3               	movwf	___lldiv@divisor+3
  2326  0279  0833               	movf	??_I2C_Master_Init+2,w
  2327  027A  00A2               	movwf	___lldiv@divisor+2
  2328  027B  0832               	movf	??_I2C_Master_Init+1,w
  2329  027C  00A1               	movwf	___lldiv@divisor+1
  2330  027D  0831               	movf	??_I2C_Master_Init,w
  2331  027E  00A0               	movwf	___lldiv@divisor
  2332  027F  3000               	movlw	0
  2333  0280  00A7               	movwf	___lldiv@dividend+3
  2334  0281  307A               	movlw	122
  2335  0282  00A6               	movwf	___lldiv@dividend+2
  2336  0283  3012               	movlw	18
  2337  0284  00A5               	movwf	___lldiv@dividend+1
  2338  0285  3000               	movlw	0
  2339  0286  00A4               	movwf	___lldiv@dividend
  2340  0287  120A  118A  21B4  120A  118A  	fcall	___lldiv
  2341  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2342  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2343  028E  0820               	movf	?___lldiv,w
  2344  028F  3EFF               	addlw	255
  2345  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0292  0093               	movwf	19	;volatile
  2348  0293                     l1238:
  2349                           
  2350                           ;i2c.c: 14:   SSPSTAT = 0;
  2351  0293  0194               	clrf	20	;volatile
  2352  0294                     l1240:
  2353                           
  2354                           ;i2c.c: 15:   TRISC3 = 1;
  2355  0294  1587               	bsf	7,3	;volatile
  2356  0295                     l1242:
  2357                           
  2358                           ;i2c.c: 16:   TRISC4 = 1;
  2359  0295  1607               	bsf	7,4	;volatile
  2360  0296                     l138:
  2361  0296  0008               	return
  2362  0297                     __end_of_I2C_Master_Init:
  2363                           
  2364                           	psect	text14
  2365  01B4                     __ptext14:	
  2366 ;; *************** function ___lldiv *****************
  2367 ;; Defined at:
  2368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  divisor         4    0[BANK0 ] unsigned long 
  2371 ;;  dividend        4    4[BANK0 ] unsigned long 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  quotient        4    8[BANK0 ] unsigned long 
  2374 ;;  counter         1   12[BANK0 ] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  4    0[BANK0 ] unsigned long 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       8       0       0       0
  2385 ;;      Locals:         0       5       0       0       0
  2386 ;;      Temps:          1       0       0       0       0
  2387 ;;      Totals:         1      13       0       0       0
  2388 ;;Total ram usage:       14 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_I2C_Master_Init
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function ___lldiv
  2400  01B4                     ___lldiv:
  2401  01B4                     l1136:	
  2402                           ;incstack = 0
  2403                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2404                           
  2405  01B4  3000               	movlw	0
  2406  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2407  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2408  01B7  00AB               	movwf	___lldiv@quotient+3
  2409  01B8  3000               	movlw	0
  2410  01B9  00AA               	movwf	___lldiv@quotient+2
  2411  01BA  3000               	movlw	0
  2412  01BB  00A9               	movwf	___lldiv@quotient+1
  2413  01BC  3000               	movlw	0
  2414  01BD  00A8               	movwf	___lldiv@quotient
  2415  01BE  0823               	movf	___lldiv@divisor+3,w
  2416  01BF  0422               	iorwf	___lldiv@divisor+2,w
  2417  01C0  0421               	iorwf	___lldiv@divisor+1,w
  2418  01C1  0420               	iorwf	___lldiv@divisor,w
  2419  01C2  1903               	skipnz
  2420  01C3  29C5               	goto	u651
  2421  01C4  29C6               	goto	u650
  2422  01C5                     u651:
  2423  01C5  2A13               	goto	l1156
  2424  01C6                     u650:
  2425  01C6                     l1138:
  2426  01C6  01AC               	clrf	___lldiv@counter
  2427  01C7  0AAC               	incf	___lldiv@counter,f
  2428  01C8  29D6               	goto	l1142
  2429  01C9                     l1140:
  2430  01C9  3001               	movlw	1
  2431  01CA  00F4               	movwf	??___lldiv
  2432  01CB                     u665:
  2433  01CB  1003               	clrc
  2434  01CC  0DA0               	rlf	___lldiv@divisor,f
  2435  01CD  0DA1               	rlf	___lldiv@divisor+1,f
  2436  01CE  0DA2               	rlf	___lldiv@divisor+2,f
  2437  01CF  0DA3               	rlf	___lldiv@divisor+3,f
  2438  01D0  0BF4               	decfsz	??___lldiv,f
  2439  01D1  29CB               	goto	u665
  2440  01D2  3001               	movlw	1
  2441  01D3  00F4               	movwf	??___lldiv
  2442  01D4  0874               	movf	??___lldiv,w
  2443  01D5  07AC               	addwf	___lldiv@counter,f
  2444  01D6                     l1142:
  2445  01D6  1FA3               	btfss	___lldiv@divisor+3,7
  2446  01D7  29D9               	goto	u671
  2447  01D8  29DA               	goto	u670
  2448  01D9                     u671:
  2449  01D9  29C9               	goto	l1140
  2450  01DA                     u670:
  2451  01DA                     l1144:
  2452  01DA  3001               	movlw	1
  2453  01DB  00F4               	movwf	??___lldiv
  2454  01DC                     u685:
  2455  01DC  1003               	clrc
  2456  01DD  0DA8               	rlf	___lldiv@quotient,f
  2457  01DE  0DA9               	rlf	___lldiv@quotient+1,f
  2458  01DF  0DAA               	rlf	___lldiv@quotient+2,f
  2459  01E0  0DAB               	rlf	___lldiv@quotient+3,f
  2460  01E1  0BF4               	decfsz	??___lldiv,f
  2461  01E2  29DC               	goto	u685
  2462  01E3                     l1146:
  2463  01E3  0823               	movf	___lldiv@divisor+3,w
  2464  01E4  0227               	subwf	___lldiv@dividend+3,w
  2465  01E5  1D03               	skipz
  2466  01E6  29F1               	goto	u695
  2467  01E7  0822               	movf	___lldiv@divisor+2,w
  2468  01E8  0226               	subwf	___lldiv@dividend+2,w
  2469  01E9  1D03               	skipz
  2470  01EA  29F1               	goto	u695
  2471  01EB  0821               	movf	___lldiv@divisor+1,w
  2472  01EC  0225               	subwf	___lldiv@dividend+1,w
  2473  01ED  1D03               	skipz
  2474  01EE  29F1               	goto	u695
  2475  01EF  0820               	movf	___lldiv@divisor,w
  2476  01F0  0224               	subwf	___lldiv@dividend,w
  2477  01F1                     u695:
  2478  01F1  1C03               	skipc
  2479  01F2  29F4               	goto	u691
  2480  01F3  29F5               	goto	u690
  2481  01F4                     u691:
  2482  01F4  2A04               	goto	l1152
  2483  01F5                     u690:
  2484  01F5                     l1148:
  2485  01F5  0820               	movf	___lldiv@divisor,w
  2486  01F6  02A4               	subwf	___lldiv@dividend,f
  2487  01F7  0821               	movf	___lldiv@divisor+1,w
  2488  01F8  1C03               	skipc
  2489  01F9  0F21               	incfsz	___lldiv@divisor+1,w
  2490  01FA  02A5               	subwf	___lldiv@dividend+1,f
  2491  01FB  0822               	movf	___lldiv@divisor+2,w
  2492  01FC  1C03               	skipc
  2493  01FD  0F22               	incfsz	___lldiv@divisor+2,w
  2494  01FE  02A6               	subwf	___lldiv@dividend+2,f
  2495  01FF  0823               	movf	___lldiv@divisor+3,w
  2496  0200  1C03               	skipc
  2497  0201  0F23               	incfsz	___lldiv@divisor+3,w
  2498  0202  02A7               	subwf	___lldiv@dividend+3,f
  2499  0203                     l1150:
  2500  0203  1428               	bsf	___lldiv@quotient,0
  2501  0204                     l1152:
  2502  0204  3001               	movlw	1
  2503  0205                     u705:
  2504  0205  1003               	clrc
  2505  0206  0CA3               	rrf	___lldiv@divisor+3,f
  2506  0207  0CA2               	rrf	___lldiv@divisor+2,f
  2507  0208  0CA1               	rrf	___lldiv@divisor+1,f
  2508  0209  0CA0               	rrf	___lldiv@divisor,f
  2509  020A  3EFF               	addlw	-1
  2510  020B  1D03               	skipz
  2511  020C  2A05               	goto	u705
  2512  020D                     l1154:
  2513  020D  3001               	movlw	1
  2514  020E  02AC               	subwf	___lldiv@counter,f
  2515  020F  1D03               	btfss	3,2
  2516  0210  2A12               	goto	u711
  2517  0211  2A13               	goto	u710
  2518  0212                     u711:
  2519  0212  29DA               	goto	l1144
  2520  0213                     u710:
  2521  0213                     l1156:
  2522  0213  082B               	movf	___lldiv@quotient+3,w
  2523  0214  00A3               	movwf	?___lldiv+3
  2524  0215  082A               	movf	___lldiv@quotient+2,w
  2525  0216  00A2               	movwf	?___lldiv+2
  2526  0217  0829               	movf	___lldiv@quotient+1,w
  2527  0218  00A1               	movwf	?___lldiv+1
  2528  0219  0828               	movf	___lldiv@quotient,w
  2529  021A  00A0               	movwf	?___lldiv
  2530  021B                     l278:
  2531  021B  0008               	return
  2532  021C                     __end_of___lldiv:
  2533                           
  2534                           	psect	text15
  2535  0297                     __ptext15:	
  2536 ;; *************** function _myISR *****************
  2537 ;; Defined at:
  2538 ;;		line 27 in file "main.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       0       0       0       0
  2553 ;;      Locals:         0       0       0       0       0
  2554 ;;      Temps:          4       0       0       0       0
  2555 ;;      Totals:         4       0       0       0       0
  2556 ;;Total ram usage:        4 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		Interrupt level 1
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function _myISR
  2567  0297                     _myISR:
  2568  0297                     i1l1078:
  2569                           
  2570                           ;main.c: 28:     if(PIR1bits.RCIF == 1){
  2571  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0299  1E8C               	btfss	12,5	;volatile
  2574  029A  2A9C               	goto	u57_21
  2575  029B  2A9D               	goto	u57_20
  2576  029C                     u57_21:
  2577  029C  2AA1               	goto	i1l1082
  2578  029D                     u57_20:
  2579  029D                     i1l1080:
  2580                           
  2581                           ;main.c: 29:         read_value = RCREG;
  2582  029D  081A               	movf	26,w	;volatile
  2583  029E  00F0               	movwf	??_myISR
  2584  029F  0870               	movf	??_myISR,w
  2585  02A0  00CE               	movwf	_read_value
  2586  02A1                     i1l1082:
  2587                           
  2588                           ;main.c: 32:     if(PIR1bits.TXIF == 1){
  2589  02A1  1E0C               	btfss	12,4	;volatile
  2590  02A2  2AA4               	goto	u58_21
  2591  02A3  2AA5               	goto	u58_20
  2592  02A4                     u58_21:
  2593  02A4  2AC4               	goto	i1l101
  2594  02A5                     u58_20:
  2595  02A5                     i1l1084:
  2596                           
  2597                           ;main.c: 33:         if (handshake == 0){
  2598  02A5  084C               	movf	_handshake,w
  2599  02A6  044D               	iorwf	_handshake+1,w
  2600  02A7  1D03               	btfss	3,2
  2601  02A8  2AAA               	goto	u59_21
  2602  02A9  2AAB               	goto	u59_20
  2603  02AA                     u59_21:
  2604  02AA  2AAE               	goto	i1l1088
  2605  02AB                     u59_20:
  2606  02AB                     i1l1086:
  2607                           
  2608                           ;main.c: 34:             TXREG = 65;
  2609  02AB  3041               	movlw	65
  2610  02AC  0099               	movwf	25	;volatile
  2611                           
  2612                           ;main.c: 35:         }
  2613  02AD  2AC4               	goto	i1l101
  2614  02AE                     i1l1088:
  2615                           
  2616                           ;main.c: 37:             TXREG = sensor_value[cont];
  2617  02AE  0878               	movf	_cont,w
  2618  02AF  3E43               	addlw	(low (_sensor_value| 0))& (0+255)
  2619  02B0  0084               	movwf	4
  2620  02B1  1383               	bcf	3,7	;select IRP bank0
  2621  02B2  0800               	movf	0,w
  2622  02B3  0099               	movwf	25	;volatile
  2623  02B4                     i1l1090:
  2624                           
  2625                           ;main.c: 38:             if (cont == 5){
  2626  02B4  3005               	movlw	5
  2627  02B5  0678               	xorwf	_cont,w
  2628  02B6  0479               	iorwf	_cont+1,w
  2629  02B7  1D03               	btfss	3,2
  2630  02B8  2ABA               	goto	u60_21
  2631  02B9  2ABB               	goto	u60_20
  2632  02BA                     u60_21:
  2633  02BA  2ABE               	goto	i1l1094
  2634  02BB                     u60_20:
  2635  02BB                     i1l1092:
  2636                           
  2637                           ;main.c: 39:                 cont = 0;
  2638  02BB  01F8               	clrf	_cont
  2639  02BC  01F9               	clrf	_cont+1
  2640                           
  2641                           ;main.c: 40:             }
  2642  02BD  2AC4               	goto	i1l101
  2643  02BE                     i1l1094:
  2644                           
  2645                           ;main.c: 42:                 cont++;
  2646  02BE  3001               	movlw	1
  2647  02BF  07F8               	addwf	_cont,f
  2648  02C0  1803               	skipnc
  2649  02C1  0AF9               	incf	_cont+1,f
  2650  02C2  3000               	movlw	0
  2651  02C3  07F9               	addwf	_cont+1,f
  2652  02C4                     i1l101:
  2653  02C4  0873               	movf	??_myISR+3,w
  2654  02C5  008A               	movwf	10
  2655  02C6  0872               	movf	??_myISR+2,w
  2656  02C7  0084               	movwf	4
  2657  02C8  0E71               	swapf	??_myISR+1,w
  2658  02C9  0083               	movwf	3
  2659  02CA  0EFE               	swapf	btemp,f
  2660  02CB  0E7E               	swapf	btemp,w
  2661  02CC  0009               	retfie
  2662  02CD                     __end_of_myISR:
  2663  007E                     btemp	set	126	;btemp
  2664  007E                     wtemp0	set	126
  2665                           
  2666                           	psect	intentry
  2667  0004                     __pintentry:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0]
  2670                           
  2671  0004                     interrupt_function:
  2672  007E                     saved_w	set	btemp
  2673  0004  00FE               	movwf	btemp
  2674  0005  0E03               	swapf	3,w
  2675  0006  00F1               	movwf	??_myISR+1
  2676  0007  0804               	movf	4,w
  2677  0008  00F2               	movwf	??_myISR+2
  2678  0009  080A               	movf	10,w
  2679  000A  00F3               	movwf	??_myISR+3
  2680  000B  120A  118A  2A97   	ljmp	_myISR
  2681                           
  2682                           	psect	config
  2683                           
  2684                           ;Config register CONFIG1 @ 0x2007
  2685                           ;	Oscillator Selection bits
  2686                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2687                           ;	Watchdog Timer Enable bit
  2688                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2689                           ;	Power-up Timer Enable bit
  2690                           ;	PWRTE = OFF, PWRT disabled
  2691                           ;	RE3/MCLR pin function select bit
  2692                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2693                           ;	Code Protection bit
  2694                           ;	CP = OFF, Program memory code protection is disabled
  2695                           ;	Data Code Protection bit
  2696                           ;	CPD = OFF, Data memory code protection is disabled
  2697                           ;	Brown Out Reset Selection bits
  2698                           ;	BOREN = OFF, BOR disabled
  2699                           ;	Internal External Switchover bit
  2700                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2701                           ;	Fail-Safe Clock Monitor Enabled bit
  2702                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2703                           ;	Low Voltage Programming Enable bit
  2704                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2705                           ;	In-Circuit Debugger Mode bit
  2706                           ;	DEBUG = 0x1, unprogrammed default
  2707  2007                     	org	8199
  2708  2007  20F4               	dw	8436
  2709                           
  2710                           ;Config register CONFIG2 @ 0x2008
  2711                           ;	Brown-out Reset Selection bit
  2712                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2713                           ;	Flash Program Memory Self Write Enable bits
  2714                           ;	WRT = OFF, Write protection off
  2715  2008                     	org	8200
  2716  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     35      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adxl345_init
    _adxl345_read->_I2C_Master_Read
    _adxl345_write->_I2C_Master_Write
    _USART_Initialize->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _adxl345_read->_I2C_Master_Read
    _adxl345_init->_adxl345_write
    _SYSTEM_Initialize->_USART_Initialize
    _USART_Initialize->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3677
                                             34 BANK0      1     1      0
                  _SYSTEM_Initialize
                       _adxl345_init
                       _adxl345_read
 ---------------------------------------------------------------------------------
 (1) _adxl345_read                                         4     2      2    1331
                                              2 BANK0      4     2      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     155
                                              4 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _adxl345_init                                         2     2      0     993
                                              6 COMMON     2     2      0
                      _adxl345_write
 ---------------------------------------------------------------------------------
 (2) _adxl345_write                                        4     0      4     993
                                              0 BANK0      4     0      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     571
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1353
                    _I2C_Master_Init
           _PORTS_MANAGER_Initialize
                   _USART_Initialize
 ---------------------------------------------------------------------------------
 (2) _USART_Initialize                                    20    16      4     811
                                             14 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PORTS_MANAGER_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C_Master_Init
       ___lldiv
     _PORTS_MANAGER_Initialize
     _USART_Initialize
       ___aldiv
   _adxl345_init
     _adxl345_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _adxl345_read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 11 00:06:17 2021

                               l13 0356                                 l16 025C  
                               l34 01B3                                 l43 037A  
                               l19 02FD                                 l68 039A  
         __end_of_USART_Initialize 01B4                                l141 039B  
                              l150 03BA                                l144 03A7  
                              l153 03B1                                l138 0296  
                              l307 0039                                l147 03C3  
                              l156 032C                                l317 00C1  
                              l278 021B                                _PEN 048A  
                              u710 0213                                u630 03A1  
                              u711 0212                                u631 03A0  
                              u800 00A9                                u720 002C  
                              u640 03A7                                u705 0205  
                              u801 00A8                                u721 002B  
                              u641 03A6                                u650 01C6  
                              u810 00AE                                u730 003D  
                              u651 01C5                                u811 00AD  
                              u731 003C                                u740 005C  
                              u820 0322                                _SEN 0488  
                              u741 005B                                u821 031E  
                              u670 01DA                                u671 01D9  
                              u760 0070                                u840 015C  
                              u665 01CB                                u761 006F  
                              u690 01F5                                u850 0175  
                              u834 0325                                u691 01F4  
                              u755 0061                                u907 02E0  
                              u780 008B                                u685 01DC  
                              u781 008A                                u861 0187  
                              u845 0157                                u917 02F8  
                              u870 0274                                u862 0188  
                              u695 01F1                                u775 0072  
                              u863 018D                                u855 0170  
                              u864 018E                                u880 00D7  
                              u785 0087                                u865 0193  
                              u881 00D6                                u866 0194  
                              u890 00E1                                u875 026F  
                              u795 009B                                u891 00E0  
                              fsr0 0004                                indf 0000  
                             l1120 039B                               l1200 032D  
                             l1122 03A1                               l1130 03AD  
                             l1210 0319                               l1202 02FE  
                             l1140 01C9                               l1220 014E  
                             l1124 03BB                               l1132 03B2  
                             l1212 0325                               l1204 0303  
                             l1150 0203                               l1142 01D6  
                             l1046 037B                               l1230 01B2  
                             l1222 01AB                               l1126 03C0  
                             l1134 03B7                               l1214 0326  
                             l1206 030B                               l1152 0204  
                             l1144 01DA                               l1136 01B4  
                             l1240 0294                               l1232 025D  
                             l1160 0025                               l1224 01AF  
                             l1128 03A8                               l1208 0314  
                             l1154 020D                               l1146 01E3  
                             l1138 01C6                               l1242 0295  
                             l1234 0261                               l1170 004C  
                             l1162 0028                               l1226 01B0  
                             l1218 0141                               l1250 02CD  
                             l1148 01F5                               l1156 0213  
                             l1236 0264                               l1180 0070  
                             l1172 0054                               l1164 002C  
                             l1228 01B1                               l1260 036B  
                             l1252 02DC                               l1244 021C  
                             l1238 0293                               l1190 00A3  
                             l1182 0079                               l1174 005C  
                             l1166 003D                               l1254 02E5  
                             l1246 0256                               l1270 00DB  
                             l1262 00C2                               l1184 008B  
                             l1176 005F                               l1192 00A9  
                             l1168 0048                               l1256 0357  
                             l1280 0110                               l1272 00E1  
                             l1264 00CC                               l1194 00AE  
                             l1186 0099                               l1178 006C  
                             l1258 035C                               l1282 011F  
                             l1274 00E3                               l1266 00D0  
                             l1196 00B9                               l1188 009A  
                             l1284 012E                               l1276 00F2  
                             l1268 00D7                               l1278 0101  
                             _IOCB 0096                               _RCEN 048B  
                             _cont 0078                               _main 00C2  
                             btemp 007E                               start 000E  
            __size_of_adxl345_init 0031              __size_of_adxl345_read 0041  
                 ?_I2C_Master_Init 002D                   ?_I2C_Master_Read 0074  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                  __end_of___aldiv 00C2                              ?_main 0070  
                            _ACKEN 048C                              _ACKDT 048D  
                            _ANSEL 0188                    __end_of___lldiv 021C  
                            i1l101 02C4                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTD 0008  
                            _PORTE 0009                              u60_20 02BB  
                            u60_21 02BA                              u57_20 029D  
                            u57_21 029C                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _TRISE 0089                              u58_20 02A5  
                            u58_21 02A4                              u59_20 02AB  
                            u59_21 02AA                              _TXREG 0019  
                  adxl345_read@add 0022                              _myISR 0297  
                            pclath 000A                              status 0003  
                            wtemp0 007E                       _adxl345_init 02CD  
                     _adxl345_read 021C                    __initialization 0011  
                     __end_of_main 0141                             ??_main 0042  
           __size_of_adxl345_write 002A                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0074                 ??_I2C_Master_Start 0074  
               ??_I2C_Master_Write 0076                             ?_myISR 0070  
                           _ANSELH 0189                             i1l1080 029D  
                           i1l1090 02B4                             i1l1082 02A1  
                           i1l1092 02BB                             i1l1084 02A5  
                           i1l1094 02BE                             i1l1086 02AB  
                           i1l1078 0297                             i1l1088 02AE  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                          ??___aldiv 0074  
                        ??___lldiv 0074                             saved_w 007E  
                _SYSTEM_Initialize 0357            __end_of__initialization 0021  
               ?_SYSTEM_Initialize 0070                      _adxl345_write 032D  
                 adxl345_write@add 0020                     __pcstackCOMMON 0070  
              ??_SYSTEM_Initialize 0075                      __end_of_myISR 02CD  
                ?_USART_Initialize 002E                 ??_USART_Initialize 0032  
                          ??_myISR 0070          __end_of_SYSTEM_Initialize 037B  
                       __pbssBANK0 0043                     ?_adxl345_write 0020  
                       __pmaintext 00C2                         __pintentry 0004  
__size_of_PORTS_MANAGER_Initialize 0020          ?_PORTS_MANAGER_Initialize 0070  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                          ___aldiv 0025                            ___lldiv 01B4  
                          __ptext1 021C                            __ptext2 02FE  
                          __ptext3 02CD                            __ptext4 032D  
                          __ptext5 03A8                            __ptext6 03B2  
                          __ptext7 03BB                            __ptext8 039B  
                          __ptext9 0357                         _read_value 004E  
                 ___aldiv@dividend 0024           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 002F           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009         __size_of_SYSTEM_Initialize 0024  
             end_of_initialization 0021                    ??_adxl345_write 0076  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002C  
                USART_Initialize@x 003E                          _RCSTAbits 0018  
                 ___aldiv@quotient 002A                   I2C_Master_Init@c 002D  
                 I2C_Master_Read@a 0074                          _TXSTAbits 0098  
                adxl345_write@data 0022                        _BAUDCTLbits 0187  
              start_initialization 0011                  ??_I2C_Master_Init 0031  
                ??_I2C_Master_Read 0076                  ??_I2C_Master_Wait 0074  
                ??_I2C_Master_Stop 0074          __size_of_USART_Initialize 0073  
 __end_of_PORTS_MANAGER_Initialize 039B                        __pbssCOMMON 0078  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    ?_adxl345_init 0070                      ?_adxl345_read 0022  
                 _I2C_Master_Start 03BB                   _I2C_Master_Write 03A8  
                         ?___aldiv 0020                           ?___lldiv 0020  
                        _handshake 004C                     __size_of_myISR 0036  
                  ___aldiv@divisor 0020                  interrupt_function 0004  
                  ___aldiv@counter 0028                     ??_adxl345_init 0076  
                   ??_adxl345_read 0078                           _PIE1bits 008C  
                         _PIR1bits 000C           _PORTS_MANAGER_Initialize 037B  
              I2C_Master_Read@temp 0020                 adxl345_read@retval 0024  
            __end_of_adxl345_write 0357                   _USART_Initialize 0141  
                 __size_of___aldiv 009D                   __size_of___lldiv 0068  
                  _I2C_Master_Init 025D                    _I2C_Master_Read 02FE  
                  _I2C_Master_Wait 039B                    _I2C_Master_Stop 03B2  
                         __ptext10 0141                           __ptext11 0025  
                         __ptext12 037B                           __ptext13 025D  
                         __ptext14 01B4                           __ptext15 0297  
                    __size_of_main 007F               __end_of_adxl345_init 02FE  
             __end_of_adxl345_read 025D           __end_of_I2C_Master_Start 03C4  
         __end_of_I2C_Master_Write 03B2                         _INTCONbits 000B  
                         intlevel1 0000                       _sensor_value 0043  
                 ___lldiv@dividend 0024                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0297            __end_of_I2C_Master_Read 032D  
          __end_of_I2C_Master_Wait 03A8            __end_of_I2C_Master_Stop 03BB  
                 ___lldiv@quotient 0028                  I2C_Master_Write@d 0074  
                     ___aldiv@sign 0029           USART_Initialize@baudrate 002E  
       ??_PORTS_MANAGER_Initialize 0074  
