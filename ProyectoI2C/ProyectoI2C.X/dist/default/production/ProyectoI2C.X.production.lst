

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 15:08:50 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446                           
   447                           	psect	idataBANK0
   448  01AE                     __pidataBANK0:
   449                           
   450                           ;initializer for _contador
   451  01AE  3432               	retlw	50
   452  01AF  3400               	retlw	0
   453  0019                     _TXREG	set	25
   454  001A                     _RCREG	set	26
   455  000C                     _PIR1bits	set	12
   456  0009                     _PORTE	set	9
   457  0008                     _PORTD	set	8
   458  0006                     _PORTB	set	6
   459  0005                     _PORTA	set	5
   460  000B                     _INTCONbits	set	11
   461  0018                     _RCSTAbits	set	24
   462  008F                     _OSCCONbits	set	143
   463  0089                     _TRISE	set	137
   464  0088                     _TRISD	set	136
   465  0096                     _IOCB	set	150
   466  0086                     _TRISB	set	134
   467  0085                     _TRISA	set	133
   468  008C                     _PIE1bits	set	140
   469  0099                     _SPBRG	set	153
   470  0098                     _TXSTAbits	set	152
   471  0189                     _ANSELH	set	393
   472  0188                     _ANSEL	set	392
   473  0187                     _BAUDCTLbits	set	391
   474                           
   475                           	psect	cinit
   476  000F                     start_initialization:	
   477                           ; #config settings
   478                           
   479  000F                     __initialization:
   480                           
   481                           ; Initialize objects allocated to BANK0
   482  000F  120A  118A  21AE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   483  0014  00E7               	movwf	__pdataBANK0& (0+127)
   484  0015  120A  118A  21AF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   485  001A  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   486                           
   487                           ; Clear objects allocated to BANK0
   488  001B  1383               	bcf	3,7	;select IRP bank0
   489  001C  3020               	movlw	low __pbssBANK0
   490  001D  0084               	movwf	4
   491  001E  3049               	movlw	low (__pbssBANK0+41)
   492  001F  120A  118A  21A6  120A  118A  	fcall	clear_ram0
   493                           
   494                           ; Clear objects allocated to COMMON
   495  0024  01F8               	clrf	__pbssCOMMON& (0+127)
   496  0025  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   497  0026                     end_of_initialization:	
   498                           ;End of C runtime variable initialization code
   499                           
   500  0026                     __end_of__initialization:
   501  0026  0183               	clrf	3
   502  0027  120A  118A  2996   	ljmp	_main	;jump to C main() function
   503                           
   504                           	psect	bssCOMMON
   505  0078                     __pbssCOMMON:
   506  0078                     _cont:
   507  0078                     	ds	2
   508                           
   509                           	psect	bssBANK0
   510  0020                     __pbssBANK0:
   511  0020                     _Buffer2:
   512  0020                     	ds	20
   513  0034                     _Buffer:
   514  0034                     	ds	20
   515  0048                     _read_value:
   516  0048                     	ds	1
   517                           
   518                           	psect	dataBANK0
   519  0067                     __pdataBANK0:
   520  0067                     _contador:
   521  0067                     	ds	2
   522                           
   523                           	psect	clrtext
   524  01A6                     clear_ram0:	
   525                           ;	Called with FSR containing the base address, and
   526                           ;	W with the last address+1
   527                           
   528  01A6  0064               	clrwdt	;clear the watchdog before getting into this loop
   529  01A7                     clrloop0:
   530  01A7  0180               	clrf	0	;clear RAM location pointed to by FSR
   531  01A8  0A84               	incf	4,f	;increment pointer
   532  01A9  0604               	xorwf	4,w	;XOR with final address
   533  01AA  1903               	btfsc	3,2	;have we reached the end yet?
   534  01AB  3400               	retlw	0	;all done for this memory range, return
   535  01AC  0604               	xorwf	4,w	;XOR again to restore value
   536  01AD  29A7               	goto	clrloop0	;do the next byte
   537                           
   538                           	psect	cstackCOMMON
   539  0070                     __pcstackCOMMON:
   540  0070                     ?_PORTS_MANAGER_Initialize:
   541  0070                     ?_SYSTEM_Initialize:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_myISR:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ??_myISR:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_main:	
   551                           ; 1 bytes @ 0x0
   552                           
   553                           
   554                           ; 1 bytes @ 0x0
   555  0070                     	ds	3
   556  0073                     ??_PORTS_MANAGER_Initialize:
   557  0073                     ??___aldiv:	
   558                           ; 1 bytes @ 0x3
   559                           
   560                           
   561                           ; 1 bytes @ 0x3
   562  0073                     	ds	1
   563  0074                     USART_Initialize@x:
   564                           
   565                           ; 4 bytes @ 0x4
   566  0074                     	ds	4
   567  0078                     ??_SYSTEM_Initialize:
   568  0078                     ??_main:	
   569                           ; 1 bytes @ 0x8
   570                           
   571                           
   572                           	psect	cstackBANK0
   573  0049                     __pcstackBANK0:	
   574                           ; 1 bytes @ 0x8
   575                           
   576  0049                     ?___aldiv:
   577  0049                     ___aldiv@divisor:	
   578                           ; 4 bytes @ 0x0
   579                           
   580                           
   581                           ; 4 bytes @ 0x0
   582  0049                     	ds	4
   583  004D                     ___aldiv@dividend:
   584                           
   585                           ; 4 bytes @ 0x4
   586  004D                     	ds	4
   587  0051                     ___aldiv@counter:
   588                           
   589                           ; 1 bytes @ 0x8
   590  0051                     	ds	1
   591  0052                     ___aldiv@sign:
   592                           
   593                           ; 1 bytes @ 0x9
   594  0052                     	ds	1
   595  0053                     ___aldiv@quotient:
   596                           
   597                           ; 4 bytes @ 0xA
   598  0053                     	ds	4
   599  0057                     ?_USART_Initialize:
   600  0057                     USART_Initialize@baudrate:	
   601                           ; 1 bytes @ 0xE
   602                           
   603                           
   604                           ; 4 bytes @ 0xE
   605  0057                     	ds	4
   606  005B                     ??_USART_Initialize:
   607                           
   608                           ; 1 bytes @ 0x12
   609  005B                     	ds	12
   610                           
   611                           	psect	maintext
   612  0196                     __pmaintext:	
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 51 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, pclath, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : B00/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels required when called:    4
   638 ;; This function calls:
   639 ;;		_SYSTEM_Initialize
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _main
   647  0196                     _main:
   648  0196                     l896:	
   649                           ;incstack = 0
   650                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   651                           
   652                           
   653                           ;main.c: 52:     SYSTEM_Initialize();
   654  0196  120A  118A  2181  120A  118A  	fcall	_SYSTEM_Initialize
   655  019B                     l898:
   656                           
   657                           ;main.c: 53:     OSCCONbits.IRCF = 0b111;
   658  019B  3070               	movlw	112
   659  019C  1683               	bsf	3,5	;RP0=1, select bank1
   660  019D  1303               	bcf	3,6	;RP1=0, select bank1
   661  019E  048F               	iorwf	15,f	;volatile
   662  019F                     l900:
   663                           
   664                           ;main.c: 55:         PORTD = read_value;
   665  019F  1283               	bcf	3,5	;RP0=0, select bank0
   666  01A0  0848               	movf	_read_value,w
   667  01A1  0088               	movwf	8	;volatile
   668  01A2  299F               	goto	l900
   669  01A3  120A  118A  280C   	ljmp	start
   670  01A6                     __end_of_main:
   671                           
   672                           	psect	text1
   673  0181                     __ptext1:	
   674 ;; *************** function _SYSTEM_Initialize *****************
   675 ;; Defined at:
   676 ;;		line 11 in file "lcs.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, pclath, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    3
   697 ;; This function calls:
   698 ;;		_PORTS_MANAGER_Initialize
   699 ;;		_USART_Initialize
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _SYSTEM_Initialize
   707  0181                     _SYSTEM_Initialize:
   708  0181                     l892:	
   709                           ;incstack = 0
   710                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
   711                           
   712                           
   713                           ;lcs.c: 12:     PORTS_MANAGER_Initialize();
   714  0181  120A  118A  2161  120A  118A  	fcall	_PORTS_MANAGER_Initialize
   715  0186                     l894:
   716                           
   717                           ;lcs.c: 13:     USART_Initialize(9600);
   718  0186  3000               	movlw	0
   719  0187  1283               	bcf	3,5	;RP0=0, select bank0
   720  0188  1303               	bcf	3,6	;RP1=0, select bank0
   721  0189  00DA               	movwf	USART_Initialize@baudrate+3
   722  018A  3000               	movlw	0
   723  018B  00D9               	movwf	USART_Initialize@baudrate+2
   724  018C  3025               	movlw	37
   725  018D  00D8               	movwf	USART_Initialize@baudrate+1
   726  018E  3080               	movlw	128
   727  018F  00D7               	movwf	USART_Initialize@baudrate
   728  0190  120A  118A  20C7  120A  118A  	fcall	_USART_Initialize
   729  0195                     l22:
   730  0195  0008               	return
   731  0196                     __end_of_SYSTEM_Initialize:
   732                           
   733                           	psect	text2
   734  00C7                     __ptext2:	
   735 ;; *************** function _USART_Initialize *****************
   736 ;; Defined at:
   737 ;;		line 16 in file "usart.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  baudrate        4   14[BANK0 ] const long 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  x               4    4[COMMON] long 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       4       0       0       0
   752 ;;      Locals:         4       0       0       0       0
   753 ;;      Temps:          0      12       0       0       0
   754 ;;      Totals:         4      16       0       0       0
   755 ;;Total ram usage:       20 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		___aldiv
   760 ;; This function is called by:
   761 ;;		_SYSTEM_Initialize
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _USART_Initialize
   767  00C7                     _USART_Initialize:
   768  00C7                     l878:	
   769                           ;incstack = 0
   770                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
   771                           
   772                           
   773                           ;usart.c: 17:     long int x;;usart.c: 20:     TXSTAbits.TX9 = 0;
   774  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   775  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   776  00C9  1318               	bcf	24,6	;volatile
   777                           
   778                           ;usart.c: 22:     TXSTAbits.TXEN = 1;
   779  00CA  1698               	bsf	24,5	;volatile
   780                           
   781                           ;usart.c: 24:     TXSTAbits.SYNC = 0;
   782  00CB  1218               	bcf	24,4	;volatile
   783                           
   784                           ;usart.c: 26:     TXSTAbits.BRGH = 0;
   785  00CC  1118               	bcf	24,2	;volatile
   786                           
   787                           ;usart.c: 27:     BAUDCTLbits.BRG16 = 0;
   788  00CD  1683               	bsf	3,5	;RP0=1, select bank3
   789  00CE  1703               	bsf	3,6	;RP1=1, select bank3
   790  00CF  1187               	bcf	7,3	;volatile
   791                           
   792                           ;usart.c: 30:     RCSTAbits.SPEN = 1;
   793  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   794  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   795  00D2  1798               	bsf	24,7	;volatile
   796                           
   797                           ;usart.c: 32:     RCSTAbits.CREN = 1;
   798  00D3  1618               	bsf	24,4	;volatile
   799  00D4                     l880:
   800                           
   801                           ;usart.c: 34:     x = (8000000 - baudrate*64)/(baudrate*64);
   802  00D4  0857               	movf	USART_Initialize@baudrate,w
   803  00D5  00DB               	movwf	??_USART_Initialize
   804  00D6  0858               	movf	USART_Initialize@baudrate+1,w
   805  00D7  00DC               	movwf	??_USART_Initialize+1
   806  00D8  0859               	movf	USART_Initialize@baudrate+2,w
   807  00D9  00DD               	movwf	??_USART_Initialize+2
   808  00DA  085A               	movf	USART_Initialize@baudrate+3,w
   809  00DB  00DE               	movwf	??_USART_Initialize+3
   810  00DC  3006               	movlw	6
   811  00DD                     u435:
   812  00DD  1003               	clrc
   813  00DE  0DDB               	rlf	??_USART_Initialize,f
   814  00DF  0DDC               	rlf	??_USART_Initialize+1,f
   815  00E0  0DDD               	rlf	??_USART_Initialize+2,f
   816  00E1  0DDE               	rlf	??_USART_Initialize+3,f
   817  00E2                     u430:
   818  00E2  3EFF               	addlw	-1
   819  00E3  1D03               	skipz
   820  00E4  28DD               	goto	u435
   821  00E5  085E               	movf	??_USART_Initialize+3,w
   822  00E6  00CC               	movwf	___aldiv@divisor+3
   823  00E7  085D               	movf	??_USART_Initialize+2,w
   824  00E8  00CB               	movwf	___aldiv@divisor+2
   825  00E9  085C               	movf	??_USART_Initialize+1,w
   826  00EA  00CA               	movwf	___aldiv@divisor+1
   827  00EB  085B               	movf	??_USART_Initialize,w
   828  00EC  00C9               	movwf	___aldiv@divisor
   829  00ED  0857               	movf	USART_Initialize@baudrate,w
   830  00EE  00DF               	movwf	??_USART_Initialize+4
   831  00EF  0858               	movf	USART_Initialize@baudrate+1,w
   832  00F0  00E0               	movwf	??_USART_Initialize+5
   833  00F1  0859               	movf	USART_Initialize@baudrate+2,w
   834  00F2  00E1               	movwf	??_USART_Initialize+6
   835  00F3  085A               	movf	USART_Initialize@baudrate+3,w
   836  00F4  00E2               	movwf	??_USART_Initialize+7
   837  00F5  3006               	movlw	6
   838  00F6                     u445:
   839  00F6  1003               	clrc
   840  00F7  0DDF               	rlf	??_USART_Initialize+4,f
   841  00F8  0DE0               	rlf	??_USART_Initialize+5,f
   842  00F9  0DE1               	rlf	??_USART_Initialize+6,f
   843  00FA  0DE2               	rlf	??_USART_Initialize+7,f
   844  00FB                     u440:
   845  00FB  3EFF               	addlw	-1
   846  00FC  1D03               	skipz
   847  00FD  28F6               	goto	u445
   848  00FE  3000               	movlw	0
   849  00FF  00E3               	movwf	??_USART_Initialize+8
   850  0100  3012               	movlw	18
   851  0101  00E4               	movwf	??_USART_Initialize+9
   852  0102  307A               	movlw	122
   853  0103  00E5               	movwf	??_USART_Initialize+10
   854  0104  3000               	movlw	0
   855  0105  00E6               	movwf	??_USART_Initialize+11
   856  0106  085F               	movf	??_USART_Initialize+4,w
   857  0107  02E3               	subwf	??_USART_Initialize+8,f
   858  0108  0860               	movf	??_USART_Initialize+5,w
   859  0109  1C03               	skipc
   860  010A  0F60               	incfsz	??_USART_Initialize+5,w
   861  010B  290D               	goto	u451
   862  010C  290E               	goto	u452
   863  010D                     u451:
   864  010D  02E4               	subwf	??_USART_Initialize+9,f
   865  010E                     u452:
   866  010E  0861               	movf	??_USART_Initialize+6,w
   867  010F  1C03               	skipc
   868  0110  0F61               	incfsz	??_USART_Initialize+6,w
   869  0111  2913               	goto	u453
   870  0112  2914               	goto	u454
   871  0113                     u453:
   872  0113  02E5               	subwf	??_USART_Initialize+10,f
   873  0114                     u454:
   874  0114  0862               	movf	??_USART_Initialize+7,w
   875  0115  1C03               	skipc
   876  0116  0F62               	incfsz	??_USART_Initialize+7,w
   877  0117  2919               	goto	u455
   878  0118  291A               	goto	u456
   879  0119                     u455:
   880  0119  02E6               	subwf	??_USART_Initialize+11,f
   881  011A                     u456:
   882  011A  0866               	movf	??_USART_Initialize+11,w
   883  011B  00D0               	movwf	___aldiv@dividend+3
   884  011C  0865               	movf	??_USART_Initialize+10,w
   885  011D  00CF               	movwf	___aldiv@dividend+2
   886  011E  0864               	movf	??_USART_Initialize+9,w
   887  011F  00CE               	movwf	___aldiv@dividend+1
   888  0120  0863               	movf	??_USART_Initialize+8,w
   889  0121  00CD               	movwf	___aldiv@dividend
   890  0122  120A  118A  202A  120A  118A  	fcall	___aldiv
   891  0127  1283               	bcf	3,5	;RP0=0, select bank0
   892  0128  1303               	bcf	3,6	;RP1=0, select bank0
   893  0129  084C               	movf	?___aldiv+3,w
   894  012A  00F7               	movwf	USART_Initialize@x+3
   895  012B  084B               	movf	?___aldiv+2,w
   896  012C  00F6               	movwf	USART_Initialize@x+2
   897  012D  084A               	movf	?___aldiv+1,w
   898  012E  00F5               	movwf	USART_Initialize@x+1
   899  012F  0849               	movf	?___aldiv,w
   900  0130  00F4               	movwf	USART_Initialize@x
   901  0131                     l882:
   902                           
   903                           ;usart.c: 35:     SPBRG = x;
   904  0131  0874               	movf	USART_Initialize@x,w
   905  0132  1683               	bsf	3,5	;RP0=1, select bank1
   906  0133  1303               	bcf	3,6	;RP1=0, select bank1
   907  0134  0099               	movwf	25	;volatile
   908  0135                     l884:
   909                           
   910                           ;usart.c: 38:     INTCONbits.GIE = 1;
   911  0135  178B               	bsf	11,7	;volatile
   912  0136                     l886:
   913                           
   914                           ;usart.c: 40:     INTCONbits.PEIE = 1;
   915  0136  170B               	bsf	11,6	;volatile
   916  0137                     l888:
   917                           
   918                           ;usart.c: 43:     PIE1bits.RCIE = 1;
   919  0137  168C               	bsf	12,5	;volatile
   920  0138                     l890:
   921                           
   922                           ;usart.c: 45:     PIE1bits.TXIE = 1;
   923  0138  160C               	bsf	12,4	;volatile
   924  0139                     l15:
   925  0139  0008               	return
   926  013A                     __end_of_USART_Initialize:
   927                           
   928                           	psect	text3
   929  002A                     __ptext3:	
   930 ;; *************** function ___aldiv *****************
   931 ;; Defined at:
   932 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  divisor         4    0[BANK0 ] long 
   935 ;;  dividend        4    4[BANK0 ] long 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  quotient        4   10[BANK0 ] long 
   938 ;;  sign            1    9[BANK0 ] unsigned char 
   939 ;;  counter         1    8[BANK0 ] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  4    0[BANK0 ] long 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       8       0       0       0
   950 ;;      Locals:         0       6       0       0       0
   951 ;;      Temps:          1       0       0       0       0
   952 ;;      Totals:         1      14       0       0       0
   953 ;;Total ram usage:       15 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_USART_Initialize
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function ___aldiv
   965  002A                     ___aldiv:
   966  002A                     l838:	
   967                           ;incstack = 0
   968                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   969                           
   970  002A  1283               	bcf	3,5	;RP0=0, select bank0
   971  002B  1303               	bcf	3,6	;RP1=0, select bank0
   972  002C  01D2               	clrf	___aldiv@sign
   973  002D                     l840:
   974  002D  1FCC               	btfss	___aldiv@divisor+3,7
   975  002E  2830               	goto	u331
   976  002F  2831               	goto	u330
   977  0030                     u331:
   978  0030  283E               	goto	l237
   979  0031                     u330:
   980  0031                     l842:
   981  0031  09C9               	comf	___aldiv@divisor,f
   982  0032  09CA               	comf	___aldiv@divisor+1,f
   983  0033  09CB               	comf	___aldiv@divisor+2,f
   984  0034  09CC               	comf	___aldiv@divisor+3,f
   985  0035  0AC9               	incf	___aldiv@divisor,f
   986  0036  1903               	skipnz
   987  0037  0ACA               	incf	___aldiv@divisor+1,f
   988  0038  1903               	skipnz
   989  0039  0ACB               	incf	___aldiv@divisor+2,f
   990  003A  1903               	skipnz
   991  003B  0ACC               	incf	___aldiv@divisor+3,f
   992  003C  01D2               	clrf	___aldiv@sign
   993  003D  0AD2               	incf	___aldiv@sign,f
   994  003E                     l237:
   995  003E  1FD0               	btfss	___aldiv@dividend+3,7
   996  003F  2841               	goto	u341
   997  0040  2842               	goto	u340
   998  0041                     u341:
   999  0041  2851               	goto	l848
  1000  0042                     u340:
  1001  0042                     l844:
  1002  0042  09CD               	comf	___aldiv@dividend,f
  1003  0043  09CE               	comf	___aldiv@dividend+1,f
  1004  0044  09CF               	comf	___aldiv@dividend+2,f
  1005  0045  09D0               	comf	___aldiv@dividend+3,f
  1006  0046  0ACD               	incf	___aldiv@dividend,f
  1007  0047  1903               	skipnz
  1008  0048  0ACE               	incf	___aldiv@dividend+1,f
  1009  0049  1903               	skipnz
  1010  004A  0ACF               	incf	___aldiv@dividend+2,f
  1011  004B  1903               	skipnz
  1012  004C  0AD0               	incf	___aldiv@dividend+3,f
  1013  004D                     l846:
  1014  004D  3001               	movlw	1
  1015  004E  00F3               	movwf	??___aldiv
  1016  004F  0873               	movf	??___aldiv,w
  1017  0050  06D2               	xorwf	___aldiv@sign,f
  1018  0051                     l848:
  1019  0051  3000               	movlw	0
  1020  0052  00D6               	movwf	___aldiv@quotient+3
  1021  0053  3000               	movlw	0
  1022  0054  00D5               	movwf	___aldiv@quotient+2
  1023  0055  3000               	movlw	0
  1024  0056  00D4               	movwf	___aldiv@quotient+1
  1025  0057  3000               	movlw	0
  1026  0058  00D3               	movwf	___aldiv@quotient
  1027  0059                     l850:
  1028  0059  084C               	movf	___aldiv@divisor+3,w
  1029  005A  044B               	iorwf	___aldiv@divisor+2,w
  1030  005B  044A               	iorwf	___aldiv@divisor+1,w
  1031  005C  0449               	iorwf	___aldiv@divisor,w
  1032  005D  1903               	skipnz
  1033  005E  2860               	goto	u351
  1034  005F  2861               	goto	u350
  1035  0060                     u351:
  1036  0060  28AE               	goto	l870
  1037  0061                     u350:
  1038  0061                     l852:
  1039  0061  01D1               	clrf	___aldiv@counter
  1040  0062  0AD1               	incf	___aldiv@counter,f
  1041  0063  2871               	goto	l856
  1042  0064                     l854:
  1043  0064  3001               	movlw	1
  1044  0065  00F3               	movwf	??___aldiv
  1045  0066                     u365:
  1046  0066  1003               	clrc
  1047  0067  0DC9               	rlf	___aldiv@divisor,f
  1048  0068  0DCA               	rlf	___aldiv@divisor+1,f
  1049  0069  0DCB               	rlf	___aldiv@divisor+2,f
  1050  006A  0DCC               	rlf	___aldiv@divisor+3,f
  1051  006B  0BF3               	decfsz	??___aldiv,f
  1052  006C  2866               	goto	u365
  1053  006D  3001               	movlw	1
  1054  006E  00F3               	movwf	??___aldiv
  1055  006F  0873               	movf	??___aldiv,w
  1056  0070  07D1               	addwf	___aldiv@counter,f
  1057  0071                     l856:
  1058  0071  1FCC               	btfss	___aldiv@divisor+3,7
  1059  0072  2874               	goto	u371
  1060  0073  2875               	goto	u370
  1061  0074                     u371:
  1062  0074  2864               	goto	l854
  1063  0075                     u370:
  1064  0075                     l858:
  1065  0075  3001               	movlw	1
  1066  0076  00F3               	movwf	??___aldiv
  1067  0077                     u385:
  1068  0077  1003               	clrc
  1069  0078  0DD3               	rlf	___aldiv@quotient,f
  1070  0079  0DD4               	rlf	___aldiv@quotient+1,f
  1071  007A  0DD5               	rlf	___aldiv@quotient+2,f
  1072  007B  0DD6               	rlf	___aldiv@quotient+3,f
  1073  007C  0BF3               	decfsz	??___aldiv,f
  1074  007D  2877               	goto	u385
  1075  007E                     l860:
  1076  007E  084C               	movf	___aldiv@divisor+3,w
  1077  007F  0250               	subwf	___aldiv@dividend+3,w
  1078  0080  1D03               	skipz
  1079  0081  288C               	goto	u395
  1080  0082  084B               	movf	___aldiv@divisor+2,w
  1081  0083  024F               	subwf	___aldiv@dividend+2,w
  1082  0084  1D03               	skipz
  1083  0085  288C               	goto	u395
  1084  0086  084A               	movf	___aldiv@divisor+1,w
  1085  0087  024E               	subwf	___aldiv@dividend+1,w
  1086  0088  1D03               	skipz
  1087  0089  288C               	goto	u395
  1088  008A  0849               	movf	___aldiv@divisor,w
  1089  008B  024D               	subwf	___aldiv@dividend,w
  1090  008C                     u395:
  1091  008C  1C03               	skipc
  1092  008D  288F               	goto	u391
  1093  008E  2890               	goto	u390
  1094  008F                     u391:
  1095  008F  289F               	goto	l866
  1096  0090                     u390:
  1097  0090                     l862:
  1098  0090  0849               	movf	___aldiv@divisor,w
  1099  0091  02CD               	subwf	___aldiv@dividend,f
  1100  0092  084A               	movf	___aldiv@divisor+1,w
  1101  0093  1C03               	skipc
  1102  0094  0F4A               	incfsz	___aldiv@divisor+1,w
  1103  0095  02CE               	subwf	___aldiv@dividend+1,f
  1104  0096  084B               	movf	___aldiv@divisor+2,w
  1105  0097  1C03               	skipc
  1106  0098  0F4B               	incfsz	___aldiv@divisor+2,w
  1107  0099  02CF               	subwf	___aldiv@dividend+2,f
  1108  009A  084C               	movf	___aldiv@divisor+3,w
  1109  009B  1C03               	skipc
  1110  009C  0F4C               	incfsz	___aldiv@divisor+3,w
  1111  009D  02D0               	subwf	___aldiv@dividend+3,f
  1112  009E                     l864:
  1113  009E  1453               	bsf	___aldiv@quotient,0
  1114  009F                     l866:
  1115  009F  3001               	movlw	1
  1116  00A0                     u405:
  1117  00A0  1003               	clrc
  1118  00A1  0CCC               	rrf	___aldiv@divisor+3,f
  1119  00A2  0CCB               	rrf	___aldiv@divisor+2,f
  1120  00A3  0CCA               	rrf	___aldiv@divisor+1,f
  1121  00A4  0CC9               	rrf	___aldiv@divisor,f
  1122  00A5  3EFF               	addlw	-1
  1123  00A6  1D03               	skipz
  1124  00A7  28A0               	goto	u405
  1125  00A8                     l868:
  1126  00A8  3001               	movlw	1
  1127  00A9  02D1               	subwf	___aldiv@counter,f
  1128  00AA  1D03               	btfss	3,2
  1129  00AB  28AD               	goto	u411
  1130  00AC  28AE               	goto	u410
  1131  00AD                     u411:
  1132  00AD  2875               	goto	l858
  1133  00AE                     u410:
  1134  00AE                     l870:
  1135  00AE  0852               	movf	___aldiv@sign,w
  1136  00AF  1903               	btfsc	3,2
  1137  00B0  28B2               	goto	u421
  1138  00B1  28B3               	goto	u420
  1139  00B2                     u421:
  1140  00B2  28BE               	goto	l874
  1141  00B3                     u420:
  1142  00B3                     l872:
  1143  00B3  09D3               	comf	___aldiv@quotient,f
  1144  00B4  09D4               	comf	___aldiv@quotient+1,f
  1145  00B5  09D5               	comf	___aldiv@quotient+2,f
  1146  00B6  09D6               	comf	___aldiv@quotient+3,f
  1147  00B7  0AD3               	incf	___aldiv@quotient,f
  1148  00B8  1903               	skipnz
  1149  00B9  0AD4               	incf	___aldiv@quotient+1,f
  1150  00BA  1903               	skipnz
  1151  00BB  0AD5               	incf	___aldiv@quotient+2,f
  1152  00BC  1903               	skipnz
  1153  00BD  0AD6               	incf	___aldiv@quotient+3,f
  1154  00BE                     l874:
  1155  00BE  0856               	movf	___aldiv@quotient+3,w
  1156  00BF  00CC               	movwf	?___aldiv+3
  1157  00C0  0855               	movf	___aldiv@quotient+2,w
  1158  00C1  00CB               	movwf	?___aldiv+2
  1159  00C2  0854               	movf	___aldiv@quotient+1,w
  1160  00C3  00CA               	movwf	?___aldiv+1
  1161  00C4  0853               	movf	___aldiv@quotient,w
  1162  00C5  00C9               	movwf	?___aldiv
  1163  00C6                     l247:
  1164  00C6  0008               	return
  1165  00C7                     __end_of___aldiv:
  1166                           
  1167                           	psect	text4
  1168  0161                     __ptext4:	
  1169 ;; *************** function _PORTS_MANAGER_Initialize *****************
  1170 ;; Defined at:
  1171 ;;		line 10 in file "ports_manager.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		status,2
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0
  1188 ;;      Totals:         0       0       0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_SYSTEM_Initialize
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           
  1200                           ;psect for function _PORTS_MANAGER_Initialize
  1201  0161                     _PORTS_MANAGER_Initialize:
  1202  0161                     l812:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _PORTS_MANAGER_Initialize: [status,2]
  1205                           
  1206                           
  1207                           ;ports_manager.c: 12:     ANSEL = 0;
  1208  0161  1683               	bsf	3,5	;RP0=1, select bank3
  1209  0162  1703               	bsf	3,6	;RP1=1, select bank3
  1210  0163  0188               	clrf	8	;volatile
  1211                           
  1212                           ;ports_manager.c: 13:     TRISA = 0;
  1213  0164  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0165  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0166  0185               	clrf	5	;volatile
  1216                           
  1217                           ;ports_manager.c: 14:     PORTA = 0;
  1218  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0169  0185               	clrf	5	;volatile
  1221                           
  1222                           ;ports_manager.c: 16:     ANSELH = 0;
  1223  016A  1683               	bsf	3,5	;RP0=1, select bank3
  1224  016B  1703               	bsf	3,6	;RP1=1, select bank3
  1225  016C  0189               	clrf	9	;volatile
  1226                           
  1227                           ;ports_manager.c: 17:     TRISB = 0;
  1228  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1229  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1230  016F  0186               	clrf	6	;volatile
  1231                           
  1232                           ;ports_manager.c: 18:     PORTB = 0;
  1233  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0172  0186               	clrf	6	;volatile
  1236                           
  1237                           ;ports_manager.c: 19:     IOCB = 0;
  1238  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0175  0196               	clrf	22	;volatile
  1241                           
  1242                           ;ports_manager.c: 21:     TRISD = 0;
  1243  0176  0188               	clrf	8	;volatile
  1244                           
  1245                           ;ports_manager.c: 22:     PORTD = 0;
  1246  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0179  0188               	clrf	8	;volatile
  1249                           
  1250                           ;ports_manager.c: 24:     TRISE = 0;
  1251  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1252  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1253  017C  0189               	clrf	9	;volatile
  1254                           
  1255                           ;ports_manager.c: 25:     PORTE = 0;
  1256  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1257  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1258  017F  0189               	clrf	9	;volatile
  1259  0180                     l47:
  1260  0180  0008               	return
  1261  0181                     __end_of_PORTS_MANAGER_Initialize:
  1262                           
  1263                           	psect	text5
  1264  013A                     __ptext5:	
  1265 ;; *************** function _myISR *****************
  1266 ;; Defined at:
  1267 ;;		line 28 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0
  1283 ;;      Temps:          3       0       0       0       0
  1284 ;;      Totals:         3       0       0       0       0
  1285 ;;Total ram usage:        3 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		Interrupt level 1
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _myISR
  1296  013A                     _myISR:
  1297  013A                     i1l818:
  1298                           
  1299                           ;main.c: 29:     if(PIR1bits.RCIF == 1){
  1300  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1301  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1302  013C  1E8C               	btfss	12,5	;volatile
  1303  013D  293F               	goto	u30_21
  1304  013E  2940               	goto	u30_20
  1305  013F                     u30_21:
  1306  013F  2944               	goto	i1l822
  1307  0140                     u30_20:
  1308  0140                     i1l820:
  1309                           
  1310                           ;main.c: 30:         read_value = RCREG;
  1311  0140  081A               	movf	26,w	;volatile
  1312  0141  00F0               	movwf	??_myISR
  1313  0142  0870               	movf	??_myISR,w
  1314  0143  00C8               	movwf	_read_value
  1315  0144                     i1l822:
  1316                           
  1317                           ;main.c: 33:     if(PIR1bits.TXIF == 1){
  1318  0144  1E0C               	btfss	12,4	;volatile
  1319  0145  2947               	goto	u31_21
  1320  0146  2948               	goto	u31_20
  1321  0147                     u31_21:
  1322  0147  295A               	goto	i1l78
  1323  0148                     u31_20:
  1324  0148                     i1l824:
  1325                           
  1326                           ;main.c: 34:         TXREG = cont;
  1327  0148  0878               	movf	_cont,w
  1328  0149  0099               	movwf	25	;volatile
  1329  014A                     i1l826:
  1330                           
  1331                           ;main.c: 35:         if (cont == 254){
  1332  014A  30FE               	movlw	254
  1333  014B  0678               	xorwf	_cont,w
  1334  014C  0479               	iorwf	_cont+1,w
  1335  014D  1D03               	btfss	3,2
  1336  014E  2950               	goto	u32_21
  1337  014F  2951               	goto	u32_20
  1338  0150                     u32_21:
  1339  0150  2954               	goto	i1l830
  1340  0151                     u32_20:
  1341  0151                     i1l828:
  1342                           
  1343                           ;main.c: 36:             cont = 0;
  1344  0151  01F8               	clrf	_cont
  1345  0152  01F9               	clrf	_cont+1
  1346                           
  1347                           ;main.c: 37:         }
  1348  0153  295A               	goto	i1l78
  1349  0154                     i1l830:
  1350                           
  1351                           ;main.c: 39:             cont++;
  1352  0154  3001               	movlw	1
  1353  0155  07F8               	addwf	_cont,f
  1354  0156  1803               	skipnc
  1355  0157  0AF9               	incf	_cont+1,f
  1356  0158  3000               	movlw	0
  1357  0159  07F9               	addwf	_cont+1,f
  1358  015A                     i1l78:
  1359  015A  0872               	movf	??_myISR+2,w
  1360  015B  008A               	movwf	10
  1361  015C  0E71               	swapf	??_myISR+1,w
  1362  015D  0083               	movwf	3
  1363  015E  0EFE               	swapf	btemp,f
  1364  015F  0E7E               	swapf	btemp,w
  1365  0160  0009               	retfie
  1366  0161                     __end_of_myISR:
  1367  007E                     btemp	set	126	;btemp
  1368  007E                     wtemp0	set	126
  1369                           
  1370                           	psect	intentry
  1371  0004                     __pintentry:	
  1372                           ;incstack = 0
  1373                           ; Regs used in _myISR: [wreg+status,2+status,0]
  1374                           
  1375  0004                     interrupt_function:
  1376  007E                     saved_w	set	btemp
  1377  0004  00FE               	movwf	btemp
  1378  0005  0E03               	swapf	3,w
  1379  0006  00F1               	movwf	??_myISR+1
  1380  0007  080A               	movf	10,w
  1381  0008  00F2               	movwf	??_myISR+2
  1382  0009  120A  118A  293A   	ljmp	_myISR
  1383                           
  1384                           	psect	config
  1385                           
  1386                           ;Config register CONFIG1 @ 0x2007
  1387                           ;	Oscillator Selection bits
  1388                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1389                           ;	Watchdog Timer Enable bit
  1390                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1391                           ;	Power-up Timer Enable bit
  1392                           ;	PWRTE = OFF, PWRT disabled
  1393                           ;	RE3/MCLR pin function select bit
  1394                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1395                           ;	Code Protection bit
  1396                           ;	CP = OFF, Program memory code protection is disabled
  1397                           ;	Data Code Protection bit
  1398                           ;	CPD = OFF, Data memory code protection is disabled
  1399                           ;	Brown Out Reset Selection bits
  1400                           ;	BOREN = OFF, BOR disabled
  1401                           ;	Internal External Switchover bit
  1402                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1403                           ;	Fail-Safe Clock Monitor Enabled bit
  1404                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1405                           ;	Low Voltage Programming Enable bit
  1406                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1407                           ;	In-Circuit Debugger Mode bit
  1408                           ;	DEBUG = 0x1, unprogrammed default
  1409  2007                     	org	8199
  1410  2007  20F4               	dw	8436
  1411                           
  1412                           ;Config register CONFIG2 @ 0x2008
  1413                           ;	Brown-out Reset Selection bit
  1414                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1415                           ;	Flash Program Memory Self Write Enable bits
  1416                           ;	WRT = OFF, Write protection off
  1417  2008                     	org	8200
  1418  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     30      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_USART_Initialize
    _USART_Initialize->___aldiv

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _SYSTEM_Initialize->_USART_Initialize
    _USART_Initialize->___aldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     811
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     811
           _PORTS_MANAGER_Initialize
                   _USART_Initialize
 ---------------------------------------------------------------------------------
 (2) _USART_Initialize                                    20    16      4     811
                                              4 COMMON     4     4      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PORTS_MANAGER_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _myISR                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _PORTS_MANAGER_Initialize
     _USART_Initialize
       ___aldiv

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      49       5       91.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      53      12        0.0%
ABS                  0      0      53       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 15:08:50 2021

                               l22 0195                                 l15 0139  
                               l47 0180                                 fsr 0004  
         __end_of_USART_Initialize 013A                                l237 003E  
                              l247 00C6                                l812 0161  
                              l900 019F                                l840 002D  
                              l850 0059                                l842 0031  
                              l860 007E                                l852 0061  
                              l844 0042                                l862 0090  
                              l854 0064                                l870 00AE  
                              l846 004D                                l838 002A  
                              l872 00B3                                l864 009E  
                              l856 0071                                l848 0051  
                              l880 00D4                                l874 00BE  
                              l866 009F                                l858 0075  
                              l890 0138                                l882 0131  
                              l868 00A8                                l884 0135  
                              l892 0181                                l886 0136  
                              l878 00C7                                l894 0186  
                              l888 0137                                l896 0196  
                              l898 019B                                u410 00AE  
                              u330 0031                                u411 00AD  
                              u331 0030                                u420 00B3  
                              u340 0042                                u421 00B2  
                              u405 00A0                                u341 0041  
                              u350 0061                                u430 00E2  
                              u351 0060                                u440 00FB  
                              u370 0075                                u371 0074  
                              u451 010D                                u435 00DD  
                              u452 010E                                u365 0066  
                              u453 0113                                u445 00F6  
                              u390 0090                                u454 0114  
                              u391 008F                                u455 0119  
                              u456 011A                                u385 0077  
                              u395 008C                                indf 0000  
                             _IOCB 0096                               i1l78 015A  
                             _cont 0078                               _main 0196  
                             btemp 007E                               start 000C  
                  __end_of___aldiv 00C7                              ?_main 0070  
                            _ANSEL 0188                              i1l820 0140  
                            i1l830 0154                              i1l822 0144  
                            i1l824 0148                              i1l826 014A  
                            i1l818 013A                              i1l828 0151  
                            _RCREG 001A                              u30_20 0140  
                            u30_21 013F                              u31_20 0148  
                            u31_21 0147                              u32_20 0151  
                            u32_21 0150                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTD 0008                              _PORTE 0009  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _TRISE 0089  
                            _TXREG 0019                              _myISR 013A  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 01A6                             ??_main 0078  
                           ?_myISR 0070                             _ANSELH 0189  
                           _Buffer 0034                          ??___aldiv 0073  
                           saved_w 007E                  _SYSTEM_Initialize 0181  
          __end_of__initialization 0026                 ?_SYSTEM_Initialize 0070  
                   __pcstackCOMMON 0070                       __pidataBANK0 01AE  
              ??_SYSTEM_Initialize 0078                      __end_of_myISR 0161  
                ?_USART_Initialize 0057                 ??_USART_Initialize 005B  
                          ??_myISR 0070          __end_of_SYSTEM_Initialize 0196  
                       __pbssBANK0 0020                         __pmaintext 0196  
                       __pintentry 0004  __size_of_PORTS_MANAGER_Initialize 0020  
        ?_PORTS_MANAGER_Initialize 0070                            _Buffer2 0020  
                          ___aldiv 002A                            __ptext1 0181  
                          __ptext2 00C7                            __ptext3 002A  
                          __ptext4 0161                            __ptext5 013A  
                       _read_value 0048                   ___aldiv@dividend 004D  
       __size_of_SYSTEM_Initialize 0015                            clrloop0 01A7  
             end_of_initialization 0026                  USART_Initialize@x 0074  
                        _RCSTAbits 0018                   ___aldiv@quotient 0053  
                        _TXSTAbits 0098                        _BAUDCTLbits 0187  
              start_initialization 000F          __size_of_USART_Initialize 0073  
 __end_of_PORTS_MANAGER_Initialize 0181                        __pdataBANK0 0067  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 0049                           ?___aldiv 0049  
                   __size_of_myISR 0027                    ___aldiv@divisor 0049  
                interrupt_function 0004                    ___aldiv@counter 0051  
                        clear_ram0 01A6                           _PIE1bits 008C  
                         _PIR1bits 000C           _PORTS_MANAGER_Initialize 0161  
                 _USART_Initialize 00C7                   __size_of___aldiv 009D  
                         _contador 0067                      __size_of_main 0010  
                       _INTCONbits 000B                           intlevel1 0000  
                       _OSCCONbits 008F                       ___aldiv@sign 0052  
         USART_Initialize@baudrate 0057         ??_PORTS_MANAGER_Initialize 0073  
