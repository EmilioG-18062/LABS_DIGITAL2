

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 14 22:44:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  008F                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  0105                     	;# 
   517  0107                     	;# 
   518  0108                     	;# 
   519  0109                     	;# 
   520  010C                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0187                     	;# 
   527  0188                     	;# 
   528  0189                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  000D                     	;# 
   545  000E                     	;# 
   546  000E                     	;# 
   547  000F                     	;# 
   548  0010                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0013                     	;# 
   552  0014                     	;# 
   553  0015                     	;# 
   554  0015                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001B                     	;# 
   562  001C                     	;# 
   563  001D                     	;# 
   564  001E                     	;# 
   565  001F                     	;# 
   566  0081                     	;# 
   567  0085                     	;# 
   568  0086                     	;# 
   569  0087                     	;# 
   570  0088                     	;# 
   571  0089                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  008F                     	;# 
   576  0090                     	;# 
   577  0091                     	;# 
   578  0092                     	;# 
   579  0093                     	;# 
   580  0093                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  0105                     	;# 
   595  0107                     	;# 
   596  0108                     	;# 
   597  0109                     	;# 
   598  010C                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010F                     	;# 
   603  0185                     	;# 
   604  0187                     	;# 
   605  0188                     	;# 
   606  0189                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  0008                     _PORTDbits	set	8
   610  0019                     _TXREG	set	25
   611  001A                     _RCREG	set	26
   612  000C                     _PIR1bits	set	12
   613  0013                     _SSPBUF	set	19
   614  0014                     _SSPCON	set	20
   615  0009                     _PORTE	set	9
   616  0008                     _PORTD	set	8
   617  0006                     _PORTB	set	6
   618  0005                     _PORTA	set	5
   619  000B                     _INTCONbits	set	11
   620  0018                     _RCSTAbits	set	24
   621  008F                     _OSCCONbits	set	143
   622  0094                     _SSPSTAT	set	148
   623  0093                     _SSPADD	set	147
   624  0091                     _SSPCON2	set	145
   625  0089                     _TRISE	set	137
   626  0088                     _TRISD	set	136
   627  0096                     _IOCB	set	150
   628  0086                     _TRISB	set	134
   629  0085                     _TRISA	set	133
   630  008C                     _PIE1bits	set	140
   631  0099                     _SPBRG	set	153
   632  0098                     _TXSTAbits	set	152
   633  048C                     _ACKEN	set	1164
   634  048D                     _ACKDT	set	1165
   635  048B                     _RCEN	set	1163
   636  048A                     _PEN	set	1162
   637  0488                     _SEN	set	1160
   638  043C                     _TRISC4	set	1084
   639  043B                     _TRISC3	set	1083
   640  0189                     _ANSELH	set	393
   641  0188                     _ANSEL	set	392
   642  0187                     _BAUDCTLbits	set	391
   643                           
   644                           	psect	cinit
   645  0011                     start_initialization:	
   646                           ; #config settings
   647                           
   648  0011                     __initialization:
   649                           
   650                           ; Clear objects allocated to COMMON
   651  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   652  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   653  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   654                           
   655                           ; Clear objects allocated to BANK0
   656  0014  1283               	bcf	3,5	;RP0=0, select bank0
   657  0015  1303               	bcf	3,6	;RP1=0, select bank0
   658  0016  01C3               	clrf	__pbssBANK0& (0+127)
   659  0017  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   660  0018  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   661  0019  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   662  001A  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   663  001B  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   664  001C  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   665  001D  01CA               	clrf	(__pbssBANK0+7)& (0+127)
   666  001E                     end_of_initialization:	
   667                           ;End of C runtime variable initialization code
   668                           
   669  001E                     __end_of__initialization:
   670  001E  0183               	clrf	3
   671  001F  120A  118A  28BF   	ljmp	_main	;jump to C main() function
   672                           
   673                           	psect	bssCOMMON
   674  0077                     __pbssCOMMON:
   675  0077                     _cont:
   676  0077                     	ds	2
   677  0079                     _read_value:
   678  0079                     	ds	1
   679                           
   680                           	psect	bssBANK0
   681  0043                     __pbssBANK0:
   682  0043                     _sensor_value:
   683  0043                     	ds	6
   684  0049                     _handshake:
   685  0049                     	ds	2
   686                           
   687                           	psect	cstackCOMMON
   688  0070                     __pcstackCOMMON:
   689  0070                     ?_I2C_Master_Start:
   690  0070                     ?_I2C_Master_Stop:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_PORTS_MANAGER_Initialize:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_adxl345_init:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_SYSTEM_Initialize:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_I2C_Master_Wait:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_myISR:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ??_myISR:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_main:	
   712                           ; 1 bytes @ 0x0
   713                           
   714                           
   715                           ; 1 bytes @ 0x0
   716  0070                     	ds	4
   717  0074                     ??_I2C_Master_Start:
   718  0074                     ?_I2C_Master_Write:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     ??_I2C_Master_Stop:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0074                     ?_I2C_Master_Read:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0074                     ??_PORTS_MANAGER_Initialize:	
   728                           ; 1 bytes @ 0x4
   729                           
   730  0074                     ??_I2C_Master_Wait:	
   731                           ; 1 bytes @ 0x4
   732                           
   733  0074                     ??___lldiv:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0074                     ??___aldiv:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     I2C_Master_Write@d:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     I2C_Master_Read@a:	
   743                           ; 2 bytes @ 0x4
   744                           
   745                           
   746                           ; 2 bytes @ 0x4
   747  0074                     	ds	2
   748  0076                     ??_I2C_Master_Write:
   749  0076                     ??_I2C_Master_Read:	
   750                           ; 1 bytes @ 0x6
   751                           
   752  0076                     ??_adxl345_write:	
   753                           ; 1 bytes @ 0x6
   754                           
   755  0076                     ??_SYSTEM_Initialize:	
   756                           ; 1 bytes @ 0x6
   757                           
   758                           
   759                           ; 1 bytes @ 0x6
   760  0076                     	ds	1
   761                           
   762                           	psect	cstackBANK0
   763  0020                     __pcstackBANK0:
   764  0020                     ?_adxl345_write:
   765  0020                     ?___lldiv:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ?___aldiv:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0020                     I2C_Master_Read@temp:	
   772                           ; 4 bytes @ 0x0
   773                           
   774  0020                     adxl345_write@add:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0020                     ___lldiv@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     ___aldiv@divisor:	
   781                           ; 4 bytes @ 0x0
   782                           
   783                           
   784                           ; 4 bytes @ 0x0
   785  0020                     	ds	1
   786  0021                     ?_adxl345_read:
   787  0021                     adxl345_read@add:	
   788                           ; 1 bytes @ 0x1
   789                           
   790                           
   791                           ; 2 bytes @ 0x1
   792  0021                     	ds	1
   793  0022                     adxl345_write@data:
   794                           
   795                           ; 2 bytes @ 0x2
   796  0022                     	ds	1
   797  0023                     ??_adxl345_read:
   798                           
   799                           ; 1 bytes @ 0x3
   800  0023                     	ds	1
   801  0024                     ??_adxl345_init:
   802  0024                     ___lldiv@dividend:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0024                     ___aldiv@dividend:	
   806                           ; 4 bytes @ 0x4
   807                           
   808                           
   809                           ; 4 bytes @ 0x4
   810  0024                     	ds	1
   811  0025                     adxl345_read@retval:
   812                           
   813                           ; 2 bytes @ 0x5
   814  0025                     	ds	3
   815  0028                     ___aldiv@counter:
   816  0028                     ___lldiv@quotient:	
   817                           ; 1 bytes @ 0x8
   818                           
   819                           
   820                           ; 4 bytes @ 0x8
   821  0028                     	ds	1
   822  0029                     ___aldiv@sign:
   823                           
   824                           ; 1 bytes @ 0x9
   825  0029                     	ds	1
   826  002A                     ___aldiv@quotient:
   827                           
   828                           ; 4 bytes @ 0xA
   829  002A                     	ds	2
   830  002C                     ___lldiv@counter:
   831                           
   832                           ; 1 bytes @ 0xC
   833  002C                     	ds	1
   834  002D                     ?_I2C_Master_Init:
   835  002D                     I2C_Master_Init@c:	
   836                           ; 1 bytes @ 0xD
   837                           
   838                           
   839                           ; 4 bytes @ 0xD
   840  002D                     	ds	1
   841  002E                     ?_USART_Initialize:
   842  002E                     USART_Initialize@baudrate:	
   843                           ; 1 bytes @ 0xE
   844                           
   845                           
   846                           ; 4 bytes @ 0xE
   847  002E                     	ds	3
   848  0031                     ??_I2C_Master_Init:
   849                           
   850                           ; 1 bytes @ 0x11
   851  0031                     	ds	1
   852  0032                     ??_USART_Initialize:
   853                           
   854                           ; 1 bytes @ 0x12
   855  0032                     	ds	12
   856  003E                     USART_Initialize@x:
   857                           
   858                           ; 4 bytes @ 0x1E
   859  003E                     	ds	4
   860  0042                     ??_main:
   861                           
   862                           ; 1 bytes @ 0x22
   863  0042                     	ds	1
   864                           
   865                           	psect	maintext
   866  00BF                     __pmaintext:	
   867 ;;
   868 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   869 ;;
   870 ;; *************** function _main *****************
   871 ;; Defined at:
   872 ;;		line 51 in file "main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : B00/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       1       0       0       0
   889 ;;      Totals:         0       1       0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels required when called:    6
   892 ;; This function calls:
   893 ;;		_SYSTEM_Initialize
   894 ;;		_adxl345_read
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _main
   902  00BF                     _main:
   903  00BF                     l1261:	
   904                           ;incstack = 0
   905                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   906                           
   907                           
   908                           ;main.c: 52:     SYSTEM_Initialize();
   909  00BF  120A  118A  234E  120A  118A  	fcall	_SYSTEM_Initialize
   910  00C4                     l1263:
   911                           
   912                           ;main.c: 53:     OSCCONbits.IRCF = 0b111;
   913  00C4  3070               	movlw	112
   914  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   915  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   916  00C7  048F               	iorwf	15,f	;volatile
   917  00C8                     l1265:
   918                           
   919                           ;main.c: 56:         if(read_value == 1){
   920  00C8  0379               	decf	_read_value,w
   921  00C9  1D03               	btfss	3,2
   922  00CA  28CC               	goto	u901
   923  00CB  28CD               	goto	u900
   924  00CC                     u901:
   925  00CC  28D0               	goto	l1269
   926  00CD                     u900:
   927  00CD                     l1267:
   928                           
   929                           ;main.c: 57:             PORTDbits.RD0 = 1;
   930  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   931  00CE  1408               	bsf	8,0	;volatile
   932                           
   933                           ;main.c: 58:         }
   934  00CF  28EB               	goto	l1281
   935  00D0                     l1269:
   936  00D0  3002               	movlw	2
   937  00D1  0679               	xorwf	_read_value,w
   938  00D2  1D03               	btfss	3,2
   939  00D3  28D5               	goto	u911
   940  00D4  28D6               	goto	u910
   941  00D5                     u911:
   942  00D5  28D9               	goto	l1273
   943  00D6                     u910:
   944  00D6                     l1271:
   945                           
   946                           ;main.c: 60:             PORTDbits.RD0 = 0;
   947  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   948  00D7  1008               	bcf	8,0	;volatile
   949                           
   950                           ;main.c: 61:         }
   951  00D8  28EB               	goto	l1281
   952  00D9                     l1273:
   953  00D9  3003               	movlw	3
   954  00DA  0679               	xorwf	_read_value,w
   955  00DB  1D03               	btfss	3,2
   956  00DC  28DE               	goto	u921
   957  00DD  28DF               	goto	u920
   958  00DE                     u921:
   959  00DE  28E2               	goto	l1277
   960  00DF                     u920:
   961  00DF                     l1275:
   962                           
   963                           ;main.c: 63:             PORTDbits.RD1 = 1;
   964  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   965  00E0  1488               	bsf	8,1	;volatile
   966                           
   967                           ;main.c: 64:         }
   968  00E1  28EB               	goto	l1281
   969  00E2                     l1277:
   970  00E2  3004               	movlw	4
   971  00E3  0679               	xorwf	_read_value,w
   972  00E4  1D03               	btfss	3,2
   973  00E5  28E7               	goto	u931
   974  00E6  28E8               	goto	u930
   975  00E7                     u931:
   976  00E7  28EB               	goto	l155
   977  00E8                     u930:
   978  00E8                     l1279:
   979                           
   980                           ;main.c: 66:             PORTDbits.RD1 = 0;
   981  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   982  00E9  1088               	bcf	8,1	;volatile
   983  00EA  28EB               	goto	l1281
   984  00EB                     l155:
   985  00EB                     l1281:
   986                           
   987                           ;main.c: 69:         sensor_value[0] = adxl345_read(0x32);
   988  00EB  3032               	movlw	50
   989  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   990  00ED  00A1               	movwf	adxl345_read@add
   991  00EE  3000               	movlw	0
   992  00EF  00A2               	movwf	adxl345_read@add+1
   993  00F0  120A  118A  221F  120A  118A  	fcall	_adxl345_read
   994  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   995  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   996  00F7  00C2               	movwf	??_main
   997  00F8  0842               	movf	??_main,w
   998  00F9  00C3               	movwf	_sensor_value
   999                           
  1000                           ;main.c: 70:         sensor_value[1] = adxl345_read(0x33);
  1001  00FA  3033               	movlw	51
  1002  00FB  00A1               	movwf	adxl345_read@add
  1003  00FC  3000               	movlw	0
  1004  00FD  00A2               	movwf	adxl345_read@add+1
  1005  00FE  120A  118A  221F  120A  118A  	fcall	_adxl345_read
  1006  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0105  00C2               	movwf	??_main
  1009  0106  0842               	movf	??_main,w
  1010  0107  00C4               	movwf	_sensor_value+1
  1011                           
  1012                           ;main.c: 72:         sensor_value[2] = adxl345_read(0x34);
  1013  0108  3034               	movlw	52
  1014  0109  00A1               	movwf	adxl345_read@add
  1015  010A  3000               	movlw	0
  1016  010B  00A2               	movwf	adxl345_read@add+1
  1017  010C  120A  118A  221F  120A  118A  	fcall	_adxl345_read
  1018  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0113  00C2               	movwf	??_main
  1021  0114  0842               	movf	??_main,w
  1022  0115  00C5               	movwf	_sensor_value+2
  1023                           
  1024                           ;main.c: 73:         sensor_value[3] = adxl345_read(0x35);
  1025  0116  3035               	movlw	53
  1026  0117  00A1               	movwf	adxl345_read@add
  1027  0118  3000               	movlw	0
  1028  0119  00A2               	movwf	adxl345_read@add+1
  1029  011A  120A  118A  221F  120A  118A  	fcall	_adxl345_read
  1030  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0121  00C2               	movwf	??_main
  1033  0122  0842               	movf	??_main,w
  1034  0123  00C6               	movwf	_sensor_value+3
  1035                           
  1036                           ;main.c: 75:         sensor_value[4] = adxl345_read(0x36);
  1037  0124  3036               	movlw	54
  1038  0125  00A1               	movwf	adxl345_read@add
  1039  0126  3000               	movlw	0
  1040  0127  00A2               	movwf	adxl345_read@add+1
  1041  0128  120A  118A  221F  120A  118A  	fcall	_adxl345_read
  1042  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1043  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1044  012F  00C2               	movwf	??_main
  1045  0130  0842               	movf	??_main,w
  1046  0131  00C7               	movwf	_sensor_value+4
  1047                           
  1048                           ;main.c: 76:         sensor_value[5] = adxl345_read(0x37);
  1049  0132  3037               	movlw	55
  1050  0133  00A1               	movwf	adxl345_read@add
  1051  0134  3000               	movlw	0
  1052  0135  00A2               	movwf	adxl345_read@add+1
  1053  0136  120A  118A  221F  120A  118A  	fcall	_adxl345_read
  1054  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1055  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1056  013D  00C2               	movwf	??_main
  1057  013E  0842               	movf	??_main,w
  1058  013F  00C8               	movwf	_sensor_value+5
  1059  0140  28C8               	goto	l1265
  1060  0141  120A  118A  280E   	ljmp	start
  1061  0144                     __end_of_main:
  1062                           
  1063                           	psect	text1
  1064  021F                     __ptext1:	
  1065 ;; *************** function _adxl345_read *****************
  1066 ;; Defined at:
  1067 ;;		line 31 in file "adxl345.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  add             2    1[BANK0 ] int 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  retval          2    5[BANK0 ] int 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      unsigned char 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       2       0       0       0
  1082 ;;      Locals:         0       2       0       0       0
  1083 ;;      Temps:          0       2       0       0       0
  1084 ;;      Totals:         0       6       0       0       0
  1085 ;;Total ram usage:        6 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    3
  1088 ;; This function calls:
  1089 ;;		_I2C_Master_Read
  1090 ;;		_I2C_Master_Start
  1091 ;;		_I2C_Master_Stop
  1092 ;;		_I2C_Master_Write
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _adxl345_read
  1100  021F                     _adxl345_read:
  1101  021F                     l1247:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _adxl345_read: [wreg+status,2+status,0+pclath+cstack]
  1104                           
  1105                           
  1106                           ;adxl345.c: 32:          int retval;;adxl345.c: 33:          I2C_Master_Start();
  1107  021F  120A  118A  23B7  120A  118A  	fcall	_I2C_Master_Start
  1108                           
  1109                           ;adxl345.c: 34:          I2C_Master_Write(0xA6);
  1110  0224  30A6               	movlw	166
  1111  0225  00F4               	movwf	I2C_Master_Write@d
  1112  0226  3000               	movlw	0
  1113  0227  00F5               	movwf	I2C_Master_Write@d+1
  1114  0228  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Write
  1115                           
  1116                           ;adxl345.c: 35:          I2C_Master_Write(add);
  1117  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1118  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1119  022F  0822               	movf	adxl345_read@add+1,w
  1120  0230  00F5               	movwf	I2C_Master_Write@d+1
  1121  0231  0821               	movf	adxl345_read@add,w
  1122  0232  00F4               	movwf	I2C_Master_Write@d
  1123  0233  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Write
  1124                           
  1125                           ;adxl345.c: 36:          I2C_Master_Start();
  1126  0238  120A  118A  23B7  120A  118A  	fcall	_I2C_Master_Start
  1127                           
  1128                           ;adxl345.c: 37:          I2C_Master_Write(0xA7);
  1129  023D  30A7               	movlw	167
  1130  023E  00F4               	movwf	I2C_Master_Write@d
  1131  023F  3000               	movlw	0
  1132  0240  00F5               	movwf	I2C_Master_Write@d+1
  1133  0241  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Write
  1134                           
  1135                           ;adxl345.c: 38:          retval=I2C_Master_Read(0);
  1136  0246  3000               	movlw	0
  1137  0247  00F4               	movwf	I2C_Master_Read@a
  1138  0248  00F5               	movwf	I2C_Master_Read@a+1
  1139  0249  120A  118A  2325  120A  118A  	fcall	_I2C_Master_Read
  1140  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1141  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0250  00A3               	movwf	??_adxl345_read
  1143  0251  01A4               	clrf	??_adxl345_read+1
  1144  0252  0823               	movf	??_adxl345_read,w
  1145  0253  00A5               	movwf	adxl345_read@retval
  1146  0254  0824               	movf	??_adxl345_read+1,w
  1147  0255  00A6               	movwf	adxl345_read@retval+1
  1148                           
  1149                           ;adxl345.c: 39:          I2C_Master_Stop();
  1150  0256  120A  118A  23AE  120A  118A  	fcall	_I2C_Master_Stop
  1151  025B                     l1249:
  1152                           
  1153                           ;adxl345.c: 40:          return retval;
  1154  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1155  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1156  025D  0825               	movf	adxl345_read@retval,w
  1157  025E                     l16:
  1158  025E  0008               	return
  1159  025F                     __end_of_adxl345_read:
  1160                           
  1161                           	psect	text2
  1162  0325                     __ptext2:	
  1163 ;; *************** function _I2C_Master_Read *****************
  1164 ;; Defined at:
  1165 ;;		line 47 in file "i2c.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  a               2    4[COMMON] int 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  temp            1    0[BANK0 ] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      unsigned char 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         2       0       0       0       0
  1180 ;;      Locals:         0       1       0       0       0
  1181 ;;      Temps:          1       0       0       0       0
  1182 ;;      Totals:         3       1       0       0       0
  1183 ;;Total ram usage:        4 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    2
  1186 ;; This function calls:
  1187 ;;		_I2C_Master_Wait
  1188 ;; This function is called by:
  1189 ;;		_adxl345_read
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _I2C_Master_Read
  1195  0325                     _I2C_Master_Read:
  1196  0325                     l1199:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1199                           
  1200                           
  1201                           ;i2c.c: 47: char I2C_Master_Read(int a);i2c.c: 48: {;i2c.c: 49:   char temp;;i2c.c: 50: 
      +                            I2C_Master_Wait();
  1202  0325  120A  118A  2397  120A  118A  	fcall	_I2C_Master_Wait
  1203  032A                     l1201:
  1204                           
  1205                           ;i2c.c: 51:   RCEN = 1;
  1206  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1207  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1208  032C  1591               	bsf	17,3	;volatile
  1209                           
  1210                           ;i2c.c: 52:   I2C_Master_Wait();
  1211  032D  120A  118A  2397  120A  118A  	fcall	_I2C_Master_Wait
  1212  0332                     l1203:
  1213                           
  1214                           ;i2c.c: 53:   temp = SSPBUF;
  1215  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0334  0813               	movf	19,w	;volatile
  1218  0335  00F6               	movwf	??_I2C_Master_Read
  1219  0336  0876               	movf	??_I2C_Master_Read,w
  1220  0337  00A0               	movwf	I2C_Master_Read@temp
  1221  0338                     l1205:
  1222                           
  1223                           ;i2c.c: 54:   I2C_Master_Wait();
  1224  0338  120A  118A  2397  120A  118A  	fcall	_I2C_Master_Wait
  1225  033D                     l1207:
  1226                           
  1227                           ;i2c.c: 55:   ACKDT = (a)?0:1;
  1228  033D  0874               	movf	I2C_Master_Read@a,w
  1229  033E  0475               	iorwf	I2C_Master_Read@a+1,w
  1230  033F  1903               	btfsc	3,2
  1231  0340  2B42               	goto	u841
  1232  0341  2B46               	goto	u840
  1233  0342                     u841:
  1234  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0344  1691               	bsf	17,5	;volatile
  1237  0345  2B49               	goto	u854
  1238  0346                     u840:
  1239  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0348  1291               	bcf	17,5	;volatile
  1242  0349                     u854:
  1243  0349                     l1209:
  1244                           
  1245                           ;i2c.c: 56:   ACKEN = 1;
  1246  0349  1611               	bsf	17,4	;volatile
  1247  034A                     l1211:
  1248                           
  1249                           ;i2c.c: 57:   return temp;
  1250  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1251  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1252  034C  0820               	movf	I2C_Master_Read@temp,w
  1253  034D                     l115:
  1254  034D  0008               	return
  1255  034E                     __end_of_I2C_Master_Read:
  1256                           
  1257                           	psect	text3
  1258  034E                     __ptext3:	
  1259 ;; *************** function _SYSTEM_Initialize *****************
  1260 ;; Defined at:
  1261 ;;		line 11 in file "lcs.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    5
  1282 ;; This function calls:
  1283 ;;		_I2C_Master_Init
  1284 ;;		_PORTS_MANAGER_Initialize
  1285 ;;		_USART_Initialize
  1286 ;;		_adxl345_init
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _SYSTEM_Initialize
  1294  034E                     _SYSTEM_Initialize:
  1295  034E                     l1253:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1298                           
  1299                           
  1300                           ;lcs.c: 12:     PORTS_MANAGER_Initialize();
  1301  034E  120A  118A  2377  120A  118A  	fcall	_PORTS_MANAGER_Initialize
  1302  0353                     l1255:
  1303                           
  1304                           ;lcs.c: 13:     USART_Initialize(9600);
  1305  0353  3000               	movlw	0
  1306  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0356  00B1               	movwf	USART_Initialize@baudrate+3
  1309  0357  3000               	movlw	0
  1310  0358  00B0               	movwf	USART_Initialize@baudrate+2
  1311  0359  3025               	movlw	37
  1312  035A  00AF               	movwf	USART_Initialize@baudrate+1
  1313  035B  3080               	movlw	128
  1314  035C  00AE               	movwf	USART_Initialize@baudrate
  1315  035D  120A  118A  2144  120A  118A  	fcall	_USART_Initialize
  1316  0362                     l1257:
  1317                           
  1318                           ;lcs.c: 14:     I2C_Master_Init(100000);
  1319  0362  3000               	movlw	0
  1320  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0365  00B0               	movwf	I2C_Master_Init@c+3
  1323  0366  3001               	movlw	1
  1324  0367  00AF               	movwf	I2C_Master_Init@c+2
  1325  0368  3086               	movlw	134
  1326  0369  00AE               	movwf	I2C_Master_Init@c+1
  1327  036A  30A0               	movlw	160
  1328  036B  00AD               	movwf	I2C_Master_Init@c
  1329  036C  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Init
  1330  0371                     l1259:
  1331                           
  1332                           ;lcs.c: 15:     adxl345_init();
  1333  0371  120A  118A  2299  120A  118A  	fcall	_adxl345_init
  1334  0376                     l45:
  1335  0376  0008               	return
  1336  0377                     __end_of_SYSTEM_Initialize:
  1337                           
  1338                           	psect	text4
  1339  0299                     __ptext4:	
  1340 ;; *************** function _adxl345_init *****************
  1341 ;; Defined at:
  1342 ;;		line 43 in file "adxl345.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          0       2       0       0       0
  1359 ;;      Totals:         0       2       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    4
  1363 ;; This function calls:
  1364 ;;		_adxl345_write
  1365 ;; This function is called by:
  1366 ;;		_SYSTEM_Initialize
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _adxl345_init
  1372  0299                     _adxl345_init:
  1373  0299                     l1215:	
  1374                           ;incstack = 0
  1375                           ; Regs used in _adxl345_init: [wreg+status,2+status,0+pclath+cstack]
  1376                           
  1377                           
  1378                           ;adxl345.c: 44:     adxl345_write(0x31,0x0B);
  1379  0299  3031               	movlw	49
  1380  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1381  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1382  029C  00A0               	movwf	adxl345_write@add
  1383  029D  3000               	movlw	0
  1384  029E  00A1               	movwf	adxl345_write@add+1
  1385  029F  300B               	movlw	11
  1386  02A0  00A2               	movwf	adxl345_write@data
  1387  02A1  3000               	movlw	0
  1388  02A2  00A3               	movwf	adxl345_write@data+1
  1389  02A3  120A  118A  22FB  120A  118A  	fcall	_adxl345_write
  1390  02A8                     l1217:
  1391                           
  1392                           ;adxl345.c: 45:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1393  02A8  3006               	movlw	6
  1394  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1395  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1396  02AB  00A5               	movwf	??_adxl345_init+1
  1397  02AC  302F               	movlw	47
  1398  02AD  00A4               	movwf	??_adxl345_init
  1399  02AE                     u947:
  1400  02AE  0BA4               	decfsz	??_adxl345_init,f
  1401  02AF  2AAE               	goto	u947
  1402  02B0  0BA5               	decfsz	??_adxl345_init+1,f
  1403  02B1  2AAE               	goto	u947
  1404  02B2  2AB3               	nop2
  1405  02B3                     l1219:
  1406                           
  1407                           ;adxl345.c: 46:     adxl345_write(0x2D,0x08);
  1408  02B3  302D               	movlw	45
  1409  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1410  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1411  02B6  00A0               	movwf	adxl345_write@add
  1412  02B7  3000               	movlw	0
  1413  02B8  00A1               	movwf	adxl345_write@add+1
  1414  02B9  3008               	movlw	8
  1415  02BA  00A2               	movwf	adxl345_write@data
  1416  02BB  3000               	movlw	0
  1417  02BC  00A3               	movwf	adxl345_write@data+1
  1418  02BD  120A  118A  22FB  120A  118A  	fcall	_adxl345_write
  1419                           
  1420                           ;adxl345.c: 47:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1421  02C2  3006               	movlw	6
  1422  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1423  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1424  02C5  00A5               	movwf	??_adxl345_init+1
  1425  02C6  302F               	movlw	47
  1426  02C7  00A4               	movwf	??_adxl345_init
  1427  02C8                     u957:
  1428  02C8  0BA4               	decfsz	??_adxl345_init,f
  1429  02C9  2AC8               	goto	u957
  1430  02CA  0BA5               	decfsz	??_adxl345_init+1,f
  1431  02CB  2AC8               	goto	u957
  1432  02CC  2ACD               	nop2
  1433  02CD                     l19:
  1434  02CD  0008               	return
  1435  02CE                     __end_of_adxl345_init:
  1436                           
  1437                           	psect	text5
  1438  02FB                     __ptext5:	
  1439 ;; *************** function _adxl345_write *****************
  1440 ;; Defined at:
  1441 ;;		line 22 in file "adxl345.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  add             2    0[BANK0 ] int 
  1444 ;;  data            2    2[BANK0 ] int 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       4       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0
  1459 ;;      Totals:         0       4       0       0       0
  1460 ;;Total ram usage:        4 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    3
  1463 ;; This function calls:
  1464 ;;		_I2C_Master_Start
  1465 ;;		_I2C_Master_Stop
  1466 ;;		_I2C_Master_Write
  1467 ;; This function is called by:
  1468 ;;		_adxl345_init
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _adxl345_write
  1474  02FB                     _adxl345_write:
  1475  02FB                     l1133:	
  1476                           ;incstack = 0
  1477                           ; Regs used in _adxl345_write: [wreg+status,2+status,0+pclath+cstack]
  1478                           
  1479                           
  1480                           ;adxl345.c: 22: void adxl345_write(int add, int data);adxl345.c: 23: {;adxl345.c: 24:   
      +                                 I2C_Master_Start();
  1481  02FB  120A  118A  23B7  120A  118A  	fcall	_I2C_Master_Start
  1482                           
  1483                           ;adxl345.c: 25:          I2C_Master_Write(0xA6);
  1484  0300  30A6               	movlw	166
  1485  0301  00F4               	movwf	I2C_Master_Write@d
  1486  0302  3000               	movlw	0
  1487  0303  00F5               	movwf	I2C_Master_Write@d+1
  1488  0304  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Write
  1489                           
  1490                           ;adxl345.c: 26:          I2C_Master_Write(add);
  1491  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1492  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1493  030B  0821               	movf	adxl345_write@add+1,w
  1494  030C  00F5               	movwf	I2C_Master_Write@d+1
  1495  030D  0820               	movf	adxl345_write@add,w
  1496  030E  00F4               	movwf	I2C_Master_Write@d
  1497  030F  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Write
  1498                           
  1499                           ;adxl345.c: 27:          I2C_Master_Write(data);
  1500  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0316  0823               	movf	adxl345_write@data+1,w
  1503  0317  00F5               	movwf	I2C_Master_Write@d+1
  1504  0318  0822               	movf	adxl345_write@data,w
  1505  0319  00F4               	movwf	I2C_Master_Write@d
  1506  031A  120A  118A  23A4  120A  118A  	fcall	_I2C_Master_Write
  1507                           
  1508                           ;adxl345.c: 28:          I2C_Master_Stop();
  1509  031F  120A  118A  23AE  120A  118A  	fcall	_I2C_Master_Stop
  1510  0324                     l13:
  1511  0324  0008               	return
  1512  0325                     __end_of_adxl345_write:
  1513                           
  1514                           	psect	text6
  1515  03A4                     __ptext6:	
  1516 ;; *************** function _I2C_Master_Write *****************
  1517 ;; Defined at:
  1518 ;;		line 40 in file "i2c.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  d               2    4[COMMON] int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         2       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    2
  1539 ;; This function calls:
  1540 ;;		_I2C_Master_Wait
  1541 ;; This function is called by:
  1542 ;;		_adxl345_write
  1543 ;;		_adxl345_read
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _I2C_Master_Write
  1549  03A4                     _I2C_Master_Write:
  1550  03A4                     l1125:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1553                           
  1554                           
  1555                           ;i2c.c: 40: void I2C_Master_Write(int d);i2c.c: 41: {;i2c.c: 42:   I2C_Master_Wait();
  1556  03A4  120A  118A  2397  120A  118A  	fcall	_I2C_Master_Wait
  1557  03A9                     l1127:
  1558                           
  1559                           ;i2c.c: 43:   SSPBUF = d;
  1560  03A9  0874               	movf	I2C_Master_Write@d,w
  1561  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1562  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1563  03AC  0093               	movwf	19	;volatile
  1564  03AD                     l112:
  1565  03AD  0008               	return
  1566  03AE                     __end_of_I2C_Master_Write:
  1567                           
  1568                           	psect	text7
  1569  03AE                     __ptext7:	
  1570 ;; *************** function _I2C_Master_Stop *****************
  1571 ;; Defined at:
  1572 ;;		line 33 in file "i2c.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    2
  1593 ;; This function calls:
  1594 ;;		_I2C_Master_Wait
  1595 ;; This function is called by:
  1596 ;;		_adxl345_write
  1597 ;;		_adxl345_read
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _I2C_Master_Stop
  1603  03AE                     _I2C_Master_Stop:
  1604  03AE                     l1129:	
  1605                           ;incstack = 0
  1606                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1607                           
  1608                           
  1609                           ;i2c.c: 35:   I2C_Master_Wait();
  1610  03AE  120A  118A  2397  120A  118A  	fcall	_I2C_Master_Wait
  1611  03B3                     l1131:
  1612                           
  1613                           ;i2c.c: 36:   PEN = 1;
  1614  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  1615  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  1616  03B5  1511               	bsf	17,2	;volatile
  1617  03B6                     l109:
  1618  03B6  0008               	return
  1619  03B7                     __end_of_I2C_Master_Stop:
  1620                           
  1621                           	psect	text8
  1622  03B7                     __ptext8:	
  1623 ;; *************** function _I2C_Master_Start *****************
  1624 ;; Defined at:
  1625 ;;		line 26 in file "i2c.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    2
  1646 ;; This function calls:
  1647 ;;		_I2C_Master_Wait
  1648 ;; This function is called by:
  1649 ;;		_adxl345_write
  1650 ;;		_adxl345_read
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _I2C_Master_Start
  1656  03B7                     _I2C_Master_Start:
  1657  03B7                     l1121:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;i2c.c: 28:   I2C_Master_Wait();
  1663  03B7  120A  118A  2397  120A  118A  	fcall	_I2C_Master_Wait
  1664  03BC                     l1123:
  1665                           
  1666                           ;i2c.c: 29:   SEN = 1;
  1667  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1668  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1669  03BE  1411               	bsf	17,0	;volatile
  1670  03BF                     l106:
  1671  03BF  0008               	return
  1672  03C0                     __end_of_I2C_Master_Start:
  1673                           
  1674                           	psect	text9
  1675  0397                     __ptext9:	
  1676 ;; *************** function _I2C_Master_Wait *****************
  1677 ;; Defined at:
  1678 ;;		line 20 in file "i2c.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_I2C_Master_Start
  1703 ;;		_I2C_Master_Stop
  1704 ;;		_I2C_Master_Write
  1705 ;;		_I2C_Master_Read
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _I2C_Master_Wait
  1711  0397                     _I2C_Master_Wait:
  1712  0397                     l1117:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1715                           
  1716  0397                     l100:	
  1717                           ;i2c.c: 22:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1718                           
  1719  0397  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0398  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0399  1914               	btfsc	20,2	;volatile
  1722  039A  2B9C               	goto	u651
  1723  039B  2B9D               	goto	u650
  1724  039C                     u651:
  1725  039C  2B97               	goto	l100
  1726  039D                     u650:
  1727  039D                     l1119:
  1728  039D  0811               	movf	17,w	;volatile
  1729  039E  391F               	andlw	31
  1730  039F  1D03               	btfss	3,2
  1731  03A0  2BA2               	goto	u661
  1732  03A1  2BA3               	goto	u660
  1733  03A2                     u661:
  1734  03A2  2B97               	goto	l100
  1735  03A3                     u660:
  1736  03A3                     l103:
  1737  03A3  0008               	return
  1738  03A4                     __end_of_I2C_Master_Wait:
  1739                           
  1740                           	psect	text10
  1741  0144                     __ptext10:	
  1742 ;; *************** function _USART_Initialize *****************
  1743 ;; Defined at:
  1744 ;;		line 16 in file "usart.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  baudrate        4   14[BANK0 ] const long 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  x               4   30[BANK0 ] long 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       4       0       0       0
  1759 ;;      Locals:         0       4       0       0       0
  1760 ;;      Temps:          0      12       0       0       0
  1761 ;;      Totals:         0      20       0       0       0
  1762 ;;Total ram usage:       20 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    2
  1765 ;; This function calls:
  1766 ;;		___aldiv
  1767 ;; This function is called by:
  1768 ;;		_SYSTEM_Initialize
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _USART_Initialize
  1774  0144                     _USART_Initialize:
  1775  0144                     l1221:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _USART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1778                           
  1779                           
  1780                           ;usart.c: 17:     long int x;;usart.c: 20:     TXSTAbits.TX9 = 0;
  1781  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1783  0146  1318               	bcf	24,6	;volatile
  1784                           
  1785                           ;usart.c: 22:     TXSTAbits.TXEN = 1;
  1786  0147  1698               	bsf	24,5	;volatile
  1787                           
  1788                           ;usart.c: 24:     TXSTAbits.SYNC = 0;
  1789  0148  1218               	bcf	24,4	;volatile
  1790                           
  1791                           ;usart.c: 26:     TXSTAbits.BRGH = 0;
  1792  0149  1118               	bcf	24,2	;volatile
  1793                           
  1794                           ;usart.c: 27:     BAUDCTLbits.BRG16 = 0;
  1795  014A  1683               	bsf	3,5	;RP0=1, select bank3
  1796  014B  1703               	bsf	3,6	;RP1=1, select bank3
  1797  014C  1187               	bcf	7,3	;volatile
  1798                           
  1799                           ;usart.c: 30:     RCSTAbits.SPEN = 1;
  1800  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1801  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1802  014F  1798               	bsf	24,7	;volatile
  1803                           
  1804                           ;usart.c: 32:     RCSTAbits.CREN = 1;
  1805  0150  1618               	bsf	24,4	;volatile
  1806  0151                     l1223:
  1807                           
  1808                           ;usart.c: 34:     x = (8000000 - baudrate*64)/(baudrate*64);
  1809  0151  082E               	movf	USART_Initialize@baudrate,w
  1810  0152  00B2               	movwf	??_USART_Initialize
  1811  0153  082F               	movf	USART_Initialize@baudrate+1,w
  1812  0154  00B3               	movwf	??_USART_Initialize+1
  1813  0155  0830               	movf	USART_Initialize@baudrate+2,w
  1814  0156  00B4               	movwf	??_USART_Initialize+2
  1815  0157  0831               	movf	USART_Initialize@baudrate+3,w
  1816  0158  00B5               	movwf	??_USART_Initialize+3
  1817  0159  3006               	movlw	6
  1818  015A                     u865:
  1819  015A  1003               	clrc
  1820  015B  0DB2               	rlf	??_USART_Initialize,f
  1821  015C  0DB3               	rlf	??_USART_Initialize+1,f
  1822  015D  0DB4               	rlf	??_USART_Initialize+2,f
  1823  015E  0DB5               	rlf	??_USART_Initialize+3,f
  1824  015F                     u860:
  1825  015F  3EFF               	addlw	-1
  1826  0160  1D03               	skipz
  1827  0161  295A               	goto	u865
  1828  0162  0835               	movf	??_USART_Initialize+3,w
  1829  0163  00A3               	movwf	___aldiv@divisor+3
  1830  0164  0834               	movf	??_USART_Initialize+2,w
  1831  0165  00A2               	movwf	___aldiv@divisor+2
  1832  0166  0833               	movf	??_USART_Initialize+1,w
  1833  0167  00A1               	movwf	___aldiv@divisor+1
  1834  0168  0832               	movf	??_USART_Initialize,w
  1835  0169  00A0               	movwf	___aldiv@divisor
  1836  016A  082E               	movf	USART_Initialize@baudrate,w
  1837  016B  00B6               	movwf	??_USART_Initialize+4
  1838  016C  082F               	movf	USART_Initialize@baudrate+1,w
  1839  016D  00B7               	movwf	??_USART_Initialize+5
  1840  016E  0830               	movf	USART_Initialize@baudrate+2,w
  1841  016F  00B8               	movwf	??_USART_Initialize+6
  1842  0170  0831               	movf	USART_Initialize@baudrate+3,w
  1843  0171  00B9               	movwf	??_USART_Initialize+7
  1844  0172  3006               	movlw	6
  1845  0173                     u875:
  1846  0173  1003               	clrc
  1847  0174  0DB6               	rlf	??_USART_Initialize+4,f
  1848  0175  0DB7               	rlf	??_USART_Initialize+5,f
  1849  0176  0DB8               	rlf	??_USART_Initialize+6,f
  1850  0177  0DB9               	rlf	??_USART_Initialize+7,f
  1851  0178                     u870:
  1852  0178  3EFF               	addlw	-1
  1853  0179  1D03               	skipz
  1854  017A  2973               	goto	u875
  1855  017B  3000               	movlw	0
  1856  017C  00BA               	movwf	??_USART_Initialize+8
  1857  017D  3012               	movlw	18
  1858  017E  00BB               	movwf	??_USART_Initialize+9
  1859  017F  307A               	movlw	122
  1860  0180  00BC               	movwf	??_USART_Initialize+10
  1861  0181  3000               	movlw	0
  1862  0182  00BD               	movwf	??_USART_Initialize+11
  1863  0183  0836               	movf	??_USART_Initialize+4,w
  1864  0184  02BA               	subwf	??_USART_Initialize+8,f
  1865  0185  0837               	movf	??_USART_Initialize+5,w
  1866  0186  1C03               	skipc
  1867  0187  0F37               	incfsz	??_USART_Initialize+5,w
  1868  0188  298A               	goto	u881
  1869  0189  298B               	goto	u882
  1870  018A                     u881:
  1871  018A  02BB               	subwf	??_USART_Initialize+9,f
  1872  018B                     u882:
  1873  018B  0838               	movf	??_USART_Initialize+6,w
  1874  018C  1C03               	skipc
  1875  018D  0F38               	incfsz	??_USART_Initialize+6,w
  1876  018E  2990               	goto	u883
  1877  018F  2991               	goto	u884
  1878  0190                     u883:
  1879  0190  02BC               	subwf	??_USART_Initialize+10,f
  1880  0191                     u884:
  1881  0191  0839               	movf	??_USART_Initialize+7,w
  1882  0192  1C03               	skipc
  1883  0193  0F39               	incfsz	??_USART_Initialize+7,w
  1884  0194  2996               	goto	u885
  1885  0195  2997               	goto	u886
  1886  0196                     u885:
  1887  0196  02BD               	subwf	??_USART_Initialize+11,f
  1888  0197                     u886:
  1889  0197  083D               	movf	??_USART_Initialize+11,w
  1890  0198  00A7               	movwf	___aldiv@dividend+3
  1891  0199  083C               	movf	??_USART_Initialize+10,w
  1892  019A  00A6               	movwf	___aldiv@dividend+2
  1893  019B  083B               	movf	??_USART_Initialize+9,w
  1894  019C  00A5               	movwf	___aldiv@dividend+1
  1895  019D  083A               	movf	??_USART_Initialize+8,w
  1896  019E  00A4               	movwf	___aldiv@dividend
  1897  019F  120A  118A  2022  120A  118A  	fcall	___aldiv
  1898  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1899  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1900  01A6  0823               	movf	?___aldiv+3,w
  1901  01A7  00C1               	movwf	USART_Initialize@x+3
  1902  01A8  0822               	movf	?___aldiv+2,w
  1903  01A9  00C0               	movwf	USART_Initialize@x+2
  1904  01AA  0821               	movf	?___aldiv+1,w
  1905  01AB  00BF               	movwf	USART_Initialize@x+1
  1906  01AC  0820               	movf	?___aldiv,w
  1907  01AD  00BE               	movwf	USART_Initialize@x
  1908  01AE                     l1225:
  1909                           
  1910                           ;usart.c: 35:     SPBRG = x;
  1911  01AE  083E               	movf	USART_Initialize@x,w
  1912  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1913  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1914  01B1  0099               	movwf	25	;volatile
  1915  01B2                     l1227:
  1916                           
  1917                           ;usart.c: 38:     INTCONbits.GIE = 1;
  1918  01B2  178B               	bsf	11,7	;volatile
  1919  01B3                     l1229:
  1920                           
  1921                           ;usart.c: 40:     INTCONbits.PEIE = 1;
  1922  01B3  170B               	bsf	11,6	;volatile
  1923  01B4                     l1231:
  1924                           
  1925                           ;usart.c: 43:     PIE1bits.RCIE = 1;
  1926  01B4  168C               	bsf	12,5	;volatile
  1927  01B5                     l1233:
  1928                           
  1929                           ;usart.c: 45:     PIE1bits.TXIE = 1;
  1930  01B5  160C               	bsf	12,4	;volatile
  1931  01B6                     l34:
  1932  01B6  0008               	return
  1933  01B7                     __end_of_USART_Initialize:
  1934                           
  1935                           	psect	text11
  1936  0022                     __ptext11:	
  1937 ;; *************** function ___aldiv *****************
  1938 ;; Defined at:
  1939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  divisor         4    0[BANK0 ] long 
  1942 ;;  dividend        4    4[BANK0 ] long 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  quotient        4   10[BANK0 ] long 
  1945 ;;  sign            1    9[BANK0 ] unsigned char 
  1946 ;;  counter         1    8[BANK0 ] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  4    0[BANK0 ] long 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       8       0       0       0
  1957 ;;      Locals:         0       6       0       0       0
  1958 ;;      Temps:          1       0       0       0       0
  1959 ;;      Totals:         1      14       0       0       0
  1960 ;;Total ram usage:       15 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_USART_Initialize
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function ___aldiv
  1972  0022                     ___aldiv:
  1973  0022                     l1159:	
  1974                           ;incstack = 0
  1975                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1976                           
  1977  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0024  01A9               	clrf	___aldiv@sign
  1980  0025                     l1161:
  1981  0025  1FA3               	btfss	___aldiv@divisor+3,7
  1982  0026  2828               	goto	u741
  1983  0027  2829               	goto	u740
  1984  0028                     u741:
  1985  0028  2836               	goto	l312
  1986  0029                     u740:
  1987  0029                     l1163:
  1988  0029  09A0               	comf	___aldiv@divisor,f
  1989  002A  09A1               	comf	___aldiv@divisor+1,f
  1990  002B  09A2               	comf	___aldiv@divisor+2,f
  1991  002C  09A3               	comf	___aldiv@divisor+3,f
  1992  002D  0AA0               	incf	___aldiv@divisor,f
  1993  002E  1903               	skipnz
  1994  002F  0AA1               	incf	___aldiv@divisor+1,f
  1995  0030  1903               	skipnz
  1996  0031  0AA2               	incf	___aldiv@divisor+2,f
  1997  0032  1903               	skipnz
  1998  0033  0AA3               	incf	___aldiv@divisor+3,f
  1999  0034  01A9               	clrf	___aldiv@sign
  2000  0035  0AA9               	incf	___aldiv@sign,f
  2001  0036                     l312:
  2002  0036  1FA7               	btfss	___aldiv@dividend+3,7
  2003  0037  2839               	goto	u751
  2004  0038  283A               	goto	u750
  2005  0039                     u751:
  2006  0039  2849               	goto	l1169
  2007  003A                     u750:
  2008  003A                     l1165:
  2009  003A  09A4               	comf	___aldiv@dividend,f
  2010  003B  09A5               	comf	___aldiv@dividend+1,f
  2011  003C  09A6               	comf	___aldiv@dividend+2,f
  2012  003D  09A7               	comf	___aldiv@dividend+3,f
  2013  003E  0AA4               	incf	___aldiv@dividend,f
  2014  003F  1903               	skipnz
  2015  0040  0AA5               	incf	___aldiv@dividend+1,f
  2016  0041  1903               	skipnz
  2017  0042  0AA6               	incf	___aldiv@dividend+2,f
  2018  0043  1903               	skipnz
  2019  0044  0AA7               	incf	___aldiv@dividend+3,f
  2020  0045                     l1167:
  2021  0045  3001               	movlw	1
  2022  0046  00F4               	movwf	??___aldiv
  2023  0047  0874               	movf	??___aldiv,w
  2024  0048  06A9               	xorwf	___aldiv@sign,f
  2025  0049                     l1169:
  2026  0049  3000               	movlw	0
  2027  004A  00AD               	movwf	___aldiv@quotient+3
  2028  004B  3000               	movlw	0
  2029  004C  00AC               	movwf	___aldiv@quotient+2
  2030  004D  3000               	movlw	0
  2031  004E  00AB               	movwf	___aldiv@quotient+1
  2032  004F  3000               	movlw	0
  2033  0050  00AA               	movwf	___aldiv@quotient
  2034  0051                     l1171:
  2035  0051  0823               	movf	___aldiv@divisor+3,w
  2036  0052  0422               	iorwf	___aldiv@divisor+2,w
  2037  0053  0421               	iorwf	___aldiv@divisor+1,w
  2038  0054  0420               	iorwf	___aldiv@divisor,w
  2039  0055  1903               	skipnz
  2040  0056  2858               	goto	u761
  2041  0057  2859               	goto	u760
  2042  0058                     u761:
  2043  0058  28A6               	goto	l1191
  2044  0059                     u760:
  2045  0059                     l1173:
  2046  0059  01A8               	clrf	___aldiv@counter
  2047  005A  0AA8               	incf	___aldiv@counter,f
  2048  005B  2869               	goto	l1177
  2049  005C                     l1175:
  2050  005C  3001               	movlw	1
  2051  005D  00F4               	movwf	??___aldiv
  2052  005E                     u775:
  2053  005E  1003               	clrc
  2054  005F  0DA0               	rlf	___aldiv@divisor,f
  2055  0060  0DA1               	rlf	___aldiv@divisor+1,f
  2056  0061  0DA2               	rlf	___aldiv@divisor+2,f
  2057  0062  0DA3               	rlf	___aldiv@divisor+3,f
  2058  0063  0BF4               	decfsz	??___aldiv,f
  2059  0064  285E               	goto	u775
  2060  0065  3001               	movlw	1
  2061  0066  00F4               	movwf	??___aldiv
  2062  0067  0874               	movf	??___aldiv,w
  2063  0068  07A8               	addwf	___aldiv@counter,f
  2064  0069                     l1177:
  2065  0069  1FA3               	btfss	___aldiv@divisor+3,7
  2066  006A  286C               	goto	u781
  2067  006B  286D               	goto	u780
  2068  006C                     u781:
  2069  006C  285C               	goto	l1175
  2070  006D                     u780:
  2071  006D                     l1179:
  2072  006D  3001               	movlw	1
  2073  006E  00F4               	movwf	??___aldiv
  2074  006F                     u795:
  2075  006F  1003               	clrc
  2076  0070  0DAA               	rlf	___aldiv@quotient,f
  2077  0071  0DAB               	rlf	___aldiv@quotient+1,f
  2078  0072  0DAC               	rlf	___aldiv@quotient+2,f
  2079  0073  0DAD               	rlf	___aldiv@quotient+3,f
  2080  0074  0BF4               	decfsz	??___aldiv,f
  2081  0075  286F               	goto	u795
  2082  0076                     l1181:
  2083  0076  0823               	movf	___aldiv@divisor+3,w
  2084  0077  0227               	subwf	___aldiv@dividend+3,w
  2085  0078  1D03               	skipz
  2086  0079  2884               	goto	u805
  2087  007A  0822               	movf	___aldiv@divisor+2,w
  2088  007B  0226               	subwf	___aldiv@dividend+2,w
  2089  007C  1D03               	skipz
  2090  007D  2884               	goto	u805
  2091  007E  0821               	movf	___aldiv@divisor+1,w
  2092  007F  0225               	subwf	___aldiv@dividend+1,w
  2093  0080  1D03               	skipz
  2094  0081  2884               	goto	u805
  2095  0082  0820               	movf	___aldiv@divisor,w
  2096  0083  0224               	subwf	___aldiv@dividend,w
  2097  0084                     u805:
  2098  0084  1C03               	skipc
  2099  0085  2887               	goto	u801
  2100  0086  2888               	goto	u800
  2101  0087                     u801:
  2102  0087  2897               	goto	l1187
  2103  0088                     u800:
  2104  0088                     l1183:
  2105  0088  0820               	movf	___aldiv@divisor,w
  2106  0089  02A4               	subwf	___aldiv@dividend,f
  2107  008A  0821               	movf	___aldiv@divisor+1,w
  2108  008B  1C03               	skipc
  2109  008C  0F21               	incfsz	___aldiv@divisor+1,w
  2110  008D  02A5               	subwf	___aldiv@dividend+1,f
  2111  008E  0822               	movf	___aldiv@divisor+2,w
  2112  008F  1C03               	skipc
  2113  0090  0F22               	incfsz	___aldiv@divisor+2,w
  2114  0091  02A6               	subwf	___aldiv@dividend+2,f
  2115  0092  0823               	movf	___aldiv@divisor+3,w
  2116  0093  1C03               	skipc
  2117  0094  0F23               	incfsz	___aldiv@divisor+3,w
  2118  0095  02A7               	subwf	___aldiv@dividend+3,f
  2119  0096                     l1185:
  2120  0096  142A               	bsf	___aldiv@quotient,0
  2121  0097                     l1187:
  2122  0097  3001               	movlw	1
  2123  0098                     u815:
  2124  0098  1003               	clrc
  2125  0099  0CA3               	rrf	___aldiv@divisor+3,f
  2126  009A  0CA2               	rrf	___aldiv@divisor+2,f
  2127  009B  0CA1               	rrf	___aldiv@divisor+1,f
  2128  009C  0CA0               	rrf	___aldiv@divisor,f
  2129  009D  3EFF               	addlw	-1
  2130  009E  1D03               	skipz
  2131  009F  2898               	goto	u815
  2132  00A0                     l1189:
  2133  00A0  3001               	movlw	1
  2134  00A1  02A8               	subwf	___aldiv@counter,f
  2135  00A2  1D03               	btfss	3,2
  2136  00A3  28A5               	goto	u821
  2137  00A4  28A6               	goto	u820
  2138  00A5                     u821:
  2139  00A5  286D               	goto	l1179
  2140  00A6                     u820:
  2141  00A6                     l1191:
  2142  00A6  0829               	movf	___aldiv@sign,w
  2143  00A7  1903               	btfsc	3,2
  2144  00A8  28AA               	goto	u831
  2145  00A9  28AB               	goto	u830
  2146  00AA                     u831:
  2147  00AA  28B6               	goto	l1195
  2148  00AB                     u830:
  2149  00AB                     l1193:
  2150  00AB  09AA               	comf	___aldiv@quotient,f
  2151  00AC  09AB               	comf	___aldiv@quotient+1,f
  2152  00AD  09AC               	comf	___aldiv@quotient+2,f
  2153  00AE  09AD               	comf	___aldiv@quotient+3,f
  2154  00AF  0AAA               	incf	___aldiv@quotient,f
  2155  00B0  1903               	skipnz
  2156  00B1  0AAB               	incf	___aldiv@quotient+1,f
  2157  00B2  1903               	skipnz
  2158  00B3  0AAC               	incf	___aldiv@quotient+2,f
  2159  00B4  1903               	skipnz
  2160  00B5  0AAD               	incf	___aldiv@quotient+3,f
  2161  00B6                     l1195:
  2162  00B6  082D               	movf	___aldiv@quotient+3,w
  2163  00B7  00A3               	movwf	?___aldiv+3
  2164  00B8  082C               	movf	___aldiv@quotient+2,w
  2165  00B9  00A2               	movwf	?___aldiv+2
  2166  00BA  082B               	movf	___aldiv@quotient+1,w
  2167  00BB  00A1               	movwf	?___aldiv+1
  2168  00BC  082A               	movf	___aldiv@quotient,w
  2169  00BD  00A0               	movwf	?___aldiv
  2170  00BE                     l322:
  2171  00BE  0008               	return
  2172  00BF                     __end_of___aldiv:
  2173                           
  2174                           	psect	text12
  2175  0377                     __ptext12:	
  2176 ;; *************** function _PORTS_MANAGER_Initialize *****************
  2177 ;; Defined at:
  2178 ;;		line 10 in file "ports_manager.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		status,2
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_SYSTEM_Initialize
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _PORTS_MANAGER_Initialize
  2208  0377                     _PORTS_MANAGER_Initialize:
  2209  0377                     l1053:	
  2210                           ;incstack = 0
  2211                           ; Regs used in _PORTS_MANAGER_Initialize: [status,2]
  2212                           
  2213                           
  2214                           ;ports_manager.c: 12:     ANSEL = 0;
  2215  0377  1683               	bsf	3,5	;RP0=1, select bank3
  2216  0378  1703               	bsf	3,6	;RP1=1, select bank3
  2217  0379  0188               	clrf	8	;volatile
  2218                           
  2219                           ;ports_manager.c: 13:     TRISA = 0;
  2220  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2221  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2222  037C  0185               	clrf	5	;volatile
  2223                           
  2224                           ;ports_manager.c: 14:     PORTA = 0;
  2225  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2226  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2227  037F  0185               	clrf	5	;volatile
  2228                           
  2229                           ;ports_manager.c: 16:     ANSELH = 0;
  2230  0380  1683               	bsf	3,5	;RP0=1, select bank3
  2231  0381  1703               	bsf	3,6	;RP1=1, select bank3
  2232  0382  0189               	clrf	9	;volatile
  2233                           
  2234                           ;ports_manager.c: 17:     TRISB = 0;
  2235  0383  1683               	bsf	3,5	;RP0=1, select bank1
  2236  0384  1303               	bcf	3,6	;RP1=0, select bank1
  2237  0385  0186               	clrf	6	;volatile
  2238                           
  2239                           ;ports_manager.c: 18:     PORTB = 0;
  2240  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0388  0186               	clrf	6	;volatile
  2243                           
  2244                           ;ports_manager.c: 19:     IOCB = 0;
  2245  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2246  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2247  038B  0196               	clrf	22	;volatile
  2248                           
  2249                           ;ports_manager.c: 21:     TRISD = 0;
  2250  038C  0188               	clrf	8	;volatile
  2251                           
  2252                           ;ports_manager.c: 22:     PORTD = 0;
  2253  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2254  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2255  038F  0188               	clrf	8	;volatile
  2256                           
  2257                           ;ports_manager.c: 24:     TRISE = 0;
  2258  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0392  0189               	clrf	9	;volatile
  2261                           
  2262                           ;ports_manager.c: 25:     PORTE = 0;
  2263  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0395  0189               	clrf	9	;volatile
  2266  0396                     l70:
  2267  0396  0008               	return
  2268  0397                     __end_of_PORTS_MANAGER_Initialize:
  2269                           
  2270                           	psect	text13
  2271  025F                     __ptext13:	
  2272 ;; *************** function _I2C_Master_Init *****************
  2273 ;; Defined at:
  2274 ;;		line 9 in file "i2c.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  c               4   13[BANK0 ] const unsigned long 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       4       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       4       0       0       0
  2291 ;;      Totals:         0       8       0       0       0
  2292 ;;Total ram usage:        8 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    2
  2295 ;; This function calls:
  2296 ;;		___lldiv
  2297 ;; This function is called by:
  2298 ;;		_SYSTEM_Initialize
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _I2C_Master_Init
  2304  025F                     _I2C_Master_Init:
  2305  025F                     l1235:	
  2306                           ;incstack = 0
  2307                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2308                           
  2309                           
  2310                           ;i2c.c: 9: void I2C_Master_Init(const unsigned long c);i2c.c: 10: {;i2c.c: 11:   SSPCON 
      +                          = 0b00101000;
  2311  025F  3028               	movlw	40
  2312  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0262  0094               	movwf	20	;volatile
  2315  0263                     l1237:
  2316                           
  2317                           ;i2c.c: 12:   SSPCON2 = 0;
  2318  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2320  0265  0191               	clrf	17	;volatile
  2321  0266                     l1239:
  2322                           
  2323                           ;i2c.c: 13:   SSPADD = (8000000/(4*c))-1;
  2324  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0268  082D               	movf	I2C_Master_Init@c,w
  2327  0269  00B1               	movwf	??_I2C_Master_Init
  2328  026A  082E               	movf	I2C_Master_Init@c+1,w
  2329  026B  00B2               	movwf	??_I2C_Master_Init+1
  2330  026C  082F               	movf	I2C_Master_Init@c+2,w
  2331  026D  00B3               	movwf	??_I2C_Master_Init+2
  2332  026E  0830               	movf	I2C_Master_Init@c+3,w
  2333  026F  00B4               	movwf	??_I2C_Master_Init+3
  2334  0270  3002               	movlw	2
  2335  0271                     u895:
  2336  0271  1003               	clrc
  2337  0272  0DB1               	rlf	??_I2C_Master_Init,f
  2338  0273  0DB2               	rlf	??_I2C_Master_Init+1,f
  2339  0274  0DB3               	rlf	??_I2C_Master_Init+2,f
  2340  0275  0DB4               	rlf	??_I2C_Master_Init+3,f
  2341  0276                     u890:
  2342  0276  3EFF               	addlw	-1
  2343  0277  1D03               	skipz
  2344  0278  2A71               	goto	u895
  2345  0279  0834               	movf	??_I2C_Master_Init+3,w
  2346  027A  00A3               	movwf	___lldiv@divisor+3
  2347  027B  0833               	movf	??_I2C_Master_Init+2,w
  2348  027C  00A2               	movwf	___lldiv@divisor+2
  2349  027D  0832               	movf	??_I2C_Master_Init+1,w
  2350  027E  00A1               	movwf	___lldiv@divisor+1
  2351  027F  0831               	movf	??_I2C_Master_Init,w
  2352  0280  00A0               	movwf	___lldiv@divisor
  2353  0281  3000               	movlw	0
  2354  0282  00A7               	movwf	___lldiv@dividend+3
  2355  0283  307A               	movlw	122
  2356  0284  00A6               	movwf	___lldiv@dividend+2
  2357  0285  3012               	movlw	18
  2358  0286  00A5               	movwf	___lldiv@dividend+1
  2359  0287  3000               	movlw	0
  2360  0288  00A4               	movwf	___lldiv@dividend
  2361  0289  120A  118A  21B7  120A  118A  	fcall	___lldiv
  2362  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2363  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2364  0290  0820               	movf	?___lldiv,w
  2365  0291  3EFF               	addlw	255
  2366  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2367  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2368  0294  0093               	movwf	19	;volatile
  2369  0295                     l1241:
  2370                           
  2371                           ;i2c.c: 14:   SSPSTAT = 0;
  2372  0295  0194               	clrf	20	;volatile
  2373  0296                     l1243:
  2374                           
  2375                           ;i2c.c: 15:   TRISC3 = 1;
  2376  0296  1587               	bsf	7,3	;volatile
  2377  0297                     l1245:
  2378                           
  2379                           ;i2c.c: 16:   TRISC4 = 1;
  2380  0297  1607               	bsf	7,4	;volatile
  2381  0298                     l97:
  2382  0298  0008               	return
  2383  0299                     __end_of_I2C_Master_Init:
  2384                           
  2385                           	psect	text14
  2386  01B7                     __ptext14:	
  2387 ;; *************** function ___lldiv *****************
  2388 ;; Defined at:
  2389 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  divisor         4    0[BANK0 ] unsigned long 
  2392 ;;  dividend        4    4[BANK0 ] unsigned long 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  quotient        4    8[BANK0 ] unsigned long 
  2395 ;;  counter         1   12[BANK0 ] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  4    0[BANK0 ] unsigned long 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       8       0       0       0
  2406 ;;      Locals:         0       5       0       0       0
  2407 ;;      Temps:          1       0       0       0       0
  2408 ;;      Totals:         1      13       0       0       0
  2409 ;;Total ram usage:       14 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    1
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_I2C_Master_Init
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function ___lldiv
  2421  01B7                     ___lldiv:
  2422  01B7                     l1135:	
  2423                           ;incstack = 0
  2424                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2425                           
  2426  01B7  3000               	movlw	0
  2427  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2428  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2429  01BA  00AB               	movwf	___lldiv@quotient+3
  2430  01BB  3000               	movlw	0
  2431  01BC  00AA               	movwf	___lldiv@quotient+2
  2432  01BD  3000               	movlw	0
  2433  01BE  00A9               	movwf	___lldiv@quotient+1
  2434  01BF  3000               	movlw	0
  2435  01C0  00A8               	movwf	___lldiv@quotient
  2436  01C1  0823               	movf	___lldiv@divisor+3,w
  2437  01C2  0422               	iorwf	___lldiv@divisor+2,w
  2438  01C3  0421               	iorwf	___lldiv@divisor+1,w
  2439  01C4  0420               	iorwf	___lldiv@divisor,w
  2440  01C5  1903               	skipnz
  2441  01C6  29C8               	goto	u671
  2442  01C7  29C9               	goto	u670
  2443  01C8                     u671:
  2444  01C8  2A16               	goto	l1155
  2445  01C9                     u670:
  2446  01C9                     l1137:
  2447  01C9  01AC               	clrf	___lldiv@counter
  2448  01CA  0AAC               	incf	___lldiv@counter,f
  2449  01CB  29D9               	goto	l1141
  2450  01CC                     l1139:
  2451  01CC  3001               	movlw	1
  2452  01CD  00F4               	movwf	??___lldiv
  2453  01CE                     u685:
  2454  01CE  1003               	clrc
  2455  01CF  0DA0               	rlf	___lldiv@divisor,f
  2456  01D0  0DA1               	rlf	___lldiv@divisor+1,f
  2457  01D1  0DA2               	rlf	___lldiv@divisor+2,f
  2458  01D2  0DA3               	rlf	___lldiv@divisor+3,f
  2459  01D3  0BF4               	decfsz	??___lldiv,f
  2460  01D4  29CE               	goto	u685
  2461  01D5  3001               	movlw	1
  2462  01D6  00F4               	movwf	??___lldiv
  2463  01D7  0874               	movf	??___lldiv,w
  2464  01D8  07AC               	addwf	___lldiv@counter,f
  2465  01D9                     l1141:
  2466  01D9  1FA3               	btfss	___lldiv@divisor+3,7
  2467  01DA  29DC               	goto	u691
  2468  01DB  29DD               	goto	u690
  2469  01DC                     u691:
  2470  01DC  29CC               	goto	l1139
  2471  01DD                     u690:
  2472  01DD                     l1143:
  2473  01DD  3001               	movlw	1
  2474  01DE  00F4               	movwf	??___lldiv
  2475  01DF                     u705:
  2476  01DF  1003               	clrc
  2477  01E0  0DA8               	rlf	___lldiv@quotient,f
  2478  01E1  0DA9               	rlf	___lldiv@quotient+1,f
  2479  01E2  0DAA               	rlf	___lldiv@quotient+2,f
  2480  01E3  0DAB               	rlf	___lldiv@quotient+3,f
  2481  01E4  0BF4               	decfsz	??___lldiv,f
  2482  01E5  29DF               	goto	u705
  2483  01E6                     l1145:
  2484  01E6  0823               	movf	___lldiv@divisor+3,w
  2485  01E7  0227               	subwf	___lldiv@dividend+3,w
  2486  01E8  1D03               	skipz
  2487  01E9  29F4               	goto	u715
  2488  01EA  0822               	movf	___lldiv@divisor+2,w
  2489  01EB  0226               	subwf	___lldiv@dividend+2,w
  2490  01EC  1D03               	skipz
  2491  01ED  29F4               	goto	u715
  2492  01EE  0821               	movf	___lldiv@divisor+1,w
  2493  01EF  0225               	subwf	___lldiv@dividend+1,w
  2494  01F0  1D03               	skipz
  2495  01F1  29F4               	goto	u715
  2496  01F2  0820               	movf	___lldiv@divisor,w
  2497  01F3  0224               	subwf	___lldiv@dividend,w
  2498  01F4                     u715:
  2499  01F4  1C03               	skipc
  2500  01F5  29F7               	goto	u711
  2501  01F6  29F8               	goto	u710
  2502  01F7                     u711:
  2503  01F7  2A07               	goto	l1151
  2504  01F8                     u710:
  2505  01F8                     l1147:
  2506  01F8  0820               	movf	___lldiv@divisor,w
  2507  01F9  02A4               	subwf	___lldiv@dividend,f
  2508  01FA  0821               	movf	___lldiv@divisor+1,w
  2509  01FB  1C03               	skipc
  2510  01FC  0F21               	incfsz	___lldiv@divisor+1,w
  2511  01FD  02A5               	subwf	___lldiv@dividend+1,f
  2512  01FE  0822               	movf	___lldiv@divisor+2,w
  2513  01FF  1C03               	skipc
  2514  0200  0F22               	incfsz	___lldiv@divisor+2,w
  2515  0201  02A6               	subwf	___lldiv@dividend+2,f
  2516  0202  0823               	movf	___lldiv@divisor+3,w
  2517  0203  1C03               	skipc
  2518  0204  0F23               	incfsz	___lldiv@divisor+3,w
  2519  0205  02A7               	subwf	___lldiv@dividend+3,f
  2520  0206                     l1149:
  2521  0206  1428               	bsf	___lldiv@quotient,0
  2522  0207                     l1151:
  2523  0207  3001               	movlw	1
  2524  0208                     u725:
  2525  0208  1003               	clrc
  2526  0209  0CA3               	rrf	___lldiv@divisor+3,f
  2527  020A  0CA2               	rrf	___lldiv@divisor+2,f
  2528  020B  0CA1               	rrf	___lldiv@divisor+1,f
  2529  020C  0CA0               	rrf	___lldiv@divisor,f
  2530  020D  3EFF               	addlw	-1
  2531  020E  1D03               	skipz
  2532  020F  2A08               	goto	u725
  2533  0210                     l1153:
  2534  0210  3001               	movlw	1
  2535  0211  02AC               	subwf	___lldiv@counter,f
  2536  0212  1D03               	btfss	3,2
  2537  0213  2A15               	goto	u731
  2538  0214  2A16               	goto	u730
  2539  0215                     u731:
  2540  0215  29DD               	goto	l1143
  2541  0216                     u730:
  2542  0216                     l1155:
  2543  0216  082B               	movf	___lldiv@quotient+3,w
  2544  0217  00A3               	movwf	?___lldiv+3
  2545  0218  082A               	movf	___lldiv@quotient+2,w
  2546  0219  00A2               	movwf	?___lldiv+2
  2547  021A  0829               	movf	___lldiv@quotient+1,w
  2548  021B  00A1               	movwf	?___lldiv+1
  2549  021C  0828               	movf	___lldiv@quotient,w
  2550  021D  00A0               	movwf	?___lldiv
  2551  021E                     l283:
  2552  021E  0008               	return
  2553  021F                     __end_of___lldiv:
  2554                           
  2555                           	psect	text15
  2556  02CE                     __ptext15:	
  2557 ;; *************** function _myISR *****************
  2558 ;; Defined at:
  2559 ;;		line 28 in file "main.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0
  2575 ;;      Temps:          4       0       0       0       0
  2576 ;;      Totals:         4       0       0       0       0
  2577 ;;Total ram usage:        4 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		Interrupt level 1
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _myISR
  2588  02CE                     _myISR:
  2589  02CE                     i1l1081:
  2590                           
  2591                           ;main.c: 29:     if(PIR1bits.RCIF == 1){
  2592  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2593  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2594  02D0  1E8C               	btfss	12,5	;volatile
  2595  02D1  2AD3               	goto	u58_21
  2596  02D2  2AD4               	goto	u58_20
  2597  02D3                     u58_21:
  2598  02D3  2AD8               	goto	i1l1085
  2599  02D4                     u58_20:
  2600  02D4                     i1l1083:
  2601                           
  2602                           ;main.c: 30:         read_value = RCREG;
  2603  02D4  081A               	movf	26,w	;volatile
  2604  02D5  00F0               	movwf	??_myISR
  2605  02D6  0870               	movf	??_myISR,w
  2606  02D7  00F9               	movwf	_read_value
  2607  02D8                     i1l1085:
  2608                           
  2609                           ;main.c: 33:     if(PIR1bits.TXIF == 1){
  2610  02D8  1E0C               	btfss	12,4	;volatile
  2611  02D9  2ADB               	goto	u59_21
  2612  02DA  2ADC               	goto	u59_20
  2613  02DB                     u59_21:
  2614  02DB  2AF2               	goto	i1l146
  2615  02DC                     u59_20:
  2616  02DC                     i1l1087:
  2617                           
  2618                           ;main.c: 34:         TXREG = sensor_value[cont];
  2619  02DC  0877               	movf	_cont,w
  2620  02DD  3E43               	addlw	(low (_sensor_value| 0))& (0+255)
  2621  02DE  0084               	movwf	4
  2622  02DF  1383               	bcf	3,7	;select IRP bank0
  2623  02E0  0800               	movf	0,w
  2624  02E1  0099               	movwf	25	;volatile
  2625  02E2                     i1l1089:
  2626                           
  2627                           ;main.c: 35:         if (cont == 5){
  2628  02E2  3005               	movlw	5
  2629  02E3  0677               	xorwf	_cont,w
  2630  02E4  0478               	iorwf	_cont+1,w
  2631  02E5  1D03               	btfss	3,2
  2632  02E6  2AE8               	goto	u60_21
  2633  02E7  2AE9               	goto	u60_20
  2634  02E8                     u60_21:
  2635  02E8  2AEC               	goto	i1l1093
  2636  02E9                     u60_20:
  2637  02E9                     i1l1091:
  2638                           
  2639                           ;main.c: 36:             cont = 0;
  2640  02E9  01F7               	clrf	_cont
  2641  02EA  01F8               	clrf	_cont+1
  2642                           
  2643                           ;main.c: 37:         }
  2644  02EB  2AF2               	goto	i1l146
  2645  02EC                     i1l1093:
  2646                           
  2647                           ;main.c: 39:             cont++;
  2648  02EC  3001               	movlw	1
  2649  02ED  07F7               	addwf	_cont,f
  2650  02EE  1803               	skipnc
  2651  02EF  0AF8               	incf	_cont+1,f
  2652  02F0  3000               	movlw	0
  2653  02F1  07F8               	addwf	_cont+1,f
  2654  02F2                     i1l146:
  2655  02F2  0873               	movf	??_myISR+3,w
  2656  02F3  008A               	movwf	10
  2657  02F4  0872               	movf	??_myISR+2,w
  2658  02F5  0084               	movwf	4
  2659  02F6  0E71               	swapf	??_myISR+1,w
  2660  02F7  0083               	movwf	3
  2661  02F8  0EFE               	swapf	btemp,f
  2662  02F9  0E7E               	swapf	btemp,w
  2663  02FA  0009               	retfie
  2664  02FB                     __end_of_myISR:
  2665  007E                     btemp	set	126	;btemp
  2666  007E                     wtemp0	set	126
  2667                           
  2668                           	psect	intentry
  2669  0004                     __pintentry:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _myISR: [wreg-fsr0h+status,2+status,0]
  2672                           
  2673  0004                     interrupt_function:
  2674  007E                     saved_w	set	btemp
  2675  0004  00FE               	movwf	btemp
  2676  0005  0E03               	swapf	3,w
  2677  0006  00F1               	movwf	??_myISR+1
  2678  0007  0804               	movf	4,w
  2679  0008  00F2               	movwf	??_myISR+2
  2680  0009  080A               	movf	10,w
  2681  000A  00F3               	movwf	??_myISR+3
  2682  000B  120A  118A  2ACE   	ljmp	_myISR
  2683                           
  2684                           	psect	config
  2685                           
  2686                           ;Config register CONFIG1 @ 0x2007
  2687                           ;	Oscillator Selection bits
  2688                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2689                           ;	Watchdog Timer Enable bit
  2690                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2691                           ;	Power-up Timer Enable bit
  2692                           ;	PWRTE = OFF, PWRT disabled
  2693                           ;	RE3/MCLR pin function select bit
  2694                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2695                           ;	Code Protection bit
  2696                           ;	CP = OFF, Program memory code protection is disabled
  2697                           ;	Data Code Protection bit
  2698                           ;	CPD = OFF, Data memory code protection is disabled
  2699                           ;	Brown Out Reset Selection bits
  2700                           ;	BOREN = OFF, BOR disabled
  2701                           ;	Internal External Switchover bit
  2702                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2703                           ;	Fail-Safe Clock Monitor Enabled bit
  2704                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2705                           ;	Low Voltage Programming Enable bit
  2706                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2707                           ;	In-Circuit Debugger Mode bit
  2708                           ;	DEBUG = 0x1, unprogrammed default
  2709  2007                     	org	8199
  2710  2007  20F4               	dw	8436
  2711                           
  2712                           ;Config register CONFIG2 @ 0x2008
  2713                           ;	Brown-out Reset Selection bit
  2714                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2715                           ;	Flash Program Memory Self Write Enable bits
  2716                           ;	WRT = OFF, Write protection off
  2717  2008                     	org	8200
  2718  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     35      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _adxl345_read->_I2C_Master_Read
    _adxl345_write->_I2C_Master_Write
    _USART_Initialize->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    _adxl345_read->_I2C_Master_Read
    _SYSTEM_Initialize->_USART_Initialize
    _adxl345_init->_adxl345_write
    _USART_Initialize->___aldiv
    _I2C_Master_Init->___lldiv

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3677
                                             34 BANK0      1     1      0
                  _SYSTEM_Initialize
                       _adxl345_read
 ---------------------------------------------------------------------------------
 (1) _adxl345_read                                         6     4      2    1331
                                              1 BANK0      6     4      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2     155
                                              4 COMMON     3     1      2
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2346
                    _I2C_Master_Init
           _PORTS_MANAGER_Initialize
                   _USART_Initialize
                       _adxl345_init
 ---------------------------------------------------------------------------------
 (2) _adxl345_init                                         2     2      0     993
                                              4 BANK0      2     2      0
                      _adxl345_write
 ---------------------------------------------------------------------------------
 (3) _adxl345_write                                        4     0      4     993
                                              0 BANK0      4     0      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     571
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Initialize                                    20    16      4     811
                                             14 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _PORTS_MANAGER_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C_Master_Init
       ___lldiv
     _PORTS_MANAGER_Initialize
     _USART_Initialize
       ___aldiv
     _adxl345_init
       _adxl345_write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
   _adxl345_read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 14 22:44:59 2021

                               l13 0324                                 l16 025E  
                               l34 01B6                                 l19 02CD  
                               l45 0376                                 l70 0396  
                               l97 0298           __end_of_USART_Initialize 01B7  
                              l100 0397                                l103 03A3  
                              l112 03AD                                l106 03BF  
                              l115 034D                                l109 03B6  
                              l312 0036                                l322 00BE  
                              l155 00EB                                l283 021E  
                              _PEN 048A                                u710 01F8  
                              u711 01F7                                u800 0088  
                              u705 01DF                                u801 0087  
                              u730 0216                                u650 039D  
                              u731 0215                                u715 01F4  
                              u651 039C                                u820 00A6  
                              u740 0029                                u660 03A3  
                              u900 00CD                                _SEN 0488  
                              u725 0208                                u821 00A5  
                              u805 0084                                u741 0028  
                              u661 03A2                                u901 00CC  
                              u670 01C9                                u830 00AB  
                              u750 003A                                u910 00D6  
                              u671 01C8                                u831 00AA  
                              u815 0098                                u751 0039  
                              u911 00D5                                u760 0059  
                              u840 0346                                u920 00DF  
                              u761 0058                                u841 0342  
                              u921 00DE                                u690 01DD  
                              u930 00E8                                u691 01DC  
                              u931 00E7                                u780 006D  
                              u860 015F                                u685 01CE  
                              u781 006C                                u870 0178  
                              u854 0349                                u775 005E  
                              u881 018A                                u865 015A  
                              u890 0276                                u882 018B  
                              u795 006F                                u883 0190  
                              u875 0173                                u947 02AE  
                              u884 0191                                u885 0196  
                              u957 02C8                                u886 0197  
                              u895 0271                                fsr0 0004  
                              indf 0000                               l1121 03B7  
                             l1201 032A                               l1123 03BC  
                             l1131 03B3                               l1211 034A  
                             l1203 0332                               l1141 01D9  
                             l1053 0377                               l1221 0144  
                             l1117 0397                               l1125 03A4  
                             l1133 02FB                               l1205 0338  
                             l1151 0207                               l1143 01DD  
                             l1135 01B7                               l1231 01B4  
                             l1223 0151                               l1119 039D  
                             l1127 03A9                               l1215 0299  
                             l1207 033D                               l1153 0210  
                             l1145 01E6                               l1137 01C9  
                             l1241 0295                               l1161 0025  
                             l1233 01B5                               l1225 01AE  
                             l1129 03AE                               l1217 02A8  
                             l1209 0349                               l1147 01F8  
                             l1139 01CC                               l1155 0216  
                             l1243 0296                               l1235 025F  
                             l1171 0051                               l1163 0029  
                             l1227 01B2                               l1219 02B3  
                             l1149 0206                               l1245 0297  
                             l1237 0263                               l1181 0076  
                             l1173 0059                               l1165 003A  
                             l1229 01B3                               l1253 034E  
                             l1261 00BF                               l1239 0266  
                             l1183 0088                               l1175 005C  
                             l1191 00A6                               l1167 0045  
                             l1159 0022                               l1255 0353  
                             l1247 021F                               l1271 00D6  
                             l1263 00C4                               l1193 00AB  
                             l1185 0096                               l1177 0069  
                             l1169 0049                               l1257 0362  
                             l1249 025B                               l1273 00D9  
                             l1281 00EB                               l1265 00C8  
                             l1195 00B6                               l1187 0097  
                             l1179 006D                               l1259 0371  
                             l1275 00DF                               l1267 00CD  
                             l1189 00A0                               l1277 00E2  
                             l1269 00D0                               l1199 0325  
                             l1279 00E8                               _IOCB 0096  
                             _RCEN 048B                               _cont 0077  
                             _main 00BF                               btemp 007E  
                             start 000E              __size_of_adxl345_init 0035  
            __size_of_adxl345_read 0040                   ?_I2C_Master_Init 002D  
                 ?_I2C_Master_Read 0074                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                    __end_of___aldiv 00BF  
                            ?_main 0070                              _ACKEN 048C  
                            _ACKDT 048D                              _ANSEL 0188  
                  __end_of___lldiv 021F                              i1l146 02F2  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTD 0008                              _PORTE 0009  
                            u60_20 02E9                              u60_21 02E8  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _TRISE 0089  
                            u58_20 02D4                              u58_21 02D3  
                            u59_20 02DC                              u59_21 02DB  
                            _TXREG 0019                    adxl345_read@add 0021  
                            _myISR 02CE                              pclath 000A  
                            status 0003                              wtemp0 007E  
                     _adxl345_init 0299                       _adxl345_read 021F  
                  __initialization 0011                       __end_of_main 0144  
                           ??_main 0042             __size_of_adxl345_write 002A  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0074  
               ??_I2C_Master_Start 0074                 ??_I2C_Master_Write 0076  
                           ?_myISR 0070                             _ANSELH 0189  
                           i1l1081 02CE                             i1l1091 02E9  
                           i1l1083 02D4                             i1l1093 02EC  
                           i1l1085 02D8                             i1l1087 02DC  
                           i1l1089 02E2                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                        ??___aldiv 0074                          ??___lldiv 0074  
                           saved_w 007E                  _SYSTEM_Initialize 034E  
          __end_of__initialization 001E                 ?_SYSTEM_Initialize 0070  
                    _adxl345_write 02FB                   adxl345_write@add 0020  
                   __pcstackCOMMON 0070                ??_SYSTEM_Initialize 0076  
                    __end_of_myISR 02FB                  ?_USART_Initialize 002E  
               ??_USART_Initialize 0032                            ??_myISR 0070  
        __end_of_SYSTEM_Initialize 0377                         __pbssBANK0 0043  
                   ?_adxl345_write 0020                         __pmaintext 00BF  
                       __pintentry 0004  __size_of_PORTS_MANAGER_Initialize 0020  
        ?_PORTS_MANAGER_Initialize 0070                            _SSPCON2 0091  
                          _SSPSTAT 0094                            ___aldiv 0022  
                          ___lldiv 01B7                            __ptext1 021F  
                          __ptext2 0325                            __ptext3 034E  
                          __ptext4 0299                            __ptext5 02FB  
                          __ptext6 03A4                            __ptext7 03AE  
                          __ptext8 03B7                            __ptext9 0397  
                       _read_value 0079                   ___aldiv@dividend 0024  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0029  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
       __size_of_SYSTEM_Initialize 0029               end_of_initialization 001E  
                  ??_adxl345_write 0076          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0020  
                  ___lldiv@counter 002C                  USART_Initialize@x 003E  
                        _RCSTAbits 0018                   ___aldiv@quotient 002A  
                 I2C_Master_Init@c 002D                   I2C_Master_Read@a 0074  
                        _PORTDbits 0008                          _TXSTAbits 0098  
                adxl345_write@data 0022                        _BAUDCTLbits 0187  
              start_initialization 0011                  ??_I2C_Master_Init 0031  
                ??_I2C_Master_Read 0076                  ??_I2C_Master_Wait 0074  
                ??_I2C_Master_Stop 0074          __size_of_USART_Initialize 0073  
 __end_of_PORTS_MANAGER_Initialize 0397                        __pbssCOMMON 0077  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    ?_adxl345_init 0070                      ?_adxl345_read 0021  
                 _I2C_Master_Start 03B7                   _I2C_Master_Write 03A4  
                         ?___aldiv 0020                           ?___lldiv 0020  
                        _handshake 0049                     __size_of_myISR 002D  
                  ___aldiv@divisor 0020                  interrupt_function 0004  
                  ___aldiv@counter 0028                     ??_adxl345_init 0024  
                   ??_adxl345_read 0023                           _PIE1bits 008C  
                         _PIR1bits 000C           _PORTS_MANAGER_Initialize 0377  
              I2C_Master_Read@temp 0020                 adxl345_read@retval 0025  
            __end_of_adxl345_write 0325                   _USART_Initialize 0144  
                 __size_of___aldiv 009D                   __size_of___lldiv 0068  
                  _I2C_Master_Init 025F                    _I2C_Master_Read 0325  
                  _I2C_Master_Wait 0397                    _I2C_Master_Stop 03AE  
                         __ptext10 0144                           __ptext11 0022  
                         __ptext12 0377                           __ptext13 025F  
                         __ptext14 01B7                           __ptext15 02CE  
                    __size_of_main 0085               __end_of_adxl345_init 02CE  
             __end_of_adxl345_read 025F           __end_of_I2C_Master_Start 03C0  
         __end_of_I2C_Master_Write 03AE                         _INTCONbits 000B  
                         intlevel1 0000                       _sensor_value 0043  
                 ___lldiv@dividend 0024                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0299            __end_of_I2C_Master_Read 034E  
          __end_of_I2C_Master_Wait 03A4            __end_of_I2C_Master_Stop 03B7  
                 ___lldiv@quotient 0028                  I2C_Master_Write@d 0074  
                     ___aldiv@sign 0029           USART_Initialize@baudrate 002E  
       ??_PORTS_MANAGER_Initialize 0074  
