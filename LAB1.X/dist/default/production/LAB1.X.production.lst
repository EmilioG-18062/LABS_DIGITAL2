

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 31 18:12:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207  0753                     __pidataCOMMON:
   208                           
   209                           ;initializer for _temp
   210  0753  3401               	retlw	1
   211                           
   212                           ;initializer for _i
   213  0754  3401               	retlw	1
   214  0005                     _PORTAbits	set	5
   215  0009                     _PORTEbits	set	9
   216  0006                     _PORTBbits	set	6
   217  0009                     _PORTE	set	9
   218  0008                     _PORTD	set	8
   219  0007                     _PORTC	set	7
   220  0006                     _PORTB	set	6
   221  0005                     _PORTA	set	5
   222  0089                     _TRISE	set	137
   223  0088                     _TRISD	set	136
   224  0087                     _TRISC	set	135
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0189                     _ANSELH	set	393
   228  0188                     _ANSEL	set	392
   229                           
   230                           	psect	cinit
   231  07EF                     start_initialization:	
   232                           ; #config settings
   233                           
   234  07EF                     __initialization:
   235                           
   236                           ; Initialize objects allocated to COMMON
   237  07EF  120A  118A  2753  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   238  07F4  00F5               	movwf	__pdataCOMMON& (0+127)
   239  07F5  120A  118A  2754  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   240  07FA  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   241                           
   242                           ; Clear objects allocated to COMMON
   243  07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   244  07FC                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  07FC                     __end_of__initialization:
   248  07FC  0183               	clrf	3
   249  07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252  0077                     __pbssCOMMON:
   253  0077                     _game:
   254  0077                     	ds	1
   255                           
   256                           	psect	dataCOMMON
   257  0075                     __pdataCOMMON:
   258  0075                     _temp:
   259  0075                     	ds	1
   260  0076                     _i:
   261  0076                     	ds	1
   262                           
   263                           	psect	cstackCOMMON
   264  0070                     __pcstackCOMMON:
   265  0070                     ?_setup:
   266  0070                     ??_setup:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_semaforo:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ??_semaforo:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280  0070                     	ds	3
   281  0073                     ??_main:
   282                           
   283                           ; 1 bytes @ 0x3
   284  0073                     	ds	2
   285                           
   286                           	psect	maintext
   287  07A4                     __pmaintext:	
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 91 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0
   309 ;;      Temps:          2       0       0       0       0
   310 ;;      Totals:         2       0       0       0       0
   311 ;;Total ram usage:        2 bytes
   312 ;; Hardware stack levels required when called:    1
   313 ;; This function calls:
   314 ;;		_semaforo
   315 ;;		_setup
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _main
   323  07A4                     _main:
   324  07A4                     l693:	
   325                           ;incstack = 0
   326                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   327                           
   328                           
   329                           ;main.c: 92:     setup();
   330  07A4  120A  118A  2755  120A  118A  	fcall	_setup
   331  07A9                     l695:
   332                           
   333                           ;main.c: 94:         if (PORTAbits.RA2 == 0){
   334  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   335  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   336  07AB  1905               	btfsc	5,2	;volatile
   337  07AC  2FAE               	goto	u11
   338  07AD  2FAF               	goto	u10
   339  07AE                     u11:
   340  07AE  2FE2               	goto	l721
   341  07AF                     u10:
   342  07AF                     l697:
   343                           
   344                           ;main.c: 95:             semaforo();
   345  07AF  120A  118A  277B  120A  118A  	fcall	_semaforo
   346                           
   347                           ;main.c: 96:             while(game == 1){
   348  07B4  2FDC               	goto	l719
   349  07B5                     l699:
   350                           
   351                           ;main.c: 97:                 _delay((unsigned long)((50)*(8000000/4000.0)));
   352  07B5  3082               	movlw	130
   353  07B6  00F4               	movwf	??_main+1
   354  07B7  30DD               	movlw	221
   355  07B8  00F3               	movwf	??_main
   356  07B9                     u67:
   357  07B9  0BF3               	decfsz	??_main,f
   358  07BA  2FB9               	goto	u67
   359  07BB  0BF4               	decfsz	??_main+1,f
   360  07BC  2FB9               	goto	u67
   361  07BD  2FBE               	nop2
   362  07BE                     l701:
   363                           
   364                           ;main.c: 98:                 if (PORTAbits.RA0 == 0){
   365  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   366  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   367  07C0  1805               	btfsc	5,0	;volatile
   368  07C1  2FC3               	goto	u21
   369  07C2  2FC4               	goto	u20
   370  07C3                     u21:
   371  07C3  2FDC               	goto	l719
   372  07C4                     u20:
   373  07C4                     l703:
   374                           
   375                           ;main.c: 99:                     PORTC = temp;
   376  07C4  0875               	movf	_temp,w
   377  07C5  0087               	movwf	7	;volatile
   378  07C6                     l705:
   379                           
   380                           ;main.c: 100:                     if (temp == 1){
   381  07C6  0375               	decf	_temp,w
   382  07C7  1D03               	btfss	3,2
   383  07C8  2FCA               	goto	u31
   384  07C9  2FCB               	goto	u30
   385  07CA                     u31:
   386  07CA  2FD3               	goto	l711
   387  07CB                     u30:
   388  07CB                     l707:
   389                           
   390                           ;main.c: 101:                         PORTEbits.RE2 = 0;
   391  07CB  1109               	bcf	9,2	;volatile
   392  07CC                     l709:
   393                           
   394                           ;main.c: 102:                         temp = temp*2;
   395  07CC  0875               	movf	_temp,w
   396  07CD  00F3               	movwf	??_main
   397  07CE  0773               	addwf	??_main,w
   398  07CF  00F4               	movwf	??_main+1
   399  07D0  0874               	movf	??_main+1,w
   400  07D1  00F5               	movwf	_temp
   401                           
   402                           ;main.c: 103:                     }
   403  07D2  2FDC               	goto	l719
   404  07D3                     l711:
   405  07D3  0875               	movf	_temp,w
   406  07D4  1D03               	btfss	3,2
   407  07D5  2FD7               	goto	u41
   408  07D6  2FD8               	goto	u40
   409  07D7                     u41:
   410  07D7  2FCC               	goto	l709
   411  07D8                     u40:
   412  07D8                     l713:
   413                           
   414                           ;main.c: 105:                         PORTBbits.RB0 = 1;
   415  07D8  1406               	bsf	6,0	;volatile
   416                           
   417                           ;main.c: 106:                         temp = 1;
   418  07D9  01F5               	clrf	_temp
   419  07DA  0AF5               	incf	_temp,f
   420  07DB                     l715:
   421                           
   422                           ;main.c: 107:                         game =0;
   423  07DB  01F7               	clrf	_game
   424  07DC                     l719:	
   425                           ;main.c: 108:                     }
   426                           
   427                           
   428                           ;main.c: 96:             while(game == 1){
   429  07DC  0377               	decf	_game,w
   430  07DD  1903               	btfsc	3,2
   431  07DE  2FE0               	goto	u51
   432  07DF  2FE1               	goto	u50
   433  07E0                     u51:
   434  07E0  2FB5               	goto	l699
   435  07E1                     u50:
   436  07E1  2FA9               	goto	l695
   437  07E2                     l721:
   438                           
   439                           ;main.c: 118:             _delay((unsigned long)((50)*(8000000/4000.0)));
   440  07E2  3082               	movlw	130
   441  07E3  00F4               	movwf	??_main+1
   442  07E4  30DD               	movlw	221
   443  07E5  00F3               	movwf	??_main
   444  07E6                     u77:
   445  07E6  0BF3               	decfsz	??_main,f
   446  07E7  2FE6               	goto	u77
   447  07E8  0BF4               	decfsz	??_main+1,f
   448  07E9  2FE6               	goto	u77
   449  07EA  2FEB               	nop2
   450  07EB  2FA9               	goto	l695
   451  07EC  120A  118A  2800   	ljmp	start
   452  07EF                     __end_of_main:
   453                           
   454                           	psect	text1
   455  0755                     __ptext1:	
   456 ;; *************** function _setup *****************
   457 ;; Defined at:
   458 ;;		line 51 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   472 ;;      Params:         0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; This function calls:
   479 ;;		Nothing
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           
   486                           ;psect for function _setup
   487  0755                     _setup:
   488  0755                     l655:	
   489                           ;incstack = 0
   490                           ; Regs used in _setup: [wreg+status,2]
   491                           
   492                           
   493                           ;main.c: 53:     ANSEL = 0;
   494  0755  1683               	bsf	3,5	;RP0=1, select bank3
   495  0756  1703               	bsf	3,6	;RP1=1, select bank3
   496  0757  0188               	clrf	8	;volatile
   497  0758                     l657:
   498                           
   499                           ;main.c: 54:     TRISA = 0b00000111;
   500  0758  3007               	movlw	7
   501  0759  1683               	bsf	3,5	;RP0=1, select bank1
   502  075A  1303               	bcf	3,6	;RP1=0, select bank1
   503  075B  0085               	movwf	5	;volatile
   504  075C                     l659:
   505                           
   506                           ;main.c: 55:     PORTA = 0;
   507  075C  1283               	bcf	3,5	;RP0=0, select bank0
   508  075D  1303               	bcf	3,6	;RP1=0, select bank0
   509  075E  0185               	clrf	5	;volatile
   510  075F                     l661:
   511                           
   512                           ;main.c: 58:     ANSELH = 0;
   513  075F  1683               	bsf	3,5	;RP0=1, select bank3
   514  0760  1703               	bsf	3,6	;RP1=1, select bank3
   515  0761  0189               	clrf	9	;volatile
   516  0762                     l663:
   517                           
   518                           ;main.c: 59:     TRISB = 0;
   519  0762  1683               	bsf	3,5	;RP0=1, select bank1
   520  0763  1303               	bcf	3,6	;RP1=0, select bank1
   521  0764  0186               	clrf	6	;volatile
   522  0765                     l665:
   523                           
   524                           ;main.c: 60:     PORTB = 0;
   525  0765  1283               	bcf	3,5	;RP0=0, select bank0
   526  0766  1303               	bcf	3,6	;RP1=0, select bank0
   527  0767  0186               	clrf	6	;volatile
   528  0768                     l667:
   529                           
   530                           ;main.c: 62:     TRISC = 0;
   531  0768  1683               	bsf	3,5	;RP0=1, select bank1
   532  0769  1303               	bcf	3,6	;RP1=0, select bank1
   533  076A  0187               	clrf	7	;volatile
   534  076B                     l669:
   535                           
   536                           ;main.c: 63:     PORTC = 0;
   537  076B  1283               	bcf	3,5	;RP0=0, select bank0
   538  076C  1303               	bcf	3,6	;RP1=0, select bank0
   539  076D  0187               	clrf	7	;volatile
   540  076E                     l671:
   541                           
   542                           ;main.c: 65:     TRISD = 0;
   543  076E  1683               	bsf	3,5	;RP0=1, select bank1
   544  076F  1303               	bcf	3,6	;RP1=0, select bank1
   545  0770  0188               	clrf	8	;volatile
   546  0771                     l673:
   547                           
   548                           ;main.c: 66:     PORTD = 0;
   549  0771  1283               	bcf	3,5	;RP0=0, select bank0
   550  0772  1303               	bcf	3,6	;RP1=0, select bank0
   551  0773  0188               	clrf	8	;volatile
   552  0774                     l675:
   553                           
   554                           ;main.c: 68:     TRISE = 0;
   555  0774  1683               	bsf	3,5	;RP0=1, select bank1
   556  0775  1303               	bcf	3,6	;RP1=0, select bank1
   557  0776  0189               	clrf	9	;volatile
   558  0777                     l677:
   559                           
   560                           ;main.c: 69:     PORTE = 0;
   561  0777  1283               	bcf	3,5	;RP0=0, select bank0
   562  0778  1303               	bcf	3,6	;RP1=0, select bank0
   563  0779  0189               	clrf	9	;volatile
   564  077A                     l41:
   565  077A  0008               	return
   566  077B                     __end_of_setup:
   567                           
   568                           	psect	text2
   569  077B                     __ptext2:	
   570 ;; *************** function _semaforo *****************
   571 ;; Defined at:
   572 ;;		line 72 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          3       0       0       0       0
   589 ;;      Totals:         3       0       0       0       0
   590 ;;Total ram usage:        3 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _semaforo
   601  077B                     _semaforo:
   602  077B                     l679:	
   603                           ;incstack = 0
   604                           ; Regs used in _semaforo: [wreg]
   605                           
   606                           
   607                           ;main.c: 73:     PORTBbits.RB0 = 0;
   608  077B  1283               	bcf	3,5	;RP0=0, select bank0
   609  077C  1303               	bcf	3,6	;RP1=0, select bank0
   610  077D  1006               	bcf	6,0	;volatile
   611                           
   612                           ;main.c: 75:     PORTEbits.RE0 = 1;
   613  077E  1409               	bsf	9,0	;volatile
   614  077F                     l681:
   615                           
   616                           ;main.c: 76:     _delay((unsigned long)((100)*(8000000/4000.0)));
   617  077F  3002               	movlw	2
   618  0780  00F2               	movwf	??_semaforo+2
   619  0781  3004               	movlw	4
   620  0782  00F1               	movwf	??_semaforo+1
   621  0783  30BA               	movlw	186
   622  0784  00F0               	movwf	??_semaforo
   623  0785                     u87:
   624  0785  0BF0               	decfsz	??_semaforo,f
   625  0786  2F85               	goto	u87
   626  0787  0BF1               	decfsz	??_semaforo+1,f
   627  0788  2F85               	goto	u87
   628  0789  0BF2               	decfsz	??_semaforo+2,f
   629  078A  2F85               	goto	u87
   630  078B  0000               	nop
   631  078C                     l683:
   632                           
   633                           ;main.c: 77:     PORTEbits.RE0 = 0;
   634  078C  1283               	bcf	3,5	;RP0=0, select bank0
   635  078D  1303               	bcf	3,6	;RP1=0, select bank0
   636  078E  1009               	bcf	9,0	;volatile
   637  078F                     l685:
   638                           
   639                           ;main.c: 79:     PORTEbits.RE1 = 1;
   640  078F  1489               	bsf	9,1	;volatile
   641                           
   642                           ;main.c: 80:     _delay((unsigned long)((100)*(8000000/4000.0)));
   643  0790  3002               	movlw	2
   644  0791  00F2               	movwf	??_semaforo+2
   645  0792  3004               	movlw	4
   646  0793  00F1               	movwf	??_semaforo+1
   647  0794  30BA               	movlw	186
   648  0795  00F0               	movwf	??_semaforo
   649  0796                     u97:
   650  0796  0BF0               	decfsz	??_semaforo,f
   651  0797  2F96               	goto	u97
   652  0798  0BF1               	decfsz	??_semaforo+1,f
   653  0799  2F96               	goto	u97
   654  079A  0BF2               	decfsz	??_semaforo+2,f
   655  079B  2F96               	goto	u97
   656  079C  0000               	nop
   657  079D                     l687:
   658                           
   659                           ;main.c: 81:     PORTEbits.RE1 = 0;
   660  079D  1283               	bcf	3,5	;RP0=0, select bank0
   661  079E  1303               	bcf	3,6	;RP1=0, select bank0
   662  079F  1089               	bcf	9,1	;volatile
   663  07A0                     l689:
   664                           
   665                           ;main.c: 83:     PORTEbits.RE2 = 1;
   666  07A0  1509               	bsf	9,2	;volatile
   667  07A1                     l691:
   668                           
   669                           ;main.c: 84:     game = 1;
   670  07A1  01F7               	clrf	_game
   671  07A2  0AF7               	incf	_game,f
   672  07A3                     l44:
   673  07A3  0008               	return
   674  07A4                     __end_of_semaforo:
   675  007E                     btemp	set	126	;btemp
   676  007E                     wtemp0	set	126
   677                           
   678                           	psect	config
   679                           
   680                           ;Config register CONFIG1 @ 0x2007
   681                           ;	Oscillator Selection bits
   682                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   683                           ;	Watchdog Timer Enable bit
   684                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   685                           ;	Power-up Timer Enable bit
   686                           ;	PWRTE = OFF, PWRT disabled
   687                           ;	RE3/MCLR pin function select bit
   688                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   689                           ;	Code Protection bit
   690                           ;	CP = OFF, Program memory code protection is disabled
   691                           ;	Data Code Protection bit
   692                           ;	CPD = OFF, Data memory code protection is disabled
   693                           ;	Brown Out Reset Selection bits
   694                           ;	BOREN = OFF, BOR disabled
   695                           ;	Internal External Switchover bit
   696                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   697                           ;	Fail-Safe Clock Monitor Enabled bit
   698                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   699                           ;	Low Voltage Programming Enable bit
   700                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   701                           ;	In-Circuit Debugger Mode bit
   702                           ;	DEBUG = 0x1, unprogrammed default
   703  2007                     	org	8199
   704  2007  20F1               	dw	8433
   705                           
   706                           ;Config register CONFIG2 @ 0x2008
   707                           ;	Brown-out Reset Selection bit
   708                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   709                           ;	Flash Program Memory Self Write Enable bits
   710                           ;	WRT = OFF, Write protection off
   711  2008                     	org	8200
   712  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       8      12        0.0%
ABS                  0      0       8       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 31 18:12:32 2021

                      _i 0076                       l41 077A                       l44 07A3  
                     u10 07AF                       u11 07AE                       u20 07C4  
                     u21 07C3                       u30 07CB                       u31 07CA  
                     u40 07D8                       u41 07D7                       u50 07E1  
                     u51 07E0                       u67 07B9                       u77 07E6  
                     u87 0785                       u97 0796                      l701 07BE  
                    l711 07D3                      l703 07C4                      l713 07D8  
                    l705 07C6                      l721 07E2                      l715 07DB  
                    l707 07CB                      l661 075F                      l709 07CC  
                    l671 076E                      l663 0762                      l655 0755  
                    l719 07DC                      l681 077F                      l673 0771  
                    l665 0765                      l657 0758                      l691 07A1  
                    l683 078C                      l675 0774                      l667 0768  
                    l659 075C                      l685 078F                      l677 0777  
                    l669 076B                      l693 07A4                      l687 079D  
                    l679 077B                      l695 07A9                      l689 07A0  
                    l697 07AF                      l699 07B5                     _game 0077  
                   _main 07A4                     _temp 0075                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0755                    status 0003  
                  wtemp0 007E          __initialization 07EF             __end_of_main 07EF  
                 ??_main 0073                   ?_setup 0070                   _ANSELH 0189  
       __end_of_semaforo 07A4             __pdataCOMMON 0075  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 077B                  ??_setup 0070  
             __pmaintext 07A4                ?_semaforo 0070                  __ptext1 0755  
                __ptext2 077B     end_of_initialization 07FC               ??_semaforo 0070  
              _PORTAbits 0005                _PORTBbits 0006                _PORTEbits 0009  
          __pidataCOMMON 0753      start_initialization 07EF              __pbssCOMMON 0077  
              ___latbits 0002        __size_of_semaforo 0029           __size_of_setup 0026  
          __size_of_main 004B                 _semaforo 077B  
