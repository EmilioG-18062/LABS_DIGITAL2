

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 13:10:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  000B                     _INTCON	set	11
   205  0009                     _PORTE	set	9
   206  0008                     _PORTD	set	8
   207  0007                     _PORTC	set	7
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  0006                     _PORTBbits	set	6
   211  000B                     _INTCONbits	set	11
   212  0089                     _TRISE	set	137
   213  0088                     _TRISD	set	136
   214  0087                     _TRISC	set	135
   215  0096                     _IOCB	set	150
   216  0086                     _TRISB	set	134
   217  0085                     _TRISA	set	133
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	cinit
   222  000F                     start_initialization:	
   223                           ; #config settings
   224                           
   225  000F                     __initialization:
   226                           
   227                           ; Clear objects allocated to COMMON
   228  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   229  0010                     end_of_initialization:	
   230                           ;End of C runtime variable initialization code
   231                           
   232  0010                     __end_of__initialization:
   233  0010  0183               	clrf	3
   234  0011  120A  118A  2866   	ljmp	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMMON
   237  0074                     __pbssCOMMON:
   238  0074                     _Reference_Count:
   239  0074                     	ds	1
   240                           
   241                           	psect	cstackCOMMON
   242  0070                     __pcstackCOMMON:
   243  0070                     ?_myISR:
   244  0070                     ??_myISR:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_setup:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	4
   256  0074                     ??_setup:
   257  0074                     ??_main:	
   258                           ; 1 bytes @ 0x4
   259                           
   260                           
   261                           	psect	maintext
   262  0066                     __pmaintext:	
   263                           ; 1 bytes @ 0x4
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 95 in file "main.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, pclath, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : B00/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   283 ;;      Params:         0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0
   285 ;;      Temps:          0       0       0       0       0
   286 ;;      Totals:         0       0       0       0       0
   287 ;;Total ram usage:        0 bytes
   288 ;; Hardware stack levels required when called:    2
   289 ;; This function calls:
   290 ;;		_setup
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           
   297                           ;psect for function _main
   298  0066                     _main:
   299  0066                     l679:	
   300                           ;incstack = 0
   301                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   302                           
   303                           
   304                           ;main.c: 96:     setup();
   305  0066  120A  118A  2014  120A  118A  	fcall	_setup
   306  006B                     l681:
   307                           
   308                           ;main.c: 98:         PORTC = Reference_Count;
   309  006B  0874               	movf	_Reference_Count,w
   310  006C  1283               	bcf	3,5	;RP0=0, select bank0
   311  006D  1303               	bcf	3,6	;RP1=0, select bank0
   312  006E  0087               	movwf	7	;volatile
   313  006F  286B               	goto	l681
   314  0070  120A  118A  280C   	ljmp	start
   315  0073                     __end_of_main:
   316                           
   317                           	psect	text1
   318  0014                     __ptext1:	
   319 ;; *************** function _setup *****************
   320 ;; Defined at:
   321 ;;		line 68 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0
   338 ;;      Totals:         0       0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; Hardware stack levels required when called:    1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           
   350                           ;psect for function _setup
   351  0014                     _setup:
   352  0014                     l647:	
   353                           ;incstack = 0
   354                           ; Regs used in _setup: [wreg+status,2]
   355                           
   356                           
   357                           ;main.c: 70:     ANSEL = 0;
   358  0014  1683               	bsf	3,5	;RP0=1, select bank3
   359  0015  1703               	bsf	3,6	;RP1=1, select bank3
   360  0016  0188               	clrf	8	;volatile
   361                           
   362                           ;main.c: 71:     TRISA = 0;
   363  0017  1683               	bsf	3,5	;RP0=1, select bank1
   364  0018  1303               	bcf	3,6	;RP1=0, select bank1
   365  0019  0185               	clrf	5	;volatile
   366                           
   367                           ;main.c: 72:     PORTA = 0;
   368  001A  1283               	bcf	3,5	;RP0=0, select bank0
   369  001B  1303               	bcf	3,6	;RP1=0, select bank0
   370  001C  0185               	clrf	5	;volatile
   371                           
   372                           ;main.c: 75:     ANSELH = 0;
   373  001D  1683               	bsf	3,5	;RP0=1, select bank3
   374  001E  1703               	bsf	3,6	;RP1=1, select bank3
   375  001F  0189               	clrf	9	;volatile
   376  0020                     l649:
   377                           
   378                           ;main.c: 76:     TRISB = 0b00000011;
   379  0020  3003               	movlw	3
   380  0021  1683               	bsf	3,5	;RP0=1, select bank1
   381  0022  1303               	bcf	3,6	;RP1=0, select bank1
   382  0023  0086               	movwf	6	;volatile
   383  0024                     l651:
   384                           
   385                           ;main.c: 77:     PORTB = 0;
   386  0024  1283               	bcf	3,5	;RP0=0, select bank0
   387  0025  1303               	bcf	3,6	;RP1=0, select bank0
   388  0026  0186               	clrf	6	;volatile
   389                           
   390                           ;main.c: 78:     IOCB = 0b00000011;
   391  0027  3003               	movlw	3
   392  0028  1683               	bsf	3,5	;RP0=1, select bank1
   393  0029  1303               	bcf	3,6	;RP1=0, select bank1
   394  002A  0096               	movwf	22	;volatile
   395  002B                     l653:
   396                           
   397                           ;main.c: 80:     TRISC = 0;
   398  002B  0187               	clrf	7	;volatile
   399  002C                     l655:
   400                           
   401                           ;main.c: 81:     PORTC = 0;
   402  002C  1283               	bcf	3,5	;RP0=0, select bank0
   403  002D  1303               	bcf	3,6	;RP1=0, select bank0
   404  002E  0187               	clrf	7	;volatile
   405  002F                     l657:
   406                           
   407                           ;main.c: 83:     TRISD = 0;
   408  002F  1683               	bsf	3,5	;RP0=1, select bank1
   409  0030  1303               	bcf	3,6	;RP1=0, select bank1
   410  0031  0188               	clrf	8	;volatile
   411  0032                     l659:
   412                           
   413                           ;main.c: 84:     PORTD = 0;
   414  0032  1283               	bcf	3,5	;RP0=0, select bank0
   415  0033  1303               	bcf	3,6	;RP1=0, select bank0
   416  0034  0188               	clrf	8	;volatile
   417  0035                     l661:
   418                           
   419                           ;main.c: 86:     TRISE = 0;
   420  0035  1683               	bsf	3,5	;RP0=1, select bank1
   421  0036  1303               	bcf	3,6	;RP1=0, select bank1
   422  0037  0189               	clrf	9	;volatile
   423  0038                     l663:
   424                           
   425                           ;main.c: 87:     PORTE = 0;
   426  0038  1283               	bcf	3,5	;RP0=0, select bank0
   427  0039  1303               	bcf	3,6	;RP1=0, select bank0
   428  003A  0189               	clrf	9	;volatile
   429                           
   430                           ;main.c: 89:     INTCON = 0b10001001;
   431  003B  3089               	movlw	137
   432  003C  008B               	movwf	11	;volatile
   433  003D                     l47:
   434  003D  0008               	return
   435  003E                     __end_of_setup:
   436                           
   437                           	psect	text2
   438  003E                     __ptext2:	
   439 ;; *************** function _myISR *****************
   440 ;; Defined at:
   441 ;;		line 47 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          4       0       0       0       0
   458 ;;      Totals:         4       0       0       0       0
   459 ;;Total ram usage:        4 bytes
   460 ;; Hardware stack levels used:    1
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		Interrupt level 1
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           
   469                           ;psect for function _myISR
   470  003E                     _myISR:
   471  003E                     i1l665:
   472                           
   473                           ;main.c: 49:     if (INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1){
   474  003E  1D8B               	btfss	11,3	;volatile
   475  003F  2841               	goto	u1_21
   476  0040  2842               	goto	u1_20
   477  0041                     u1_21:
   478  0041  285F               	goto	i1l44
   479  0042                     u1_20:
   480  0042                     i1l667:
   481  0042  1C0B               	btfss	11,0	;volatile
   482  0043  2845               	goto	u2_21
   483  0044  2846               	goto	u2_20
   484  0045                     u2_21:
   485  0045  285F               	goto	i1l44
   486  0046                     u2_20:
   487  0046                     i1l669:
   488                           
   489                           ;main.c: 50:         if (PORTBbits.RB0 == 0){
   490  0046  1283               	bcf	3,5	;RP0=0, select bank0
   491  0047  1303               	bcf	3,6	;RP1=0, select bank0
   492  0048  1806               	btfsc	6,0	;volatile
   493  0049  284B               	goto	u3_21
   494  004A  284C               	goto	u3_20
   495  004B                     u3_21:
   496  004B  285E               	goto	i1l40
   497  004C                     u3_20:
   498  004C                     i1l671:
   499                           
   500                           ;main.c: 51:             INTCONbits.RBIF=0;
   501  004C  100B               	bcf	11,0	;volatile
   502  004D                     i1l673:
   503                           
   504                           ;main.c: 52:             if (Reference_Count > 0){
   505  004D  0874               	movf	_Reference_Count,w
   506  004E  1903               	btfsc	3,2
   507  004F  2851               	goto	u4_21
   508  0050  2852               	goto	u4_20
   509  0051                     u4_21:
   510  0051  2859               	goto	i1l677
   511  0052                     u4_20:
   512  0052                     i1l675:
   513                           
   514                           ;main.c: 53:                 Reference_Count = Reference_Count * 2;
   515  0052  0874               	movf	_Reference_Count,w
   516  0053  00F0               	movwf	??_myISR
   517  0054  0770               	addwf	??_myISR,w
   518  0055  00F1               	movwf	??_myISR+1
   519  0056  0871               	movf	??_myISR+1,w
   520  0057  00F4               	movwf	_Reference_Count
   521                           
   522                           ;main.c: 54:             }
   523  0058  285F               	goto	i1l44
   524  0059                     i1l677:
   525                           
   526                           ;main.c: 56:                 Reference_Count++;
   527  0059  3001               	movlw	1
   528  005A  00F0               	movwf	??_myISR
   529  005B  0870               	movf	??_myISR,w
   530  005C  07F4               	addwf	_Reference_Count,f
   531  005D  285F               	goto	i1l44
   532  005E                     i1l40:	
   533                           ;main.c: 59:         else{
   534                           
   535                           
   536                           ;main.c: 60:             INTCONbits.RBIF=0;
   537  005E  100B               	bcf	11,0	;volatile
   538  005F                     i1l44:
   539  005F  0873               	movf	??_myISR+3,w
   540  0060  008A               	movwf	10
   541  0061  0E72               	swapf	??_myISR+2,w
   542  0062  0083               	movwf	3
   543  0063  0EFE               	swapf	btemp,f
   544  0064  0E7E               	swapf	btemp,w
   545  0065  0009               	retfie
   546  0066                     __end_of_myISR:
   547  007E                     btemp	set	126	;btemp
   548  007E                     wtemp0	set	126
   549                           
   550                           	psect	intentry
   551  0004                     __pintentry:	
   552                           ;incstack = 0
   553                           ; Regs used in _myISR: [wreg+status,2+status,0]
   554                           
   555  0004                     interrupt_function:
   556  007E                     saved_w	set	btemp
   557  0004  00FE               	movwf	btemp
   558  0005  0E03               	swapf	3,w
   559  0006  00F2               	movwf	??_myISR+2
   560  0007  080A               	movf	10,w
   561  0008  00F3               	movwf	??_myISR+3
   562  0009  120A  118A  283E   	ljmp	_myISR
   563                           
   564                           	psect	config
   565                           
   566                           ;Config register CONFIG1 @ 0x2007
   567                           ;	Oscillator Selection bits
   568                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   569                           ;	Watchdog Timer Enable bit
   570                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   571                           ;	Power-up Timer Enable bit
   572                           ;	PWRTE = OFF, PWRT disabled
   573                           ;	RE3/MCLR pin function select bit
   574                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   575                           ;	Code Protection bit
   576                           ;	CP = OFF, Program memory code protection is disabled
   577                           ;	Data Code Protection bit
   578                           ;	CPD = OFF, Data memory code protection is disabled
   579                           ;	Brown Out Reset Selection bits
   580                           ;	BOREN = OFF, BOR disabled
   581                           ;	Internal External Switchover bit
   582                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   583                           ;	Fail-Safe Clock Monitor Enabled bit
   584                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   585                           ;	Low Voltage Programming Enable bit
   586                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   587                           ;	In-Circuit Debugger Mode bit
   588                           ;	DEBUG = 0x1, unprogrammed default
   589  2007                     	org	8199
   590  2007  20F1               	dw	8433
   591                           
   592                           ;Config register CONFIG2 @ 0x2008
   593                           ;	Brown-out Reset Selection bit
   594                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   595                           ;	Flash Program Memory Self Write Enable bits
   596                           ;	WRT = OFF, Write protection off
   597  2008                     	org	8200
   598  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 13:10:30 2021

                     l47 003D                      l651 0024                      l661 0035  
                    l653 002B                      l663 0038                      l655 002C  
                    l647 0014                      l657 002F                      l649 0020  
                    l681 006B                      l659 0032                      l679 0066  
                   _IOCB 0096                     i1l40 005E                     i1l44 005F  
                   u1_20 0042                     u1_21 0041                     u2_20 0046  
                   u2_21 0045                     u3_20 004C                     u3_21 004B  
                   u4_20 0052                     u4_21 0051                     _main 0066  
                   btemp 007E                     start 000C                    ?_main 0070  
                  _ANSEL 0188                    i1l671 004C                    i1l673 004D  
                  i1l665 003E                    i1l675 0052                    i1l667 0042  
                  i1l677 0059                    i1l669 0046                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _myISR 003E                    _setup 0014                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0073                   ??_main 0074                   ?_myISR 0070  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_myISR 0066            __end_of_setup 003E                  ??_myISR 0070  
                ??_setup 0074               __pmaintext 0066          _Reference_Count 0074  
             __pintentry 0004                  __ptext1 0014                  __ptext2 003E  
   end_of_initialization 0010                _PORTBbits 0006      start_initialization 000F  
            __pbssCOMMON 0074                ___latbits 0002           __size_of_myISR 0028  
         __size_of_setup 002A        interrupt_function 0004            __size_of_main 000D  
             _INTCONbits 000B                 intlevel1 0000  
