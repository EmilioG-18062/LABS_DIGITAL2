

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 23:25:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  0166                     __pidataBANK0:
   213                           
   214                           ;initializer for _display_array
   215  0166  343F               	retlw	63
   216  0167  3406               	retlw	6
   217  0168  345B               	retlw	91
   218  0169  344F               	retlw	79
   219  016A  3466               	retlw	102
   220  016B  346D               	retlw	109
   221  016C  347D               	retlw	125
   222  016D  3407               	retlw	7
   223  016E  347F               	retlw	127
   224  016F  346F               	retlw	111
   225  0170  3477               	retlw	119
   226  0171  347C               	retlw	124
   227  0172  3439               	retlw	57
   228  0173  345E               	retlw	94
   229  0174  3479               	retlw	121
   230  0175  3471               	retlw	113
   231  0001                     _TMR0	set	1
   232  0009                     _PORTE	set	9
   233  0008                     _PORTD	set	8
   234  0007                     _PORTC	set	7
   235  0006                     _PORTB	set	6
   236  0005                     _PORTA	set	5
   237  001F                     _ADCON0	set	31
   238  000C                     _PIR1	set	12
   239  000B                     _INTCON	set	11
   240  0009                     _PORTEbits	set	9
   241  001E                     _ADRESH	set	30
   242  001F                     _ADCON0bits	set	31
   243  000C                     _PIR1bits	set	12
   244  0006                     _PORTBbits	set	6
   245  000B                     _INTCONbits	set	11
   246  0089                     _TRISE	set	137
   247  0088                     _TRISD	set	136
   248  0087                     _TRISC	set	135
   249  0096                     _IOCB	set	150
   250  0086                     _TRISB	set	134
   251  0085                     _TRISA	set	133
   252  0081                     _OPTION_REG	set	129
   253  009E                     _ADRESL	set	158
   254  009F                     _ADCON1	set	159
   255  008C                     _PIE1	set	140
   256  0189                     _ANSELH	set	393
   257  0188                     _ANSEL	set	392
   258                           
   259                           	psect	cinit
   260  000F                     start_initialization:	
   261                           ; #config settings
   262                           
   263  000F                     __initialization:
   264                           
   265                           ; Initialize objects allocated to BANK0
   266  000F  1383               	bcf	3,7	;select IRP bank0
   267  0010  3030               	movlw	low (__pdataBANK0+16)
   268  0011  00FD               	movwf	btemp+-1
   269  0012  3001               	movlw	high __pidataBANK0
   270  0013  00FE               	movwf	btemp
   271  0014  3066               	movlw	low __pidataBANK0
   272  0015  00FF               	movwf	btemp+1
   273  0016  3020               	movlw	low __pdataBANK0
   274  0017  0084               	movwf	4
   275  0018  120A  118A  2157  120A  118A  	fcall	init_ram0
   276                           
   277                           ; Clear objects allocated to BANK0
   278  001D  01B0               	clrf	__pbssBANK0& (0+127)
   279  001E  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   280  001F  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   281                           
   282                           ; Clear objects allocated to COMMON
   283  0020  01FD               	clrf	__pbssCOMMON& (0+127)
   284  0021                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0021                     __end_of__initialization:
   288  0021  0183               	clrf	3
   289  0022  120A  118A  2935   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMMON
   292  007D                     __pbssCOMMON:
   293  007D                     _reference_count:
   294  007D                     	ds	1
   295                           
   296                           	psect	bssBANK0
   297  0030                     __pbssBANK0:
   298  0030                     _display_count:
   299  0030                     	ds	2
   300  0032                     _timer0_count:
   301  0032                     	ds	1
   302                           
   303                           	psect	dataBANK0
   304  0020                     __pdataBANK0:
   305  0020                     _display_array:
   306  0020                     	ds	16
   307                           
   308                           	psect	inittext
   309  0153                     init_fetch0:	
   310                           ;	Called with low address in FSR and high address in W
   311                           
   312  0153  087E               	movf	btemp,w
   313  0154  008A               	movwf	10
   314  0155  087F               	movf	btemp+1,w
   315  0156  0082               	movwf	2
   316  0157                     init_ram0:	
   317                           ;Called with:
   318                           ;	high address of idata address in btemp 
   319                           ;	low address of idata address in btemp+1 
   320                           ;	low address of data in FSR
   321                           ;	high address + 1 of data in btemp-1
   322                           
   323  0157  120A  118A  2153  120A  118A  	fcall	init_fetch0
   324  015C  0080               	movwf	0
   325  015D  0A84               	incf	4,f
   326  015E  0804               	movf	4,w
   327  015F  067D               	xorwf	btemp+-1,w
   328  0160  1903               	btfsc	3,2
   329  0161  3400               	retlw	0
   330  0162  0AFF               	incf	btemp+1,f
   331  0163  1903               	btfsc	3,2
   332  0164  0AFE               	incf	btemp,f
   333  0165  2957               	goto	init_ram0
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_myISR:
   338  0070                     ?_setup:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?___awdiv:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ___awdiv@divisor:	
   348                           ; 2 bytes @ 0x0
   349                           
   350                           
   351                           ; 2 bytes @ 0x0
   352  0070                     	ds	2
   353  0072                     ___awdiv@dividend:
   354                           
   355                           ; 2 bytes @ 0x2
   356  0072                     	ds	2
   357  0074                     ??___awdiv:
   358                           
   359                           ; 1 bytes @ 0x4
   360  0074                     	ds	1
   361  0075                     ___awdiv@counter:
   362                           
   363                           ; 1 bytes @ 0x5
   364  0075                     	ds	1
   365  0076                     ___awdiv@sign:
   366                           
   367                           ; 1 bytes @ 0x6
   368  0076                     	ds	1
   369  0077                     ___awdiv@quotient:
   370                           
   371                           ; 2 bytes @ 0x7
   372  0077                     	ds	2
   373  0079                     ??_myISR:
   374                           
   375                           ; 1 bytes @ 0x9
   376  0079                     	ds	4
   377                           
   378                           	psect	cstackBANK0
   379  0033                     __pcstackBANK0:
   380  0033                     ??_setup:
   381  0033                     ??_main:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 1 bytes @ 0x0
   386  0033                     	ds	1
   387                           
   388                           	psect	maintext
   389  0135                     __pmaintext:	
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 117 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : B00/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          0       1       0       0       0
   412 ;;      Totals:         0       1       0       0       0
   413 ;;Total ram usage:        1 bytes
   414 ;; Hardware stack levels required when called:    3
   415 ;; This function calls:
   416 ;;		_setup
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _main
   424  0135                     _main:
   425  0135                     l919:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   428                           
   429                           
   430                           ;main.c: 118:     setup();
   431  0135  120A  118A  20F6  120A  118A  	fcall	_setup
   432  013A                     l921:
   433                           
   434                           ;main.c: 119:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   435  013A  300F               	movlw	15
   436  013B  1283               	bcf	3,5	;RP0=0, select bank0
   437  013C  1303               	bcf	3,6	;RP1=0, select bank0
   438  013D  00B3               	movwf	??_main
   439  013E                     u457:
   440  013E  0BB3               	decfsz	??_main,f
   441  013F  293E               	goto	u457
   442  0140  2941               	nop2
   443  0141                     l923:
   444                           
   445                           ;main.c: 120:     ADCON0bits.GO_nDONE = 1;
   446  0141  1283               	bcf	3,5	;RP0=0, select bank0
   447  0142  1303               	bcf	3,6	;RP1=0, select bank0
   448  0143  149F               	bsf	31,1	;volatile
   449  0144                     l925:
   450                           
   451                           ;main.c: 121:     PORTEbits.RE0 = 1;
   452  0144  1409               	bsf	9,0	;volatile
   453  0145                     l927:
   454                           
   455                           ;main.c: 122:     TMR0 = 22;
   456  0145  3016               	movlw	22
   457  0146  0081               	movwf	1	;volatile
   458  0147                     l929:
   459                           
   460                           ;main.c: 124:         PORTC = reference_count;
   461  0147  087D               	movf	_reference_count,w	;volatile
   462  0148  0087               	movwf	7	;volatile
   463  0149                     l931:
   464                           
   465                           ;main.c: 125:         PORTD = display_array[display_count];
   466  0149  0830               	movf	_display_count,w	;volatile
   467  014A  3E20               	addlw	(low (_display_array| 0))& (0+255)
   468  014B  0084               	movwf	4
   469  014C  1383               	bcf	3,7	;select IRP bank0
   470  014D  0800               	movf	0,w
   471  014E  0088               	movwf	8	;volatile
   472  014F  2947               	goto	l929
   473  0150  120A  118A  280C   	ljmp	start
   474  0153                     __end_of_main:
   475                           
   476                           	psect	text1
   477  00F6                     __ptext1:	
   478 ;; *************** function _setup *****************
   479 ;; Defined at:
   480 ;;		line 81 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _setup
   510  00F6                     _setup:
   511  00F6                     l805:	
   512                           ;incstack = 0
   513                           ; Regs used in _setup: [wreg+status,2]
   514                           
   515                           
   516                           ;main.c: 83:     INTCON = 0b11101000;
   517  00F6  30E8               	movlw	232
   518  00F7  008B               	movwf	11	;volatile
   519                           
   520                           ;main.c: 84:     PIR1 = 0b01000000;
   521  00F8  3040               	movlw	64
   522  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   523  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   524  00FB  008C               	movwf	12	;volatile
   525                           
   526                           ;main.c: 85:     PIE1 = 0b01000000;
   527  00FC  3040               	movlw	64
   528  00FD  1683               	bsf	3,5	;RP0=1, select bank1
   529  00FE  1303               	bcf	3,6	;RP1=0, select bank1
   530  00FF  008C               	movwf	12	;volatile
   531  0100                     l807:
   532                           
   533                           ;main.c: 86:     ADCON1 = 0;
   534  0100  019F               	clrf	31	;volatile
   535  0101                     l809:
   536                           
   537                           ;main.c: 87:     ADCON0 = 0b10000001;
   538  0101  3081               	movlw	129
   539  0102  1283               	bcf	3,5	;RP0=0, select bank0
   540  0103  1303               	bcf	3,6	;RP1=0, select bank0
   541  0104  009F               	movwf	31	;volatile
   542                           
   543                           ;main.c: 89:     ADRESH = 0;
   544  0105  019E               	clrf	30	;volatile
   545                           
   546                           ;main.c: 90:     ADRESL = 0;
   547  0106  1683               	bsf	3,5	;RP0=1, select bank1
   548  0107  1303               	bcf	3,6	;RP1=0, select bank1
   549  0108  019E               	clrf	30	;volatile
   550  0109                     l811:
   551                           
   552                           ;main.c: 92:     OPTION_REG = 0b00000110;
   553  0109  3006               	movlw	6
   554  010A  0081               	movwf	1	;volatile
   555  010B                     l813:
   556                           
   557                           ;main.c: 94:     ANSEL = 0b00000001;
   558  010B  3001               	movlw	1
   559  010C  1683               	bsf	3,5	;RP0=1, select bank3
   560  010D  1703               	bsf	3,6	;RP1=1, select bank3
   561  010E  0088               	movwf	8	;volatile
   562  010F                     l815:
   563                           
   564                           ;main.c: 95:     TRISA = 0b00000001;
   565  010F  3001               	movlw	1
   566  0110  1683               	bsf	3,5	;RP0=1, select bank1
   567  0111  1303               	bcf	3,6	;RP1=0, select bank1
   568  0112  0085               	movwf	5	;volatile
   569  0113                     l817:
   570                           
   571                           ;main.c: 96:     PORTA = 0;
   572  0113  1283               	bcf	3,5	;RP0=0, select bank0
   573  0114  1303               	bcf	3,6	;RP1=0, select bank0
   574  0115  0185               	clrf	5	;volatile
   575  0116                     l819:
   576                           
   577                           ;main.c: 99:     ANSELH = 0;
   578  0116  1683               	bsf	3,5	;RP0=1, select bank3
   579  0117  1703               	bsf	3,6	;RP1=1, select bank3
   580  0118  0189               	clrf	9	;volatile
   581  0119                     l821:
   582                           
   583                           ;main.c: 100:     TRISB = 0b00000011;
   584  0119  3003               	movlw	3
   585  011A  1683               	bsf	3,5	;RP0=1, select bank1
   586  011B  1303               	bcf	3,6	;RP1=0, select bank1
   587  011C  0086               	movwf	6	;volatile
   588                           
   589                           ;main.c: 101:     PORTB = 0;
   590  011D  1283               	bcf	3,5	;RP0=0, select bank0
   591  011E  1303               	bcf	3,6	;RP1=0, select bank0
   592  011F  0186               	clrf	6	;volatile
   593  0120                     l823:
   594                           
   595                           ;main.c: 102:     IOCB = 0b00000011;
   596  0120  3003               	movlw	3
   597  0121  1683               	bsf	3,5	;RP0=1, select bank1
   598  0122  1303               	bcf	3,6	;RP1=0, select bank1
   599  0123  0096               	movwf	22	;volatile
   600  0124                     l825:
   601                           
   602                           ;main.c: 104:     TRISC = 0;
   603  0124  0187               	clrf	7	;volatile
   604  0125                     l827:
   605                           
   606                           ;main.c: 105:     PORTC = 0;
   607  0125  1283               	bcf	3,5	;RP0=0, select bank0
   608  0126  1303               	bcf	3,6	;RP1=0, select bank0
   609  0127  0187               	clrf	7	;volatile
   610  0128                     l829:
   611                           
   612                           ;main.c: 107:     TRISD = 0;
   613  0128  1683               	bsf	3,5	;RP0=1, select bank1
   614  0129  1303               	bcf	3,6	;RP1=0, select bank1
   615  012A  0188               	clrf	8	;volatile
   616  012B                     l831:
   617                           
   618                           ;main.c: 108:     PORTD = 0;
   619  012B  1283               	bcf	3,5	;RP0=0, select bank0
   620  012C  1303               	bcf	3,6	;RP1=0, select bank0
   621  012D  0188               	clrf	8	;volatile
   622  012E                     l833:
   623                           
   624                           ;main.c: 110:     TRISE = 0;
   625  012E  1683               	bsf	3,5	;RP0=1, select bank1
   626  012F  1303               	bcf	3,6	;RP1=0, select bank1
   627  0130  0189               	clrf	9	;volatile
   628  0131                     l835:
   629                           
   630                           ;main.c: 111:     PORTE = 0;
   631  0131  1283               	bcf	3,5	;RP0=0, select bank0
   632  0132  1303               	bcf	3,6	;RP1=0, select bank0
   633  0133  0189               	clrf	9	;volatile
   634  0134                     l77:
   635  0134  0008               	return
   636  0135                     __end_of_setup:
   637                           
   638                           	psect	text2
   639  0025                     __ptext2:	
   640 ;; *************** function _myISR *****************
   641 ;; Defined at:
   642 ;;		line 51 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0, pclath, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          4       0       0       0       0
   659 ;;      Totals:         4       0       0       0       0
   660 ;;Total ram usage:        4 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    1
   663 ;; This function calls:
   664 ;;		___awdiv
   665 ;; This function is called by:
   666 ;;		Interrupt level 1
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _myISR
   672  0025                     _myISR:
   673  0025                     i1l881:
   674                           
   675                           ;main.c: 53:     if (INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1){
   676  0025  1D8B               	btfss	11,3	;volatile
   677  0026  2828               	goto	u33_21
   678  0027  2829               	goto	u33_20
   679  0028                     u33_21:
   680  0028  283E               	goto	i1l895
   681  0029                     u33_20:
   682  0029                     i1l883:
   683  0029  1C0B               	btfss	11,0	;volatile
   684  002A  282C               	goto	u34_21
   685  002B  282D               	goto	u34_20
   686  002C                     u34_21:
   687  002C  283E               	goto	i1l895
   688  002D                     u34_20:
   689  002D                     i1l885:
   690                           
   691                           ;main.c: 54:         if (PORTBbits.RB0 == 0){
   692  002D  1283               	bcf	3,5	;RP0=0, select bank0
   693  002E  1303               	bcf	3,6	;RP1=0, select bank0
   694  002F  1806               	btfsc	6,0	;volatile
   695  0030  2832               	goto	u35_21
   696  0031  2833               	goto	u35_20
   697  0032                     u35_21:
   698  0032  2837               	goto	i1l889
   699  0033                     u35_20:
   700  0033                     i1l887:
   701                           
   702                           ;main.c: 55:             reference_count++;
   703  0033  3001               	movlw	1
   704  0034  00F9               	movwf	??_myISR
   705  0035  0879               	movf	??_myISR,w
   706  0036  07FD               	addwf	_reference_count,f	;volatile
   707  0037                     i1l889:
   708                           
   709                           ;main.c: 57:         if (PORTBbits.RB1 == 0){
   710  0037  1886               	btfsc	6,1	;volatile
   711  0038  283A               	goto	u36_21
   712  0039  283B               	goto	u36_20
   713  003A                     u36_21:
   714  003A  283D               	goto	i1l893
   715  003B                     u36_20:
   716  003B                     i1l891:
   717                           
   718                           ;main.c: 58:             reference_count--;
   719  003B  3001               	movlw	1
   720  003C  02FD               	subwf	_reference_count,f	;volatile
   721  003D                     i1l893:
   722                           
   723                           ;main.c: 60:         INTCONbits.RBIF=0;
   724  003D  100B               	bcf	11,0	;volatile
   725  003E                     i1l895:
   726                           
   727                           ;main.c: 63:     if (PIR1bits.ADIF == 1 && ADCON0bits.GO_nDONE == 0){
   728  003E  1283               	bcf	3,5	;RP0=0, select bank0
   729  003F  1303               	bcf	3,6	;RP1=0, select bank0
   730  0040  1F0C               	btfss	12,6	;volatile
   731  0041  2843               	goto	u37_21
   732  0042  2844               	goto	u37_20
   733  0043                     u37_21:
   734  0043  2867               	goto	i1l907
   735  0044                     u37_20:
   736  0044                     i1l897:
   737  0044  189F               	btfsc	31,1	;volatile
   738  0045  2847               	goto	u38_21
   739  0046  2848               	goto	u38_20
   740  0047                     u38_21:
   741  0047  2867               	goto	i1l907
   742  0048                     u38_20:
   743  0048                     i1l899:
   744                           
   745                           ;main.c: 64:         display_count = ADRESH/16;
   746  0048  3010               	movlw	16
   747  0049  00F0               	movwf	___awdiv@divisor
   748  004A  3000               	movlw	0
   749  004B  00F1               	movwf	___awdiv@divisor+1
   750  004C  081E               	movf	30,w	;volatile
   751  004D  00F9               	movwf	??_myISR
   752  004E  01FA               	clrf	??_myISR+1
   753  004F  0879               	movf	??_myISR,w
   754  0050  00F2               	movwf	___awdiv@dividend
   755  0051  087A               	movf	??_myISR+1,w
   756  0052  00F3               	movwf	___awdiv@dividend+1
   757  0053  120A  118A  208F  120A  118A  	fcall	___awdiv
   758  0058  0871               	movf	?___awdiv+1,w
   759  0059  1283               	bcf	3,5	;RP0=0, select bank0
   760  005A  1303               	bcf	3,6	;RP1=0, select bank0
   761  005B  00B1               	movwf	_display_count+1	;volatile
   762  005C  0870               	movf	?___awdiv,w
   763  005D  00B0               	movwf	_display_count	;volatile
   764  005E                     i1l901:
   765                           
   766                           ;main.c: 65:         _delay((unsigned long)((25)*(8000000/4000000.0)));
   767  005E  3010               	movlw	16
   768  005F  00F9               	movwf	??_myISR
   769  0060                     u46_27:
   770  0060  0BF9               	decfsz	??_myISR,f
   771  0061  2860               	goto	u46_27
   772  0062  0000               	nop
   773  0063                     i1l903:
   774                           
   775                           ;main.c: 66:         ADCON0bits.GO_nDONE = 1;
   776  0063  1283               	bcf	3,5	;RP0=0, select bank0
   777  0064  1303               	bcf	3,6	;RP1=0, select bank0
   778  0065  149F               	bsf	31,1	;volatile
   779  0066                     i1l905:
   780                           
   781                           ;main.c: 67:         PIR1bits.ADIF = 0;
   782  0066  130C               	bcf	12,6	;volatile
   783  0067                     i1l907:
   784                           
   785                           ;main.c: 70:     if (INTCONbits.T0IE == 1 && INTCONbits.T0IF ==1){
   786  0067  1E8B               	btfss	11,5	;volatile
   787  0068  286A               	goto	u39_21
   788  0069  286B               	goto	u39_20
   789  006A                     u39_21:
   790  006A  2888               	goto	i1l74
   791  006B                     u39_20:
   792  006B                     i1l909:
   793  006B  1D0B               	btfss	11,2	;volatile
   794  006C  286E               	goto	u40_21
   795  006D  286F               	goto	u40_20
   796  006E                     u40_21:
   797  006E  2888               	goto	i1l74
   798  006F                     u40_20:
   799  006F                     i1l911:
   800                           
   801                           ;main.c: 71:         timer0_count = 0;
   802  006F  01B2               	clrf	_timer0_count	;volatile
   803  0070                     i1l913:
   804                           
   805                           ;main.c: 72:         PORTEbits.RE1 = PORTEbits.RE0;
   806  0070  1809               	btfsc	9,0	;volatile
   807  0071  2873               	goto	u41_21
   808  0072  2877               	goto	u41_20
   809  0073                     u41_21:
   810  0073  1283               	bcf	3,5	;RP0=0, select bank0
   811  0074  1303               	bcf	3,6	;RP1=0, select bank0
   812  0075  1489               	bsf	9,1	;volatile
   813  0076  287A               	goto	u42_24
   814  0077                     u41_20:
   815  0077  1283               	bcf	3,5	;RP0=0, select bank0
   816  0078  1303               	bcf	3,6	;RP1=0, select bank0
   817  0079  1089               	bcf	9,1	;volatile
   818  007A                     u42_24:
   819  007A                     i1l915:
   820                           
   821                           ;main.c: 73:         PORTEbits.RE0 = !PORTEbits.RE1;
   822  007A  1003               	clrc
   823  007B  1C89               	btfss	9,1	;volatile
   824  007C  1403               	setc
   825  007D  1803               	btfsc	3,0
   826  007E  2880               	goto	u43_21
   827  007F  2884               	goto	u43_20
   828  0080                     u43_21:
   829  0080  1283               	bcf	3,5	;RP0=0, select bank0
   830  0081  1303               	bcf	3,6	;RP1=0, select bank0
   831  0082  1409               	bsf	9,0	;volatile
   832  0083  2887               	goto	u44_24
   833  0084                     u43_20:
   834  0084  1283               	bcf	3,5	;RP0=0, select bank0
   835  0085  1303               	bcf	3,6	;RP1=0, select bank0
   836  0086  1009               	bcf	9,0	;volatile
   837  0087                     u44_24:
   838  0087                     i1l917:
   839                           
   840                           ;main.c: 74:         INTCONbits.T0IF = 0;
   841  0087  110B               	bcf	11,2	;volatile
   842  0088                     i1l74:
   843  0088  087C               	movf	??_myISR+3,w
   844  0089  008A               	movwf	10
   845  008A  0E7B               	swapf	??_myISR+2,w
   846  008B  0083               	movwf	3
   847  008C  0EFE               	swapf	btemp,f
   848  008D  0E7E               	swapf	btemp,w
   849  008E  0009               	retfie
   850  008F                     __end_of_myISR:
   851                           
   852                           	psect	intentry
   853  0004                     __pintentry:	
   854                           ;incstack = 0
   855                           ; Regs used in _myISR: [wreg+status,2+status,0+pclath+cstack]
   856                           
   857  0004                     interrupt_function:
   858  007E                     saved_w	set	btemp
   859  0004  00FE               	movwf	btemp
   860  0005  0E03               	swapf	3,w
   861  0006  00FB               	movwf	??_myISR+2
   862  0007  080A               	movf	10,w
   863  0008  00FC               	movwf	??_myISR+3
   864  0009  120A  118A  2825   	ljmp	_myISR
   865                           
   866                           	psect	text3
   867  008F                     __ptext3:	
   868 ;; *************** function ___awdiv *****************
   869 ;; Defined at:
   870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  divisor         2    0[COMMON] int 
   873 ;;  dividend        2    2[COMMON] int 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  quotient        2    7[COMMON] int 
   876 ;;  sign            1    6[COMMON] unsigned char 
   877 ;;  counter         1    5[COMMON] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  2    0[COMMON] int 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         4       0       0       0       0
   888 ;;      Locals:         4       0       0       0       0
   889 ;;      Temps:          1       0       0       0       0
   890 ;;      Totals:         9       0       0       0       0
   891 ;;Total ram usage:        9 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_myISR
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function ___awdiv
   902  008F                     ___awdiv:
   903  008F                     i1l837:	
   904                           ;incstack = 0
   905                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   906                           
   907  008F  01F6               	clrf	___awdiv@sign
   908  0090                     i1l839:
   909  0090  1FF1               	btfss	___awdiv@divisor+1,7
   910  0091  2893               	goto	u23_21
   911  0092  2894               	goto	u23_20
   912  0093                     u23_21:
   913  0093  289B               	goto	i1l845
   914  0094                     u23_20:
   915  0094                     i1l841:
   916  0094  09F0               	comf	___awdiv@divisor,f
   917  0095  09F1               	comf	___awdiv@divisor+1,f
   918  0096  0AF0               	incf	___awdiv@divisor,f
   919  0097  1903               	skipnz
   920  0098  0AF1               	incf	___awdiv@divisor+1,f
   921  0099                     i1l843:
   922  0099  01F6               	clrf	___awdiv@sign
   923  009A  0AF6               	incf	___awdiv@sign,f
   924  009B                     i1l845:
   925  009B  1FF3               	btfss	___awdiv@dividend+1,7
   926  009C  289E               	goto	u24_21
   927  009D  289F               	goto	u24_20
   928  009E                     u24_21:
   929  009E  28A8               	goto	i1l851
   930  009F                     u24_20:
   931  009F                     i1l847:
   932  009F  09F2               	comf	___awdiv@dividend,f
   933  00A0  09F3               	comf	___awdiv@dividend+1,f
   934  00A1  0AF2               	incf	___awdiv@dividend,f
   935  00A2  1903               	skipnz
   936  00A3  0AF3               	incf	___awdiv@dividend+1,f
   937  00A4                     i1l849:
   938  00A4  3001               	movlw	1
   939  00A5  00F4               	movwf	??___awdiv
   940  00A6  0874               	movf	??___awdiv,w
   941  00A7  06F6               	xorwf	___awdiv@sign,f
   942  00A8                     i1l851:
   943  00A8  01F7               	clrf	___awdiv@quotient
   944  00A9  01F8               	clrf	___awdiv@quotient+1
   945  00AA                     i1l853:
   946  00AA  0870               	movf	___awdiv@divisor,w
   947  00AB  0471               	iorwf	___awdiv@divisor+1,w
   948  00AC  1903               	btfsc	3,2
   949  00AD  28AF               	goto	u25_21
   950  00AE  28B0               	goto	u25_20
   951  00AF                     u25_21:
   952  00AF  28E7               	goto	i1l873
   953  00B0                     u25_20:
   954  00B0                     i1l855:
   955  00B0  01F5               	clrf	___awdiv@counter
   956  00B1  0AF5               	incf	___awdiv@counter,f
   957  00B2  28BE               	goto	i1l861
   958  00B3                     i1l857:
   959  00B3  3001               	movlw	1
   960  00B4                     u26_25:
   961  00B4  1003               	clrc
   962  00B5  0DF0               	rlf	___awdiv@divisor,f
   963  00B6  0DF1               	rlf	___awdiv@divisor+1,f
   964  00B7  3EFF               	addlw	-1
   965  00B8  1D03               	skipz
   966  00B9  28B4               	goto	u26_25
   967  00BA                     i1l859:
   968  00BA  3001               	movlw	1
   969  00BB  00F4               	movwf	??___awdiv
   970  00BC  0874               	movf	??___awdiv,w
   971  00BD  07F5               	addwf	___awdiv@counter,f
   972  00BE                     i1l861:
   973  00BE  1FF1               	btfss	___awdiv@divisor+1,7
   974  00BF  28C1               	goto	u27_21
   975  00C0  28C2               	goto	u27_20
   976  00C1                     u27_21:
   977  00C1  28B3               	goto	i1l857
   978  00C2                     u27_20:
   979  00C2                     i1l863:
   980  00C2  3001               	movlw	1
   981  00C3                     u28_25:
   982  00C3  1003               	clrc
   983  00C4  0DF7               	rlf	___awdiv@quotient,f
   984  00C5  0DF8               	rlf	___awdiv@quotient+1,f
   985  00C6  3EFF               	addlw	-1
   986  00C7  1D03               	skipz
   987  00C8  28C3               	goto	u28_25
   988  00C9  0871               	movf	___awdiv@divisor+1,w
   989  00CA  0273               	subwf	___awdiv@dividend+1,w
   990  00CB  1D03               	skipz
   991  00CC  28CF               	goto	u29_25
   992  00CD  0870               	movf	___awdiv@divisor,w
   993  00CE  0272               	subwf	___awdiv@dividend,w
   994  00CF                     u29_25:
   995  00CF  1C03               	skipc
   996  00D0  28D2               	goto	u29_21
   997  00D1  28D3               	goto	u29_20
   998  00D2                     u29_21:
   999  00D2  28DA               	goto	i1l869
  1000  00D3                     u29_20:
  1001  00D3                     i1l865:
  1002  00D3  0870               	movf	___awdiv@divisor,w
  1003  00D4  02F2               	subwf	___awdiv@dividend,f
  1004  00D5  0871               	movf	___awdiv@divisor+1,w
  1005  00D6  1C03               	skipc
  1006  00D7  03F3               	decf	___awdiv@dividend+1,f
  1007  00D8  02F3               	subwf	___awdiv@dividend+1,f
  1008  00D9                     i1l867:
  1009  00D9  1477               	bsf	___awdiv@quotient,0
  1010  00DA                     i1l869:
  1011  00DA  3001               	movlw	1
  1012  00DB                     u30_25:
  1013  00DB  1003               	clrc
  1014  00DC  0CF1               	rrf	___awdiv@divisor+1,f
  1015  00DD  0CF0               	rrf	___awdiv@divisor,f
  1016  00DE  3EFF               	addlw	-1
  1017  00DF  1D03               	skipz
  1018  00E0  28DB               	goto	u30_25
  1019  00E1                     i1l871:
  1020  00E1  3001               	movlw	1
  1021  00E2  02F5               	subwf	___awdiv@counter,f
  1022  00E3  1D03               	btfss	3,2
  1023  00E4  28E6               	goto	u31_21
  1024  00E5  28E7               	goto	u31_20
  1025  00E6                     u31_21:
  1026  00E6  28C2               	goto	i1l863
  1027  00E7                     u31_20:
  1028  00E7                     i1l873:
  1029  00E7  0876               	movf	___awdiv@sign,w
  1030  00E8  1903               	btfsc	3,2
  1031  00E9  28EB               	goto	u32_21
  1032  00EA  28EC               	goto	u32_20
  1033  00EB                     u32_21:
  1034  00EB  28F1               	goto	i1l877
  1035  00EC                     u32_20:
  1036  00EC                     i1l875:
  1037  00EC  09F7               	comf	___awdiv@quotient,f
  1038  00ED  09F8               	comf	___awdiv@quotient+1,f
  1039  00EE  0AF7               	incf	___awdiv@quotient,f
  1040  00EF  1903               	skipnz
  1041  00F0  0AF8               	incf	___awdiv@quotient+1,f
  1042  00F1                     i1l877:
  1043  00F1  0878               	movf	___awdiv@quotient+1,w
  1044  00F2  00F1               	movwf	?___awdiv+1
  1045  00F3  0877               	movf	___awdiv@quotient,w
  1046  00F4  00F0               	movwf	?___awdiv
  1047  00F5                     i1l324:
  1048  00F5  0008               	return
  1049  00F6                     __end_of___awdiv:
  1050  007E                     btemp	set	126	;btemp
  1051  007E                     wtemp0	set	126
  1052                           
  1053                           	psect	config
  1054                           
  1055                           ;Config register CONFIG1 @ 0x2007
  1056                           ;	Oscillator Selection bits
  1057                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1058                           ;	Watchdog Timer Enable bit
  1059                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1060                           ;	Power-up Timer Enable bit
  1061                           ;	PWRTE = OFF, PWRT disabled
  1062                           ;	RE3/MCLR pin function select bit
  1063                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1064                           ;	Code Protection bit
  1065                           ;	CP = OFF, Program memory code protection is disabled
  1066                           ;	Data Code Protection bit
  1067                           ;	CPD = OFF, Data memory code protection is disabled
  1068                           ;	Brown Out Reset Selection bits
  1069                           ;	BOREN = OFF, BOR disabled
  1070                           ;	Internal External Switchover bit
  1071                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1072                           ;	Fail-Safe Clock Monitor Enabled bit
  1073                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1074                           ;	Low Voltage Programming Enable bit
  1075                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1076                           ;	In-Circuit Debugger Mode bit
  1077                           ;	DEBUG = 0x1, unprogrammed default
  1078  2007                     	org	8199
  1079  2007  20F1               	dw	8433
  1080                           
  1081                           ;Config register CONFIG2 @ 0x2008
  1082                           ;	Brown-out Reset Selection bit
  1083                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1084                           ;	Flash Program Memory Self Write Enable bits
  1085                           ;	WRT = OFF, Write protection off
  1086  2008                     	org	8200
  1087  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      1      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    _myISR->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                4     4      0     452
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _myISR (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 23:25:28 2021

                      pc 0002                       l77 0134          _reference_count 007D  
           ___awdiv@sign 0076                       fsr 0004                      l811 0109  
                    l821 0119                      l813 010B                      l805 00F6  
                    l831 012B                      l823 0120                      l815 010F  
                    l807 0100                      l833 012E                      l825 0124  
                    l817 0113                      l809 0101                      l921 013A  
                    l835 0131                      l827 0125                      l819 0116  
                    l931 0149                      l923 0141                      l829 0128  
                    l925 0144                      l927 0145                      l919 0135  
                    l929 0147                      u457 013E                      fsr0 0004  
                    indf 0000                     _IOCB 0096                     _PIE1 008C  
                   _PIR1 000C                     i1l74 0088                     _TMR0 0001  
                   _main 0135                     btemp 007E                     start 000C  
                  ?_main 0070          __end_of___awdiv 00F6                    _ANSEL 0188  
        ___awdiv@divisor 0070                    i1l324 00F5                    i1l901 005E  
                  i1l911 006F                    i1l903 0063                    i1l841 0094  
                  i1l913 0070                    i1l905 0066                    i1l851 00A8  
                  i1l843 0099                    i1l915 007A                    i1l907 0067  
                  i1l861 00BE                    i1l853 00AA                    i1l845 009B  
                  i1l837 008F                    i1l917 0087                    i1l909 006B  
                  i1l871 00E1                    i1l863 00C2                    i1l855 00B0  
                  i1l847 009F                    i1l839 0090                    i1l865 00D3  
                  i1l857 00B3                    i1l873 00E7                    i1l849 00A4  
                  i1l881 0025                    i1l875 00EC                    i1l867 00D9  
                  i1l859 00BA                    i1l891 003B                    i1l883 0029  
                  i1l877 00F1                    i1l869 00DA                    i1l893 003D  
                  i1l885 002D                    i1l887 0033                    i1l895 003E  
                  i1l897 0044                    i1l889 0037                    i1l899 0048  
        ___awdiv@counter 0075                    u30_25 00DB                    u31_20 00E7  
                  u23_20 0094                    u31_21 00E6                    u23_21 0093  
                  u32_20 00EC                    u24_20 009F                    u40_20 006F  
                  u32_21 00EB                    u24_21 009E                    u40_21 006E  
                  u25_20 00B0                    u41_20 0077                    u33_20 0029  
                  u25_21 00AF                    u41_21 0073                    u33_21 0028  
                  u34_20 002D                    u34_21 002C                    u42_24 007A  
                  u26_25 00B4                    u27_20 00C2                    u43_20 0084  
                  u35_20 0033                    u27_21 00C1                    u43_21 0080  
                  u35_21 0032                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u36_20 003B                    u36_21 003A                    u44_24 0087  
                  u28_25 00C3                    u29_20 00D3                    u37_20 0044  
                  u29_21 00D2                    u37_21 0043                    u29_25 00CF  
                  u38_20 0048                    u38_21 0047                    u46_27 0060  
                  u39_20 006B                    u39_21 006A                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _myISR 0025                    _setup 00F6  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0153                   ??_main 0033  
                 _ADCON0 001F                   _ADCON1 009F                   ?_myISR 0070  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0072  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
              ??___awdiv 0074         ___awdiv@quotient 0077                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0070             __pidataBANK0 0166  
          __end_of_myISR 008F            __end_of_setup 0135                  ??_myISR 0079  
                ??_setup 0033               __pbssBANK0 0030               __pmaintext 0135  
             __pintentry 0004                  ___awdiv 008F                  __ptext1 00F6  
                __ptext2 0025                  __ptext3 008F     end_of_initialization 0021  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 000F  
             init_fetch0 0153              __pdataBANK0 0020              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0033                 ?___awdiv 0070  
         __size_of_myISR 006A           __size_of_setup 003F        interrupt_function 0004  
               _PIR1bits 000C               _ADCON0bits 001F         __size_of___awdiv 0067  
          __size_of_main 001E             _timer0_count 0032               _INTCONbits 000B  
               init_ram0 0157                 intlevel1 0000               _OPTION_REG 0081  
          _display_array 0020            _display_count 0030  
