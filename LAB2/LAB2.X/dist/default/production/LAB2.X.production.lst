

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 23:02:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  012F                     __pidataBANK0:
   210                           
   211                           ;initializer for _display_array
   212  012F  343F               	retlw	63
   213  0130  3406               	retlw	6
   214  0131  345B               	retlw	91
   215  0132  344F               	retlw	79
   216  0133  3466               	retlw	102
   217  0134  346D               	retlw	109
   218  0135  347D               	retlw	125
   219  0136  3407               	retlw	7
   220  0137  347F               	retlw	127
   221  0138  346F               	retlw	111
   222  0139  3477               	retlw	119
   223  013A  347C               	retlw	124
   224  013B  3439               	retlw	57
   225  013C  345E               	retlw	94
   226  013D  3479               	retlw	121
   227  013E  3471               	retlw	113
   228  0001                     _TMR0	set	1
   229  0009                     _PORTE	set	9
   230  0008                     _PORTD	set	8
   231  0007                     _PORTC	set	7
   232  0006                     _PORTB	set	6
   233  0005                     _PORTA	set	5
   234  001F                     _ADCON0	set	31
   235  000C                     _PIR1	set	12
   236  000B                     _INTCON	set	11
   237  0009                     _PORTEbits	set	9
   238  001E                     _ADRESH	set	30
   239  001F                     _ADCON0bits	set	31
   240  000C                     _PIR1bits	set	12
   241  0006                     _PORTBbits	set	6
   242  000B                     _INTCONbits	set	11
   243  0089                     _TRISE	set	137
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0096                     _IOCB	set	150
   247  0086                     _TRISB	set	134
   248  0085                     _TRISA	set	133
   249  0081                     _OPTION_REG	set	129
   250  009E                     _ADRESL	set	158
   251  009F                     _ADCON1	set	159
   252  008C                     _PIE1	set	140
   253  0189                     _ANSELH	set	393
   254  0188                     _ANSEL	set	392
   255                           
   256                           	psect	cinit
   257  000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260  000F                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK0
   263  000F  1383               	bcf	3,7	;select IRP bank0
   264  0010  3030               	movlw	low (__pdataBANK0+16)
   265  0011  00FD               	movwf	btemp+-1
   266  0012  3001               	movlw	high __pidataBANK0
   267  0013  00FE               	movwf	btemp
   268  0014  302F               	movlw	low __pidataBANK0
   269  0015  00FF               	movwf	btemp+1
   270  0016  3020               	movlw	low __pdataBANK0
   271  0017  0084               	movwf	4
   272  0018  120A  118A  2120  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Clear objects allocated to COMMON
   275  001D  01F8               	clrf	__pbssCOMMON& (0+127)
   276  001E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   277  001F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   278  0020  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   279  0021  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   280  0022                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  0022                     __end_of__initialization:
   284  0022  0183               	clrf	3
   285  0023  120A  118A  289C   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0078                     __pbssCOMMON:
   289  0078                     _first_display:
   290  0078                     	ds	1
   291  0079                     _second_display:
   292  0079                     	ds	1
   293  007A                     _timer0_count:
   294  007A                     	ds	1
   295  007B                     _display_count:
   296  007B                     	ds	1
   297  007C                     _reference_count:
   298  007C                     	ds	1
   299                           
   300                           	psect	dataBANK0
   301  0020                     __pdataBANK0:
   302  0020                     _display_array:
   303  0020                     	ds	16
   304                           
   305                           	psect	inittext
   306  011C                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309  011C  087E               	movf	btemp,w
   310  011D  008A               	movwf	10
   311  011E  087F               	movf	btemp+1,w
   312  011F  0082               	movwf	2
   313  0120                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320  0120  120A  118A  211C  120A  118A  	fcall	init_fetch0
   321  0125  0080               	movwf	0
   322  0126  0A84               	incf	4,f
   323  0127  0804               	movf	4,w
   324  0128  067D               	xorwf	btemp+-1,w
   325  0129  1903               	btfsc	3,2
   326  012A  3400               	retlw	0
   327  012B  0AFF               	incf	btemp+1,f
   328  012C  1903               	btfsc	3,2
   329  012D  0AFE               	incf	btemp,f
   330  012E  2920               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_myISR:
   335  0070                     ??_myISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_setup:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	4
   347  0074                     ??_setup:
   348  0074                     ??_main:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 1 bytes @ 0x4
   353  0074                     	ds	4
   354                           
   355                           	psect	maintext
   356  009C                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 126 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          4       0       0       0       0
   379 ;;      Totals:         4       0       0       0       0
   380 ;;Total ram usage:        4 bytes
   381 ;; Hardware stack levels required when called:    2
   382 ;; This function calls:
   383 ;;		_setup
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _main
   391  009C                     _main:
   392  009C                     l765:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;main.c: 127:     setup();
   398  009C  120A  118A  20DD  120A  118A  	fcall	_setup
   399  00A1                     l767:
   400                           
   401                           ;main.c: 128:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   402  00A1  3010               	movlw	16
   403  00A2  00F4               	movwf	??_main
   404  00A3                     u177:
   405  00A3  0BF4               	decfsz	??_main,f
   406  00A4  28A3               	goto	u177
   407  00A5  0000               	nop
   408  00A6                     l769:
   409                           
   410                           ;main.c: 129:     ADCON0bits.GO_nDONE = 1;
   411  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   412  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   413  00A8  149F               	bsf	31,1	;volatile
   414  00A9                     l771:
   415                           
   416                           ;main.c: 130:     PORTEbits.RE0 = 1;
   417  00A9  1409               	bsf	9,0	;volatile
   418  00AA                     l773:
   419                           
   420                           ;main.c: 131:     TMR0 = 212;
   421  00AA  30D4               	movlw	212
   422  00AB  0081               	movwf	1	;volatile
   423  00AC                     l775:
   424                           
   425                           ;main.c: 133:         PORTC = reference_count;
   426  00AC  087C               	movf	_reference_count,w	;volatile
   427  00AD  0087               	movwf	7	;volatile
   428  00AE                     l777:
   429                           
   430                           ;main.c: 134:         PORTD = display_array[display_count];
   431  00AE  087B               	movf	_display_count,w
   432  00AF  3E20               	addlw	(low (_display_array| 0))& (0+255)
   433  00B0  0084               	movwf	4
   434  00B1  1383               	bcf	3,7	;select IRP bank0
   435  00B2  0800               	movf	0,w
   436  00B3  0088               	movwf	8	;volatile
   437  00B4                     l779:
   438                           
   439                           ;main.c: 135:         if (reference_count < (second_display + (first_display << 4))){
   440  00B4  0878               	movf	_first_display,w	;volatile
   441  00B5  00F4               	movwf	??_main
   442  00B6  01F5               	clrf	??_main+1
   443  00B7  0EF4               	swapf	??_main,f
   444  00B8  0EF5               	swapf	??_main+1,f
   445  00B9  30F0               	movlw	240
   446  00BA  05F5               	andwf	??_main+1,f
   447  00BB  0874               	movf	??_main,w
   448  00BC  390F               	andlw	15
   449  00BD  04F5               	iorwf	??_main+1,f
   450  00BE  30F0               	movlw	240
   451  00BF  05F4               	andwf	??_main,f
   452  00C0  0879               	movf	_second_display,w	;volatile
   453  00C1  0774               	addwf	??_main,w
   454  00C2  00F6               	movwf	??_main+2
   455  00C3  0875               	movf	??_main+1,w
   456  00C4  1803               	skipnc
   457  00C5  0A75               	incf	??_main+1,w
   458  00C6  00F7               	movwf	??_main+3
   459  00C7  0877               	movf	??_main+3,w
   460  00C8  3A80               	xorlw	128
   461  00C9  3C80               	sublw	128
   462  00CA  1D03               	skipz
   463  00CB  28CE               	goto	u165
   464  00CC  0876               	movf	??_main+2,w
   465  00CD  027C               	subwf	_reference_count,w	;volatile
   466  00CE                     u165:
   467  00CE  1803               	skipnc
   468  00CF  28D1               	goto	u161
   469  00D0  28D2               	goto	u160
   470  00D1                     u161:
   471  00D1  28D6               	goto	l89
   472  00D2                     u160:
   473  00D2                     l781:
   474                           
   475                           ;main.c: 136:             PORTEbits.RE2 = 1;
   476  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   477  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   478  00D4  1509               	bsf	9,2	;volatile
   479                           
   480                           ;main.c: 137:         }
   481  00D5  28AC               	goto	l775
   482  00D6                     l89:	
   483                           ;main.c: 138:         else{
   484                           
   485                           
   486                           ;main.c: 139:            PORTEbits.RE2 = 0;
   487  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   488  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   489  00D8  1109               	bcf	9,2	;volatile
   490  00D9  28AC               	goto	l775
   491  00DA  120A  118A  280C   	ljmp	start
   492  00DD                     __end_of_main:
   493                           
   494                           	psect	text1
   495  00DD                     __ptext1:	
   496 ;; *************** function _setup *****************
   497 ;; Defined at:
   498 ;;		line 90 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:    1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _setup
   528  00DD                     _setup:
   529  00DD                     l685:	
   530                           ;incstack = 0
   531                           ; Regs used in _setup: [wreg+status,2]
   532                           
   533                           
   534                           ;main.c: 92:     INTCON = 0b11101000;
   535  00DD  30E8               	movlw	232
   536  00DE  008B               	movwf	11	;volatile
   537                           
   538                           ;main.c: 93:     PIR1 = 0b01000000;
   539  00DF  3040               	movlw	64
   540  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   541  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   542  00E2  008C               	movwf	12	;volatile
   543                           
   544                           ;main.c: 94:     PIE1 = 0b01000000;
   545  00E3  3040               	movlw	64
   546  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   547  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   548  00E6  008C               	movwf	12	;volatile
   549  00E7                     l687:
   550                           
   551                           ;main.c: 95:     ADCON1 = 0;
   552  00E7  019F               	clrf	31	;volatile
   553  00E8                     l689:
   554                           
   555                           ;main.c: 96:     ADCON0 = 0b10000001;
   556  00E8  3081               	movlw	129
   557  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   558  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   559  00EB  009F               	movwf	31	;volatile
   560                           
   561                           ;main.c: 98:     ADRESH = 0;
   562  00EC  019E               	clrf	30	;volatile
   563                           
   564                           ;main.c: 99:     ADRESL = 0;
   565  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   566  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   567  00EF  019E               	clrf	30	;volatile
   568  00F0                     l691:
   569                           
   570                           ;main.c: 101:     OPTION_REG = 0b00000110;
   571  00F0  3006               	movlw	6
   572  00F1  0081               	movwf	1	;volatile
   573  00F2                     l693:
   574                           
   575                           ;main.c: 103:     ANSEL = 0b00000001;
   576  00F2  3001               	movlw	1
   577  00F3  1683               	bsf	3,5	;RP0=1, select bank3
   578  00F4  1703               	bsf	3,6	;RP1=1, select bank3
   579  00F5  0088               	movwf	8	;volatile
   580  00F6                     l695:
   581                           
   582                           ;main.c: 104:     TRISA = 0b00000001;
   583  00F6  3001               	movlw	1
   584  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   585  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   586  00F9  0085               	movwf	5	;volatile
   587  00FA                     l697:
   588                           
   589                           ;main.c: 105:     PORTA = 0;
   590  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   591  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   592  00FC  0185               	clrf	5	;volatile
   593  00FD                     l699:
   594                           
   595                           ;main.c: 108:     ANSELH = 0;
   596  00FD  1683               	bsf	3,5	;RP0=1, select bank3
   597  00FE  1703               	bsf	3,6	;RP1=1, select bank3
   598  00FF  0189               	clrf	9	;volatile
   599  0100                     l701:
   600                           
   601                           ;main.c: 109:     TRISB = 0b00000011;
   602  0100  3003               	movlw	3
   603  0101  1683               	bsf	3,5	;RP0=1, select bank1
   604  0102  1303               	bcf	3,6	;RP1=0, select bank1
   605  0103  0086               	movwf	6	;volatile
   606                           
   607                           ;main.c: 110:     PORTB = 0;
   608  0104  1283               	bcf	3,5	;RP0=0, select bank0
   609  0105  1303               	bcf	3,6	;RP1=0, select bank0
   610  0106  0186               	clrf	6	;volatile
   611  0107                     l703:
   612                           
   613                           ;main.c: 111:     IOCB = 0b00000011;
   614  0107  3003               	movlw	3
   615  0108  1683               	bsf	3,5	;RP0=1, select bank1
   616  0109  1303               	bcf	3,6	;RP1=0, select bank1
   617  010A  0096               	movwf	22	;volatile
   618  010B                     l705:
   619                           
   620                           ;main.c: 113:     TRISC = 0;
   621  010B  0187               	clrf	7	;volatile
   622  010C                     l707:
   623                           
   624                           ;main.c: 114:     PORTC = 0;
   625  010C  1283               	bcf	3,5	;RP0=0, select bank0
   626  010D  1303               	bcf	3,6	;RP1=0, select bank0
   627  010E  0187               	clrf	7	;volatile
   628  010F                     l709:
   629                           
   630                           ;main.c: 116:     TRISD = 0;
   631  010F  1683               	bsf	3,5	;RP0=1, select bank1
   632  0110  1303               	bcf	3,6	;RP1=0, select bank1
   633  0111  0188               	clrf	8	;volatile
   634  0112                     l711:
   635                           
   636                           ;main.c: 117:     PORTD = 0;
   637  0112  1283               	bcf	3,5	;RP0=0, select bank0
   638  0113  1303               	bcf	3,6	;RP1=0, select bank0
   639  0114  0188               	clrf	8	;volatile
   640  0115                     l713:
   641                           
   642                           ;main.c: 119:     TRISE = 0;
   643  0115  1683               	bsf	3,5	;RP0=1, select bank1
   644  0116  1303               	bcf	3,6	;RP1=0, select bank1
   645  0117  0189               	clrf	9	;volatile
   646  0118                     l715:
   647                           
   648                           ;main.c: 120:     PORTE = 0;
   649  0118  1283               	bcf	3,5	;RP0=0, select bank0
   650  0119  1303               	bcf	3,6	;RP1=0, select bank0
   651  011A  0189               	clrf	9	;volatile
   652  011B                     l83:
   653  011B  0008               	return
   654  011C                     __end_of_setup:
   655                           
   656                           	psect	text2
   657  0026                     __ptext2:	
   658 ;; *************** function _myISR *****************
   659 ;; Defined at:
   660 ;;		line 53 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0
   676 ;;      Temps:          4       0       0       0       0
   677 ;;      Totals:         4       0       0       0       0
   678 ;;Total ram usage:        4 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		Interrupt level 1
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _myISR
   689  0026                     _myISR:
   690  0026                     i1l717:
   691                           
   692                           ;main.c: 55:     if (INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1){
   693  0026  1D8B               	btfss	11,3	;volatile
   694  0027  2829               	goto	u1_21
   695  0028  282A               	goto	u1_20
   696  0029                     u1_21:
   697  0029  283F               	goto	i1l731
   698  002A                     u1_20:
   699  002A                     i1l719:
   700  002A  1C0B               	btfss	11,0	;volatile
   701  002B  282D               	goto	u2_21
   702  002C  282E               	goto	u2_20
   703  002D                     u2_21:
   704  002D  283F               	goto	i1l731
   705  002E                     u2_20:
   706  002E                     i1l721:
   707                           
   708                           ;main.c: 56:         if (PORTBbits.RB0 == 0){
   709  002E  1283               	bcf	3,5	;RP0=0, select bank0
   710  002F  1303               	bcf	3,6	;RP1=0, select bank0
   711  0030  1806               	btfsc	6,0	;volatile
   712  0031  2833               	goto	u3_21
   713  0032  2834               	goto	u3_20
   714  0033                     u3_21:
   715  0033  2838               	goto	i1l725
   716  0034                     u3_20:
   717  0034                     i1l723:
   718                           
   719                           ;main.c: 57:             reference_count++;
   720  0034  3001               	movlw	1
   721  0035  00F0               	movwf	??_myISR
   722  0036  0870               	movf	??_myISR,w
   723  0037  07FC               	addwf	_reference_count,f	;volatile
   724  0038                     i1l725:
   725                           
   726                           ;main.c: 59:         if (PORTBbits.RB1 == 0){
   727  0038  1886               	btfsc	6,1	;volatile
   728  0039  283B               	goto	u4_21
   729  003A  283C               	goto	u4_20
   730  003B                     u4_21:
   731  003B  283E               	goto	i1l729
   732  003C                     u4_20:
   733  003C                     i1l727:
   734                           
   735                           ;main.c: 60:             reference_count--;
   736  003C  3001               	movlw	1
   737  003D  02FC               	subwf	_reference_count,f	;volatile
   738  003E                     i1l729:
   739                           
   740                           ;main.c: 62:         INTCONbits.RBIF=0;
   741  003E  100B               	bcf	11,0	;volatile
   742  003F                     i1l731:
   743                           
   744                           ;main.c: 65:     if (PIR1bits.ADIF == 1 && ADCON0bits.GO_nDONE == 0){
   745  003F  1283               	bcf	3,5	;RP0=0, select bank0
   746  0040  1303               	bcf	3,6	;RP1=0, select bank0
   747  0041  1F0C               	btfss	12,6	;volatile
   748  0042  2844               	goto	u5_21
   749  0043  2845               	goto	u5_20
   750  0044                     u5_21:
   751  0044  2864               	goto	i1l745
   752  0045                     u5_20:
   753  0045                     i1l733:
   754  0045  189F               	btfsc	31,1	;volatile
   755  0046  2848               	goto	u6_21
   756  0047  2849               	goto	u6_20
   757  0048                     u6_21:
   758  0048  2864               	goto	i1l745
   759  0049                     u6_20:
   760  0049                     i1l735:
   761                           
   762                           ;main.c: 66:         second_display = (ADRESH & 0xF0)>>4;
   763  0049  081E               	movf	30,w	;volatile
   764  004A  00F0               	movwf	??_myISR
   765  004B  3004               	movlw	4
   766  004C                     u7_25:
   767  004C  1003               	clrc
   768  004D  0CF0               	rrf	??_myISR,f
   769  004E  3EFF               	addlw	-1
   770  004F  1D03               	skipz
   771  0050  284C               	goto	u7_25
   772  0051  0870               	movf	??_myISR,w
   773  0052  390F               	andlw	15
   774  0053  00F1               	movwf	??_myISR+1
   775  0054  0871               	movf	??_myISR+1,w
   776  0055  00F9               	movwf	_second_display	;volatile
   777  0056                     i1l737:
   778                           
   779                           ;main.c: 67:         first_display = (ADRESH & 0x0F);
   780  0056  081E               	movf	30,w	;volatile
   781  0057  390F               	andlw	15
   782  0058  00F0               	movwf	??_myISR
   783  0059  0870               	movf	??_myISR,w
   784  005A  00F8               	movwf	_first_display	;volatile
   785  005B                     i1l739:
   786                           
   787                           ;main.c: 68:         _delay((unsigned long)((25)*(8000000/4000000.0)));
   788  005B  3010               	movlw	16
   789  005C  00F0               	movwf	??_myISR
   790  005D                     u18_27:
   791  005D  0BF0               	decfsz	??_myISR,f
   792  005E  285D               	goto	u18_27
   793  005F  0000               	nop
   794  0060                     i1l741:
   795                           
   796                           ;main.c: 69:         ADCON0bits.GO_nDONE = 1;
   797  0060  1283               	bcf	3,5	;RP0=0, select bank0
   798  0061  1303               	bcf	3,6	;RP1=0, select bank0
   799  0062  149F               	bsf	31,1	;volatile
   800  0063                     i1l743:
   801                           
   802                           ;main.c: 70:         PIR1bits.ADIF = 0;
   803  0063  130C               	bcf	12,6	;volatile
   804  0064                     i1l745:
   805                           
   806                           ;main.c: 73:     if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1){
   807  0064  1E8B               	btfss	11,5	;volatile
   808  0065  2867               	goto	u8_21
   809  0066  2868               	goto	u8_20
   810  0067                     u8_21:
   811  0067  2895               	goto	i1l80
   812  0068                     u8_20:
   813  0068                     i1l747:
   814  0068  1D0B               	btfss	11,2	;volatile
   815  0069  286B               	goto	u9_21
   816  006A  286C               	goto	u9_20
   817  006B                     u9_21:
   818  006B  2895               	goto	i1l80
   819  006C                     u9_20:
   820  006C                     i1l749:
   821                           
   822                           ;main.c: 74:         PORTEbits.RE1 = PORTEbits.RE0;
   823  006C  1809               	btfsc	9,0	;volatile
   824  006D  286F               	goto	u10_21
   825  006E  2873               	goto	u10_20
   826  006F                     u10_21:
   827  006F  1283               	bcf	3,5	;RP0=0, select bank0
   828  0070  1303               	bcf	3,6	;RP1=0, select bank0
   829  0071  1489               	bsf	9,1	;volatile
   830  0072  2876               	goto	u11_24
   831  0073                     u10_20:
   832  0073  1283               	bcf	3,5	;RP0=0, select bank0
   833  0074  1303               	bcf	3,6	;RP1=0, select bank0
   834  0075  1089               	bcf	9,1	;volatile
   835  0076                     u11_24:
   836  0076                     i1l751:
   837                           
   838                           ;main.c: 75:         PORTEbits.RE0 = !PORTEbits.RE1;
   839  0076  1003               	clrc
   840  0077  1C89               	btfss	9,1	;volatile
   841  0078  1403               	setc
   842  0079  1803               	btfsc	3,0
   843  007A  287C               	goto	u12_21
   844  007B  2880               	goto	u12_20
   845  007C                     u12_21:
   846  007C  1283               	bcf	3,5	;RP0=0, select bank0
   847  007D  1303               	bcf	3,6	;RP1=0, select bank0
   848  007E  1409               	bsf	9,0	;volatile
   849  007F  2883               	goto	u13_24
   850  0080                     u12_20:
   851  0080  1283               	bcf	3,5	;RP0=0, select bank0
   852  0081  1303               	bcf	3,6	;RP1=0, select bank0
   853  0082  1009               	bcf	9,0	;volatile
   854  0083                     u13_24:
   855  0083                     i1l753:
   856                           
   857                           ;main.c: 76:         if (PORTEbits.RE0){
   858  0083  1C09               	btfss	9,0	;volatile
   859  0084  2886               	goto	u14_21
   860  0085  2887               	goto	u14_20
   861  0086                     u14_21:
   862  0086  288B               	goto	i1l757
   863  0087                     u14_20:
   864  0087                     i1l755:
   865                           
   866                           ;main.c: 77:             display_count = first_display;
   867  0087  0878               	movf	_first_display,w	;volatile
   868  0088  00F0               	movwf	??_myISR
   869  0089  0870               	movf	??_myISR,w
   870  008A  00FB               	movwf	_display_count	;volatile
   871  008B                     i1l757:
   872                           
   873                           ;main.c: 79:         if (PORTEbits.RE1){
   874  008B  1C89               	btfss	9,1	;volatile
   875  008C  288E               	goto	u15_21
   876  008D  288F               	goto	u15_20
   877  008E                     u15_21:
   878  008E  2893               	goto	i1l761
   879  008F                     u15_20:
   880  008F                     i1l759:
   881                           
   882                           ;main.c: 80:             display_count = second_display;
   883  008F  0879               	movf	_second_display,w	;volatile
   884  0090  00F0               	movwf	??_myISR
   885  0091  0870               	movf	??_myISR,w
   886  0092  00FB               	movwf	_display_count	;volatile
   887  0093                     i1l761:
   888                           
   889                           ;main.c: 82:         timer0_count = 0;
   890  0093  01FA               	clrf	_timer0_count	;volatile
   891  0094                     i1l763:
   892                           
   893                           ;main.c: 83:         INTCONbits.T0IF = 0;
   894  0094  110B               	bcf	11,2	;volatile
   895  0095                     i1l80:
   896  0095  0873               	movf	??_myISR+3,w
   897  0096  008A               	movwf	10
   898  0097  0E72               	swapf	??_myISR+2,w
   899  0098  0083               	movwf	3
   900  0099  0EFE               	swapf	btemp,f
   901  009A  0E7E               	swapf	btemp,w
   902  009B  0009               	retfie
   903  009C                     __end_of_myISR:
   904  007E                     btemp	set	126	;btemp
   905  007E                     wtemp0	set	126
   906                           
   907                           	psect	intentry
   908  0004                     __pintentry:	
   909                           ;incstack = 0
   910                           ; Regs used in _myISR: [wreg+status,2+status,0]
   911                           
   912  0004                     interrupt_function:
   913  007E                     saved_w	set	btemp
   914  0004  00FE               	movwf	btemp
   915  0005  0E03               	swapf	3,w
   916  0006  00F2               	movwf	??_myISR+2
   917  0007  080A               	movf	10,w
   918  0008  00F3               	movwf	??_myISR+3
   919  0009  120A  118A  2826   	ljmp	_myISR
   920                           
   921                           	psect	config
   922                           
   923                           ;Config register CONFIG1 @ 0x2007
   924                           ;	Oscillator Selection bits
   925                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   926                           ;	Watchdog Timer Enable bit
   927                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   928                           ;	Power-up Timer Enable bit
   929                           ;	PWRTE = OFF, PWRT disabled
   930                           ;	RE3/MCLR pin function select bit
   931                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   932                           ;	Code Protection bit
   933                           ;	CP = OFF, Program memory code protection is disabled
   934                           ;	Data Code Protection bit
   935                           ;	CPD = OFF, Data memory code protection is disabled
   936                           ;	Brown Out Reset Selection bits
   937                           ;	BOREN = OFF, BOR disabled
   938                           ;	Internal External Switchover bit
   939                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   940                           ;	Fail-Safe Clock Monitor Enabled bit
   941                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   942                           ;	Low Voltage Programming Enable bit
   943                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   944                           ;	In-Circuit Debugger Mode bit
   945                           ;	DEBUG = 0x1, unprogrammed default
   946  2007                     	org	8199
   947  2007  20F1               	dw	8433
   948                           
   949                           ;Config register CONFIG2 @ 0x2008
   950                           ;	Brown-out Reset Selection bit
   951                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   952                           ;	Flash Program Memory Self Write Enable bits
   953                           ;	WRT = OFF, Write protection off
   954  2008                     	org	8200
   955  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              4 COMMON     4     4      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 23:02:48 2021

                      pc 0002                       l83 011B          _reference_count 007C  
                     l89 00D6                       fsr 0004                      l701 0100  
                    l711 0112                      l703 0107                      l713 0115  
                    l705 010B                      l715 0118                      l707 010C  
                    l709 010F                      l691 00F0                      l771 00A9  
                    l693 00F2                      l685 00DD                      l781 00D2  
                    l773 00AA                      l765 009C                      l695 00F6  
                    l687 00E7                      l775 00AC                      l767 00A1  
                    l697 00FA                      l689 00E8                      l777 00AE  
                    l769 00A6                      l699 00FD                      l779 00B4  
                    u160 00D2                      u161 00D1                      u165 00CE  
                    u177 00A3                      fsr0 0004                      indf 0000  
                   _IOCB 0096                     _PIE1 008C                     i1l80 0095  
                   _PIR1 000C                     _TMR0 0001                     u1_20 002A  
                   u1_21 0029                     u2_20 002E                     u2_21 002D  
                   u3_20 0034                     u3_21 0033                     u4_20 003C  
                   u4_21 003B                     u5_20 0045                     u5_21 0044  
                   u6_20 0049                     u6_21 0048                     u7_25 004C  
                   u8_20 0068                     u8_21 0067                     u9_20 006C  
                   u9_21 006B                     _main 009C                     btemp 007E  
                   start 000C                    ?_main 0070                    _ANSEL 0188  
                  i1l721 002E                    i1l723 0034                    i1l731 003F  
                  i1l741 0060                    i1l733 0045                    i1l725 0038  
                  i1l717 0026                    i1l751 0076                    i1l743 0063  
                  i1l735 0049                    i1l727 003C                    i1l719 002A  
                  i1l761 0093                    i1l753 0083                    i1l737 0056  
                  i1l745 0064                    i1l729 003E                    i1l763 0094  
                  i1l755 0087                    i1l747 0068                    i1l739 005B  
                  i1l757 008B                    i1l749 006C                    i1l759 008F  
                  u10_20 0073                    u10_21 006F                    u11_24 0076  
                  u12_20 0080                    u12_21 007C                    u13_24 0083  
                  u14_20 0087                    u14_21 0086                    u15_20 008F  
                  u15_21 008E                    u18_27 005D                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _myISR 0026                    _setup 00DD                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00DD            _first_display 0078           _second_display 0079  
                 ??_main 0074                   _ADCON0 001F                   _ADCON1 009F  
                 ?_myISR 0070                   _ADRESH 001E                   _ADRESL 009E  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
                 saved_w 007E  __end_of__initialization 0022           __pcstackCOMMON 0070  
           __pidataBANK0 012F            __end_of_myISR 009C            __end_of_setup 011C  
                ??_myISR 0070                  ??_setup 0074               __pmaintext 009C  
             __pintentry 0004                  __ptext1 00DD                  __ptext2 0026  
   end_of_initialization 0022                _PORTBbits 0006                _PORTEbits 0009  
    start_initialization 000F               init_fetch0 011C              __pdataBANK0 0020  
            __pbssCOMMON 0078                ___latbits 0002           __size_of_myISR 0076  
         __size_of_setup 003F        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F            __size_of_main 0041             _timer0_count 007A  
             _INTCONbits 000B                 init_ram0 0120                 intlevel1 0000  
             _OPTION_REG 0081            _display_array 0020            _display_count 007B  
