

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 22:14:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  012F                     __pidataBANK0:
   210                           
   211                           ;initializer for _display_array
   212  012F  343F               	retlw	63
   213  0130  3406               	retlw	6
   214  0131  345B               	retlw	91
   215  0132  344F               	retlw	79
   216  0133  3466               	retlw	102
   217  0134  346D               	retlw	109
   218  0135  347D               	retlw	125
   219  0136  3407               	retlw	7
   220  0137  347F               	retlw	127
   221  0138  346F               	retlw	111
   222  0139  3477               	retlw	119
   223  013A  347C               	retlw	124
   224  013B  3439               	retlw	57
   225  013C  345E               	retlw	94
   226  013D  3479               	retlw	121
   227  013E  3471               	retlw	113
   228  0001                     _TMR0	set	1
   229  0009                     _PORTE	set	9
   230  0008                     _PORTD	set	8
   231  0007                     _PORTC	set	7
   232  0006                     _PORTB	set	6
   233  0005                     _PORTA	set	5
   234  001F                     _ADCON0	set	31
   235  000C                     _PIR1	set	12
   236  000B                     _INTCON	set	11
   237  0009                     _PORTEbits	set	9
   238  001E                     _ADRESH	set	30
   239  001F                     _ADCON0bits	set	31
   240  000C                     _PIR1bits	set	12
   241  0006                     _PORTBbits	set	6
   242  000B                     _INTCONbits	set	11
   243  0089                     _TRISE	set	137
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0096                     _IOCB	set	150
   247  0086                     _TRISB	set	134
   248  0085                     _TRISA	set	133
   249  0081                     _OPTION_REG	set	129
   250  009E                     _ADRESL	set	158
   251  009F                     _ADCON1	set	159
   252  008C                     _PIE1	set	140
   253  0189                     _ANSELH	set	393
   254  0188                     _ANSEL	set	392
   255                           
   256                           	psect	cinit
   257  000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260  000F                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK0
   263  000F  1383               	bcf	3,7	;select IRP bank0
   264  0010  3030               	movlw	low (__pdataBANK0+16)
   265  0011  00FD               	movwf	btemp+-1
   266  0012  3001               	movlw	high __pidataBANK0
   267  0013  00FE               	movwf	btemp
   268  0014  302F               	movlw	low __pidataBANK0
   269  0015  00FF               	movwf	btemp+1
   270  0016  3020               	movlw	low __pdataBANK0
   271  0017  0084               	movwf	4
   272  0018  120A  118A  2120  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Clear objects allocated to COMMON
   275  001D  01F8               	clrf	__pbssCOMMON& (0+127)
   276  001E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   277  001F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   278  0020  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   279  0021  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   280  0022                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  0022                     __end_of__initialization:
   284  0022  0183               	clrf	3
   285  0023  120A  118A  289B   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0078                     __pbssCOMMON:
   289  0078                     _first_display:
   290  0078                     	ds	1
   291  0079                     _second_display:
   292  0079                     	ds	1
   293  007A                     _timer0_count:
   294  007A                     	ds	1
   295  007B                     _display_count:
   296  007B                     	ds	1
   297  007C                     _reference_count:
   298  007C                     	ds	1
   299                           
   300                           	psect	dataBANK0
   301  0020                     __pdataBANK0:
   302  0020                     _display_array:
   303  0020                     	ds	16
   304                           
   305                           	psect	inittext
   306  011C                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309  011C  087E               	movf	btemp,w
   310  011D  008A               	movwf	10
   311  011E  087F               	movf	btemp+1,w
   312  011F  0082               	movwf	2
   313  0120                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320  0120  120A  118A  211C  120A  118A  	fcall	init_fetch0
   321  0125  0080               	movwf	0
   322  0126  0A84               	incf	4,f
   323  0127  0804               	movf	4,w
   324  0128  067D               	xorwf	btemp+-1,w
   325  0129  1903               	btfsc	3,2
   326  012A  3400               	retlw	0
   327  012B  0AFF               	incf	btemp+1,f
   328  012C  1903               	btfsc	3,2
   329  012D  0AFE               	incf	btemp,f
   330  012E  2920               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_myISR:
   335  0070                     ??_myISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_setup:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	4
   347  0074                     ??_setup:
   348  0074                     ??_main:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 1 bytes @ 0x4
   353  0074                     	ds	4
   354                           
   355                           	psect	maintext
   356  009B                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 125 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          4       0       0       0       0
   379 ;;      Totals:         4       0       0       0       0
   380 ;;Total ram usage:        4 bytes
   381 ;; Hardware stack levels required when called:    2
   382 ;; This function calls:
   383 ;;		_setup
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _main
   391  009B                     _main:
   392  009B                     l763:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;main.c: 126:     setup();
   398  009B  120A  118A  20DD  120A  118A  	fcall	_setup
   399  00A0                     l765:
   400                           
   401                           ;main.c: 127:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   402  00A0  3010               	movlw	16
   403  00A1  00F4               	movwf	??_main
   404  00A2                     u177:
   405  00A2  0BF4               	decfsz	??_main,f
   406  00A3  28A2               	goto	u177
   407  00A4  0000               	nop
   408  00A5                     l767:
   409                           
   410                           ;main.c: 128:     ADCON0bits.GO_nDONE = 1;
   411  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   412  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   413  00A7  149F               	bsf	31,1	;volatile
   414  00A8                     l769:
   415                           
   416                           ;main.c: 129:     PORTEbits.RE0 = 1;
   417  00A8  1409               	bsf	9,0	;volatile
   418  00A9                     l771:
   419                           
   420                           ;main.c: 130:     TMR0 = 212;
   421  00A9  30D4               	movlw	212
   422  00AA  0081               	movwf	1	;volatile
   423  00AB                     l773:
   424                           
   425                           ;main.c: 132:         PORTC = reference_count;
   426  00AB  087C               	movf	_reference_count,w	;volatile
   427  00AC  0087               	movwf	7	;volatile
   428  00AD                     l775:
   429                           
   430                           ;main.c: 133:         PORTD = display_array[display_count];
   431  00AD  087B               	movf	_display_count,w
   432  00AE  3E20               	addlw	(low (_display_array| 0))& (0+255)
   433  00AF  0084               	movwf	4
   434  00B0  1383               	bcf	3,7	;select IRP bank0
   435  00B1  0800               	movf	0,w
   436  00B2  0088               	movwf	8	;volatile
   437  00B3                     l777:
   438                           
   439                           ;main.c: 134:         if (reference_count < ((second_display<<4) + first_display)){
   440  00B3  0879               	movf	_second_display,w	;volatile
   441  00B4  00F4               	movwf	??_main
   442  00B5  01F5               	clrf	??_main+1
   443  00B6  0EF4               	swapf	??_main,f
   444  00B7  0EF5               	swapf	??_main+1,f
   445  00B8  30F0               	movlw	240
   446  00B9  05F5               	andwf	??_main+1,f
   447  00BA  0874               	movf	??_main,w
   448  00BB  390F               	andlw	15
   449  00BC  04F5               	iorwf	??_main+1,f
   450  00BD  30F0               	movlw	240
   451  00BE  05F4               	andwf	??_main,f
   452  00BF  0878               	movf	_first_display,w	;volatile
   453  00C0  0774               	addwf	??_main,w
   454  00C1  00F6               	movwf	??_main+2
   455  00C2  3000               	movlw	0
   456  00C3  1803               	skipnc
   457  00C4  3001               	movlw	1
   458  00C5  0775               	addwf	??_main+1,w
   459  00C6  00F7               	movwf	??_main+3
   460  00C7  0877               	movf	??_main+3,w
   461  00C8  3A80               	xorlw	128
   462  00C9  3C80               	sublw	128
   463  00CA  1D03               	skipz
   464  00CB  28CE               	goto	u165
   465  00CC  0876               	movf	??_main+2,w
   466  00CD  027C               	subwf	_reference_count,w	;volatile
   467  00CE                     u165:
   468  00CE  1803               	skipnc
   469  00CF  28D1               	goto	u161
   470  00D0  28D2               	goto	u160
   471  00D1                     u161:
   472  00D1  28D6               	goto	l89
   473  00D2                     u160:
   474  00D2                     l779:
   475                           
   476                           ;main.c: 135:             PORTEbits.RE2 = 1;
   477  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   478  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   479  00D4  1509               	bsf	9,2	;volatile
   480                           
   481                           ;main.c: 136:         }
   482  00D5  28AB               	goto	l773
   483  00D6                     l89:	
   484                           ;main.c: 137:         else{
   485                           
   486                           
   487                           ;main.c: 138:            PORTEbits.RE2 = 0;
   488  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   489  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   490  00D8  1109               	bcf	9,2	;volatile
   491  00D9  28AB               	goto	l773
   492  00DA  120A  118A  280C   	ljmp	start
   493  00DD                     __end_of_main:
   494                           
   495                           	psect	text1
   496  00DD                     __ptext1:	
   497 ;; *************** function _setup *****************
   498 ;; Defined at:
   499 ;;		line 89 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, status,2
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _setup
   529  00DD                     _setup:
   530  00DD                     l685:	
   531                           ;incstack = 0
   532                           ; Regs used in _setup: [wreg+status,2]
   533                           
   534                           
   535                           ;main.c: 91:     INTCON = 0b11101000;
   536  00DD  30E8               	movlw	232
   537  00DE  008B               	movwf	11	;volatile
   538                           
   539                           ;main.c: 92:     PIR1 = 0b01000000;
   540  00DF  3040               	movlw	64
   541  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   542  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   543  00E2  008C               	movwf	12	;volatile
   544                           
   545                           ;main.c: 93:     PIE1 = 0b01000000;
   546  00E3  3040               	movlw	64
   547  00E4  1683               	bsf	3,5	;RP0=1, select bank1
   548  00E5  1303               	bcf	3,6	;RP1=0, select bank1
   549  00E6  008C               	movwf	12	;volatile
   550  00E7                     l687:
   551                           
   552                           ;main.c: 94:     ADCON1 = 0;
   553  00E7  019F               	clrf	31	;volatile
   554  00E8                     l689:
   555                           
   556                           ;main.c: 95:     ADCON0 = 0b10000001;
   557  00E8  3081               	movlw	129
   558  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   559  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   560  00EB  009F               	movwf	31	;volatile
   561                           
   562                           ;main.c: 97:     ADRESH = 0;
   563  00EC  019E               	clrf	30	;volatile
   564                           
   565                           ;main.c: 98:     ADRESL = 0;
   566  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   567  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   568  00EF  019E               	clrf	30	;volatile
   569  00F0                     l691:
   570                           
   571                           ;main.c: 100:     OPTION_REG = 0b00000110;
   572  00F0  3006               	movlw	6
   573  00F1  0081               	movwf	1	;volatile
   574  00F2                     l693:
   575                           
   576                           ;main.c: 102:     ANSEL = 0b00000001;
   577  00F2  3001               	movlw	1
   578  00F3  1683               	bsf	3,5	;RP0=1, select bank3
   579  00F4  1703               	bsf	3,6	;RP1=1, select bank3
   580  00F5  0088               	movwf	8	;volatile
   581  00F6                     l695:
   582                           
   583                           ;main.c: 103:     TRISA = 0b00000001;
   584  00F6  3001               	movlw	1
   585  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   586  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   587  00F9  0085               	movwf	5	;volatile
   588  00FA                     l697:
   589                           
   590                           ;main.c: 104:     PORTA = 0;
   591  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   592  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   593  00FC  0185               	clrf	5	;volatile
   594  00FD                     l699:
   595                           
   596                           ;main.c: 107:     ANSELH = 0;
   597  00FD  1683               	bsf	3,5	;RP0=1, select bank3
   598  00FE  1703               	bsf	3,6	;RP1=1, select bank3
   599  00FF  0189               	clrf	9	;volatile
   600  0100                     l701:
   601                           
   602                           ;main.c: 108:     TRISB = 0b00000011;
   603  0100  3003               	movlw	3
   604  0101  1683               	bsf	3,5	;RP0=1, select bank1
   605  0102  1303               	bcf	3,6	;RP1=0, select bank1
   606  0103  0086               	movwf	6	;volatile
   607                           
   608                           ;main.c: 109:     PORTB = 0;
   609  0104  1283               	bcf	3,5	;RP0=0, select bank0
   610  0105  1303               	bcf	3,6	;RP1=0, select bank0
   611  0106  0186               	clrf	6	;volatile
   612  0107                     l703:
   613                           
   614                           ;main.c: 110:     IOCB = 0b00000011;
   615  0107  3003               	movlw	3
   616  0108  1683               	bsf	3,5	;RP0=1, select bank1
   617  0109  1303               	bcf	3,6	;RP1=0, select bank1
   618  010A  0096               	movwf	22	;volatile
   619  010B                     l705:
   620                           
   621                           ;main.c: 112:     TRISC = 0;
   622  010B  0187               	clrf	7	;volatile
   623  010C                     l707:
   624                           
   625                           ;main.c: 113:     PORTC = 0;
   626  010C  1283               	bcf	3,5	;RP0=0, select bank0
   627  010D  1303               	bcf	3,6	;RP1=0, select bank0
   628  010E  0187               	clrf	7	;volatile
   629  010F                     l709:
   630                           
   631                           ;main.c: 115:     TRISD = 0;
   632  010F  1683               	bsf	3,5	;RP0=1, select bank1
   633  0110  1303               	bcf	3,6	;RP1=0, select bank1
   634  0111  0188               	clrf	8	;volatile
   635  0112                     l711:
   636                           
   637                           ;main.c: 116:     PORTD = 0;
   638  0112  1283               	bcf	3,5	;RP0=0, select bank0
   639  0113  1303               	bcf	3,6	;RP1=0, select bank0
   640  0114  0188               	clrf	8	;volatile
   641  0115                     l713:
   642                           
   643                           ;main.c: 118:     TRISE = 0;
   644  0115  1683               	bsf	3,5	;RP0=1, select bank1
   645  0116  1303               	bcf	3,6	;RP1=0, select bank1
   646  0117  0189               	clrf	9	;volatile
   647  0118                     l715:
   648                           
   649                           ;main.c: 119:     PORTE = 0;
   650  0118  1283               	bcf	3,5	;RP0=0, select bank0
   651  0119  1303               	bcf	3,6	;RP1=0, select bank0
   652  011A  0189               	clrf	9	;volatile
   653  011B                     l83:
   654  011B  0008               	return
   655  011C                     __end_of_setup:
   656                           
   657                           	psect	text2
   658  0026                     __ptext2:	
   659 ;; *************** function _myISR *****************
   660 ;; Defined at:
   661 ;;		line 53 in file "main.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          4       0       0       0       0
   678 ;;      Totals:         4       0       0       0       0
   679 ;;Total ram usage:        4 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		Interrupt level 1
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _myISR
   690  0026                     _myISR:
   691  0026                     i1l717:
   692                           
   693                           ;main.c: 55:     if (INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1){
   694  0026  1D8B               	btfss	11,3	;volatile
   695  0027  2829               	goto	u1_21
   696  0028  282A               	goto	u1_20
   697  0029                     u1_21:
   698  0029  283F               	goto	i1l731
   699  002A                     u1_20:
   700  002A                     i1l719:
   701  002A  1C0B               	btfss	11,0	;volatile
   702  002B  282D               	goto	u2_21
   703  002C  282E               	goto	u2_20
   704  002D                     u2_21:
   705  002D  283F               	goto	i1l731
   706  002E                     u2_20:
   707  002E                     i1l721:
   708                           
   709                           ;main.c: 56:         if (PORTBbits.RB0 == 0){
   710  002E  1283               	bcf	3,5	;RP0=0, select bank0
   711  002F  1303               	bcf	3,6	;RP1=0, select bank0
   712  0030  1806               	btfsc	6,0	;volatile
   713  0031  2833               	goto	u3_21
   714  0032  2834               	goto	u3_20
   715  0033                     u3_21:
   716  0033  2838               	goto	i1l725
   717  0034                     u3_20:
   718  0034                     i1l723:
   719                           
   720                           ;main.c: 57:             reference_count++;
   721  0034  3001               	movlw	1
   722  0035  00F0               	movwf	??_myISR
   723  0036  0870               	movf	??_myISR,w
   724  0037  07FC               	addwf	_reference_count,f	;volatile
   725  0038                     i1l725:
   726                           
   727                           ;main.c: 59:         if (PORTBbits.RB1 == 0){
   728  0038  1886               	btfsc	6,1	;volatile
   729  0039  283B               	goto	u4_21
   730  003A  283C               	goto	u4_20
   731  003B                     u4_21:
   732  003B  283E               	goto	i1l729
   733  003C                     u4_20:
   734  003C                     i1l727:
   735                           
   736                           ;main.c: 60:             reference_count--;
   737  003C  3001               	movlw	1
   738  003D  02FC               	subwf	_reference_count,f	;volatile
   739  003E                     i1l729:
   740                           
   741                           ;main.c: 62:         INTCONbits.RBIF=0;
   742  003E  100B               	bcf	11,0	;volatile
   743  003F                     i1l731:
   744                           
   745                           ;main.c: 65:     if (PIR1bits.ADIF == 1 && ADCON0bits.GO_nDONE == 0){
   746  003F  1283               	bcf	3,5	;RP0=0, select bank0
   747  0040  1303               	bcf	3,6	;RP1=0, select bank0
   748  0041  1F0C               	btfss	12,6	;volatile
   749  0042  2844               	goto	u5_21
   750  0043  2845               	goto	u5_20
   751  0044                     u5_21:
   752  0044  2864               	goto	i1l745
   753  0045                     u5_20:
   754  0045                     i1l733:
   755  0045  189F               	btfsc	31,1	;volatile
   756  0046  2848               	goto	u6_21
   757  0047  2849               	goto	u6_20
   758  0048                     u6_21:
   759  0048  2864               	goto	i1l745
   760  0049                     u6_20:
   761  0049                     i1l735:
   762                           
   763                           ;main.c: 66:         second_display = (ADRESH & 0xF0)>>4;
   764  0049  081E               	movf	30,w	;volatile
   765  004A  00F0               	movwf	??_myISR
   766  004B  3004               	movlw	4
   767  004C                     u7_25:
   768  004C  1003               	clrc
   769  004D  0CF0               	rrf	??_myISR,f
   770  004E  3EFF               	addlw	-1
   771  004F  1D03               	skipz
   772  0050  284C               	goto	u7_25
   773  0051  0870               	movf	??_myISR,w
   774  0052  390F               	andlw	15
   775  0053  00F1               	movwf	??_myISR+1
   776  0054  0871               	movf	??_myISR+1,w
   777  0055  00F9               	movwf	_second_display	;volatile
   778  0056                     i1l737:
   779                           
   780                           ;main.c: 67:         first_display = (ADRESH & 0x0F);
   781  0056  081E               	movf	30,w	;volatile
   782  0057  390F               	andlw	15
   783  0058  00F0               	movwf	??_myISR
   784  0059  0870               	movf	??_myISR,w
   785  005A  00F8               	movwf	_first_display	;volatile
   786  005B                     i1l739:
   787                           
   788                           ;main.c: 68:         _delay((unsigned long)((25)*(8000000/4000000.0)));
   789  005B  3010               	movlw	16
   790  005C  00F0               	movwf	??_myISR
   791  005D                     u18_27:
   792  005D  0BF0               	decfsz	??_myISR,f
   793  005E  285D               	goto	u18_27
   794  005F  0000               	nop
   795  0060                     i1l741:
   796                           
   797                           ;main.c: 69:         ADCON0bits.GO_nDONE = 1;
   798  0060  1283               	bcf	3,5	;RP0=0, select bank0
   799  0061  1303               	bcf	3,6	;RP1=0, select bank0
   800  0062  149F               	bsf	31,1	;volatile
   801  0063                     i1l743:
   802                           
   803                           ;main.c: 70:         PIR1bits.ADIF = 0;
   804  0063  130C               	bcf	12,6	;volatile
   805  0064                     i1l745:
   806                           
   807                           ;main.c: 73:     if (INTCONbits.T0IE == 1 && INTCONbits.T0IF == 1){
   808  0064  1E8B               	btfss	11,5	;volatile
   809  0065  2867               	goto	u8_21
   810  0066  2868               	goto	u8_20
   811  0067                     u8_21:
   812  0067  2894               	goto	i1l80
   813  0068                     u8_20:
   814  0068                     i1l747:
   815  0068  1D0B               	btfss	11,2	;volatile
   816  0069  286B               	goto	u9_21
   817  006A  286C               	goto	u9_20
   818  006B                     u9_21:
   819  006B  2894               	goto	i1l80
   820  006C                     u9_20:
   821  006C                     i1l749:
   822                           
   823                           ;main.c: 74:         PORTEbits.RE1 = PORTEbits.RE0;
   824  006C  1809               	btfsc	9,0	;volatile
   825  006D  286F               	goto	u10_21
   826  006E  2873               	goto	u10_20
   827  006F                     u10_21:
   828  006F  1283               	bcf	3,5	;RP0=0, select bank0
   829  0070  1303               	bcf	3,6	;RP1=0, select bank0
   830  0071  1489               	bsf	9,1	;volatile
   831  0072  2876               	goto	u11_24
   832  0073                     u10_20:
   833  0073  1283               	bcf	3,5	;RP0=0, select bank0
   834  0074  1303               	bcf	3,6	;RP1=0, select bank0
   835  0075  1089               	bcf	9,1	;volatile
   836  0076                     u11_24:
   837  0076                     i1l751:
   838                           
   839                           ;main.c: 75:         PORTEbits.RE0 = !PORTEbits.RE1;
   840  0076  1003               	clrc
   841  0077  1C89               	btfss	9,1	;volatile
   842  0078  1403               	setc
   843  0079  1803               	btfsc	3,0
   844  007A  287C               	goto	u12_21
   845  007B  2880               	goto	u12_20
   846  007C                     u12_21:
   847  007C  1283               	bcf	3,5	;RP0=0, select bank0
   848  007D  1303               	bcf	3,6	;RP1=0, select bank0
   849  007E  1409               	bsf	9,0	;volatile
   850  007F  2883               	goto	u13_24
   851  0080                     u12_20:
   852  0080  1283               	bcf	3,5	;RP0=0, select bank0
   853  0081  1303               	bcf	3,6	;RP1=0, select bank0
   854  0082  1009               	bcf	9,0	;volatile
   855  0083                     u13_24:
   856  0083                     i1l753:
   857                           
   858                           ;main.c: 76:         if (PORTEbits.RE0){
   859  0083  1C09               	btfss	9,0	;volatile
   860  0084  2886               	goto	u14_21
   861  0085  2887               	goto	u14_20
   862  0086                     u14_21:
   863  0086  288B               	goto	i1l757
   864  0087                     u14_20:
   865  0087                     i1l755:
   866                           
   867                           ;main.c: 77:             display_count = first_display;
   868  0087  0878               	movf	_first_display,w	;volatile
   869  0088  00F0               	movwf	??_myISR
   870  0089  0870               	movf	??_myISR,w
   871  008A  00FB               	movwf	_display_count	;volatile
   872  008B                     i1l757:
   873                           
   874                           ;main.c: 79:         if (PORTEbits.RE1){
   875  008B  1C89               	btfss	9,1	;volatile
   876  008C  288E               	goto	u15_21
   877  008D  288F               	goto	u15_20
   878  008E                     u15_21:
   879  008E  2893               	goto	i1l761
   880  008F                     u15_20:
   881  008F                     i1l759:
   882                           
   883                           ;main.c: 80:             display_count = second_display;
   884  008F  0879               	movf	_second_display,w	;volatile
   885  0090  00F0               	movwf	??_myISR
   886  0091  0870               	movf	??_myISR,w
   887  0092  00FB               	movwf	_display_count	;volatile
   888  0093                     i1l761:
   889                           
   890                           ;main.c: 82:         INTCONbits.T0IF = 0;
   891  0093  110B               	bcf	11,2	;volatile
   892  0094                     i1l80:
   893  0094  0873               	movf	??_myISR+3,w
   894  0095  008A               	movwf	10
   895  0096  0E72               	swapf	??_myISR+2,w
   896  0097  0083               	movwf	3
   897  0098  0EFE               	swapf	btemp,f
   898  0099  0E7E               	swapf	btemp,w
   899  009A  0009               	retfie
   900  009B                     __end_of_myISR:
   901  007E                     btemp	set	126	;btemp
   902  007E                     wtemp0	set	126
   903                           
   904                           	psect	intentry
   905  0004                     __pintentry:	
   906                           ;incstack = 0
   907                           ; Regs used in _myISR: [wreg+status,2+status,0]
   908                           
   909  0004                     interrupt_function:
   910  007E                     saved_w	set	btemp
   911  0004  00FE               	movwf	btemp
   912  0005  0E03               	swapf	3,w
   913  0006  00F2               	movwf	??_myISR+2
   914  0007  080A               	movf	10,w
   915  0008  00F3               	movwf	??_myISR+3
   916  0009  120A  118A  2826   	ljmp	_myISR
   917                           
   918                           	psect	config
   919                           
   920                           ;Config register CONFIG1 @ 0x2007
   921                           ;	Oscillator Selection bits
   922                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   923                           ;	Watchdog Timer Enable bit
   924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   925                           ;	Power-up Timer Enable bit
   926                           ;	PWRTE = OFF, PWRT disabled
   927                           ;	RE3/MCLR pin function select bit
   928                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   929                           ;	Code Protection bit
   930                           ;	CP = OFF, Program memory code protection is disabled
   931                           ;	Data Code Protection bit
   932                           ;	CPD = OFF, Data memory code protection is disabled
   933                           ;	Brown Out Reset Selection bits
   934                           ;	BOREN = OFF, BOR disabled
   935                           ;	Internal External Switchover bit
   936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   937                           ;	Fail-Safe Clock Monitor Enabled bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   939                           ;	Low Voltage Programming Enable bit
   940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   941                           ;	In-Circuit Debugger Mode bit
   942                           ;	DEBUG = 0x1, unprogrammed default
   943  2007                     	org	8199
   944  2007  20F1               	dw	8433
   945                           
   946                           ;Config register CONFIG2 @ 0x2008
   947                           ;	Brown-out Reset Selection bit
   948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   949                           ;	Flash Program Memory Self Write Enable bits
   950                           ;	WRT = OFF, Write protection off
   951  2008                     	org	8200
   952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              4 COMMON     4     4      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 22:14:22 2021

                      pc 0002                       l83 011B          _reference_count 007C  
                     l89 00D6                       fsr 0004                      l701 0100  
                    l711 0112                      l703 0107                      l713 0115  
                    l705 010B                      l715 0118                      l707 010C  
                    l709 010F                      l691 00F0                      l771 00A9  
                    l763 009B                      l693 00F2                      l685 00DD  
                    l773 00AB                      l765 00A0                      l695 00F6  
                    l687 00E7                      l775 00AD                      l767 00A5  
                    l697 00FA                      l689 00E8                      l777 00B3  
                    l769 00A8                      l699 00FD                      l779 00D2  
                    u160 00D2                      u161 00D1                      u165 00CE  
                    u177 00A2                      fsr0 0004                      indf 0000  
                   _IOCB 0096                     _PIE1 008C                     i1l80 0094  
                   _PIR1 000C                     _TMR0 0001                     u1_20 002A  
                   u1_21 0029                     u2_20 002E                     u2_21 002D  
                   u3_20 0034                     u3_21 0033                     u4_20 003C  
                   u4_21 003B                     u5_20 0045                     u5_21 0044  
                   u6_20 0049                     u6_21 0048                     u7_25 004C  
                   u8_20 0068                     u8_21 0067                     u9_20 006C  
                   u9_21 006B                     _main 009B                     btemp 007E  
                   start 000C                    ?_main 0070                    _ANSEL 0188  
                  i1l721 002E                    i1l723 0034                    i1l731 003F  
                  i1l741 0060                    i1l733 0045                    i1l725 0038  
                  i1l717 0026                    i1l751 0076                    i1l743 0063  
                  i1l735 0049                    i1l727 003C                    i1l719 002A  
                  i1l761 0093                    i1l753 0083                    i1l737 0056  
                  i1l745 0064                    i1l729 003E                    i1l755 0087  
                  i1l747 0068                    i1l739 005B                    i1l757 008B  
                  i1l749 006C                    i1l759 008F                    u10_20 0073  
                  u10_21 006F                    u11_24 0076                    u12_20 0080  
                  u12_21 007C                    u13_24 0083                    u14_20 0087  
                  u14_21 0086                    u15_20 008F                    u15_21 008E  
                  u18_27 005D                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _myISR 0026  
                  _setup 00DD                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00DD  
          _first_display 0078           _second_display 0079                   ??_main 0074  
                 _ADCON0 001F                   _ADCON1 009F                   ?_myISR 0070  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
                 _ANSELH 0189                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0022           __pcstackCOMMON 0070             __pidataBANK0 012F  
          __end_of_myISR 009B            __end_of_setup 011C                  ??_myISR 0070  
                ??_setup 0074               __pmaintext 009B               __pintentry 0004  
                __ptext1 00DD                  __ptext2 0026     end_of_initialization 0022  
              _PORTBbits 0006                _PORTEbits 0009      start_initialization 000F  
             init_fetch0 011C              __pdataBANK0 0020              __pbssCOMMON 0078  
              ___latbits 0002           __size_of_myISR 0075           __size_of_setup 003F  
      interrupt_function 0004                 _PIR1bits 000C               _ADCON0bits 001F  
          __size_of_main 0042             _timer0_count 007A               _INTCONbits 000B  
               init_ram0 0120                 intlevel1 0000               _OPTION_REG 0081  
          _display_array 0020            _display_count 007B  
